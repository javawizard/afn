// Generated by the protocol buffer compiler.  DO NOT EDIT!

package afn.libautobus.protocol;

public final class Protobuf {
  private Protobuf() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
  }
  public static final class MapEntry extends
      com.google.protobuf.GeneratedMessage {
    // Use MapEntry.newBuilder() to construct.
    private MapEntry() {}
    
    private static final MapEntry defaultInstance = new MapEntry();
    public static MapEntry getDefaultInstance() {
      return defaultInstance;
    }
    
    public MapEntry getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return afn.libautobus.protocol.Protobuf.internal_static_MapEntry_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return afn.libautobus.protocol.Protobuf.internal_static_MapEntry_fieldAccessorTable;
    }
    
    // required .Instance key = 1;
    public static final int KEY_FIELD_NUMBER = 1;
    private boolean hasKey;
    private afn.libautobus.protocol.Protobuf.Instance key_ = afn.libautobus.protocol.Protobuf.Instance.getDefaultInstance();
    public boolean hasKey() { return hasKey; }
    public afn.libautobus.protocol.Protobuf.Instance getKey() { return key_; }
    
    // required .Instance value = 2;
    public static final int VALUE_FIELD_NUMBER = 2;
    private boolean hasValue;
    private afn.libautobus.protocol.Protobuf.Instance value_ = afn.libautobus.protocol.Protobuf.Instance.getDefaultInstance();
    public boolean hasValue() { return hasValue; }
    public afn.libautobus.protocol.Protobuf.Instance getValue() { return value_; }
    
    public final boolean isInitialized() {
      if (!hasKey) return false;
      if (!hasValue) return false;
      if (!getKey().isInitialized()) return false;
      if (!getValue().isInitialized()) return false;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (hasKey()) {
        output.writeMessage(1, getKey());
      }
      if (hasValue()) {
        output.writeMessage(2, getValue());
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (hasKey()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getKey());
      }
      if (hasValue()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, getValue());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static afn.libautobus.protocol.Protobuf.MapEntry parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static afn.libautobus.protocol.Protobuf.MapEntry parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static afn.libautobus.protocol.Protobuf.MapEntry parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static afn.libautobus.protocol.Protobuf.MapEntry parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static afn.libautobus.protocol.Protobuf.MapEntry parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static afn.libautobus.protocol.Protobuf.MapEntry parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static afn.libautobus.protocol.Protobuf.MapEntry parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeDelimitedFrom(input).buildParsed();
    }
    public static afn.libautobus.protocol.Protobuf.MapEntry parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeDelimitedFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static afn.libautobus.protocol.Protobuf.MapEntry parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static afn.libautobus.protocol.Protobuf.MapEntry parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(afn.libautobus.protocol.Protobuf.MapEntry prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private afn.libautobus.protocol.Protobuf.MapEntry result;
      
      // Construct using afn.libautobus.protocol.Protobuf.MapEntry.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new afn.libautobus.protocol.Protobuf.MapEntry();
        return builder;
      }
      
      protected afn.libautobus.protocol.Protobuf.MapEntry internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new afn.libautobus.protocol.Protobuf.MapEntry();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return afn.libautobus.protocol.Protobuf.MapEntry.getDescriptor();
      }
      
      public afn.libautobus.protocol.Protobuf.MapEntry getDefaultInstanceForType() {
        return afn.libautobus.protocol.Protobuf.MapEntry.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public afn.libautobus.protocol.Protobuf.MapEntry build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private afn.libautobus.protocol.Protobuf.MapEntry buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public afn.libautobus.protocol.Protobuf.MapEntry buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        afn.libautobus.protocol.Protobuf.MapEntry returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof afn.libautobus.protocol.Protobuf.MapEntry) {
          return mergeFrom((afn.libautobus.protocol.Protobuf.MapEntry)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(afn.libautobus.protocol.Protobuf.MapEntry other) {
        if (other == afn.libautobus.protocol.Protobuf.MapEntry.getDefaultInstance()) return this;
        if (other.hasKey()) {
          mergeKey(other.getKey());
        }
        if (other.hasValue()) {
          mergeValue(other.getValue());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 10: {
              afn.libautobus.protocol.Protobuf.Instance.Builder subBuilder = afn.libautobus.protocol.Protobuf.Instance.newBuilder();
              if (hasKey()) {
                subBuilder.mergeFrom(getKey());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setKey(subBuilder.buildPartial());
              break;
            }
            case 18: {
              afn.libautobus.protocol.Protobuf.Instance.Builder subBuilder = afn.libautobus.protocol.Protobuf.Instance.newBuilder();
              if (hasValue()) {
                subBuilder.mergeFrom(getValue());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setValue(subBuilder.buildPartial());
              break;
            }
          }
        }
      }
      
      
      // required .Instance key = 1;
      public boolean hasKey() {
        return result.hasKey();
      }
      public afn.libautobus.protocol.Protobuf.Instance getKey() {
        return result.getKey();
      }
      public Builder setKey(afn.libautobus.protocol.Protobuf.Instance value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasKey = true;
        result.key_ = value;
        return this;
      }
      public Builder setKey(afn.libautobus.protocol.Protobuf.Instance.Builder builderForValue) {
        result.hasKey = true;
        result.key_ = builderForValue.build();
        return this;
      }
      public Builder mergeKey(afn.libautobus.protocol.Protobuf.Instance value) {
        if (result.hasKey() &&
            result.key_ != afn.libautobus.protocol.Protobuf.Instance.getDefaultInstance()) {
          result.key_ =
            afn.libautobus.protocol.Protobuf.Instance.newBuilder(result.key_).mergeFrom(value).buildPartial();
        } else {
          result.key_ = value;
        }
        result.hasKey = true;
        return this;
      }
      public Builder clearKey() {
        result.hasKey = false;
        result.key_ = afn.libautobus.protocol.Protobuf.Instance.getDefaultInstance();
        return this;
      }
      
      // required .Instance value = 2;
      public boolean hasValue() {
        return result.hasValue();
      }
      public afn.libautobus.protocol.Protobuf.Instance getValue() {
        return result.getValue();
      }
      public Builder setValue(afn.libautobus.protocol.Protobuf.Instance value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasValue = true;
        result.value_ = value;
        return this;
      }
      public Builder setValue(afn.libautobus.protocol.Protobuf.Instance.Builder builderForValue) {
        result.hasValue = true;
        result.value_ = builderForValue.build();
        return this;
      }
      public Builder mergeValue(afn.libautobus.protocol.Protobuf.Instance value) {
        if (result.hasValue() &&
            result.value_ != afn.libautobus.protocol.Protobuf.Instance.getDefaultInstance()) {
          result.value_ =
            afn.libautobus.protocol.Protobuf.Instance.newBuilder(result.value_).mergeFrom(value).buildPartial();
        } else {
          result.value_ = value;
        }
        result.hasValue = true;
        return this;
      }
      public Builder clearValue() {
        result.hasValue = false;
        result.value_ = afn.libautobus.protocol.Protobuf.Instance.getDefaultInstance();
        return this;
      }
    }
    
    static {
      afn.libautobus.protocol.Protobuf.getDescriptor();
    }
    
    static {
      afn.libautobus.protocol.Protobuf.internalForceInit();
    }
  }
  
  public static final class StructEntry extends
      com.google.protobuf.GeneratedMessage {
    // Use StructEntry.newBuilder() to construct.
    private StructEntry() {}
    
    private static final StructEntry defaultInstance = new StructEntry();
    public static StructEntry getDefaultInstance() {
      return defaultInstance;
    }
    
    public StructEntry getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return afn.libautobus.protocol.Protobuf.internal_static_StructEntry_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return afn.libautobus.protocol.Protobuf.internal_static_StructEntry_fieldAccessorTable;
    }
    
    // required string key = 1;
    public static final int KEY_FIELD_NUMBER = 1;
    private boolean hasKey;
    private java.lang.String key_ = "";
    public boolean hasKey() { return hasKey; }
    public java.lang.String getKey() { return key_; }
    
    // required .Instance value = 2;
    public static final int VALUE_FIELD_NUMBER = 2;
    private boolean hasValue;
    private afn.libautobus.protocol.Protobuf.Instance value_ = afn.libautobus.protocol.Protobuf.Instance.getDefaultInstance();
    public boolean hasValue() { return hasValue; }
    public afn.libautobus.protocol.Protobuf.Instance getValue() { return value_; }
    
    public final boolean isInitialized() {
      if (!hasKey) return false;
      if (!hasValue) return false;
      if (!getValue().isInitialized()) return false;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (hasKey()) {
        output.writeString(1, getKey());
      }
      if (hasValue()) {
        output.writeMessage(2, getValue());
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (hasKey()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(1, getKey());
      }
      if (hasValue()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, getValue());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static afn.libautobus.protocol.Protobuf.StructEntry parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static afn.libautobus.protocol.Protobuf.StructEntry parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static afn.libautobus.protocol.Protobuf.StructEntry parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static afn.libautobus.protocol.Protobuf.StructEntry parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static afn.libautobus.protocol.Protobuf.StructEntry parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static afn.libautobus.protocol.Protobuf.StructEntry parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static afn.libautobus.protocol.Protobuf.StructEntry parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeDelimitedFrom(input).buildParsed();
    }
    public static afn.libautobus.protocol.Protobuf.StructEntry parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeDelimitedFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static afn.libautobus.protocol.Protobuf.StructEntry parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static afn.libautobus.protocol.Protobuf.StructEntry parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(afn.libautobus.protocol.Protobuf.StructEntry prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private afn.libautobus.protocol.Protobuf.StructEntry result;
      
      // Construct using afn.libautobus.protocol.Protobuf.StructEntry.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new afn.libautobus.protocol.Protobuf.StructEntry();
        return builder;
      }
      
      protected afn.libautobus.protocol.Protobuf.StructEntry internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new afn.libautobus.protocol.Protobuf.StructEntry();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return afn.libautobus.protocol.Protobuf.StructEntry.getDescriptor();
      }
      
      public afn.libautobus.protocol.Protobuf.StructEntry getDefaultInstanceForType() {
        return afn.libautobus.protocol.Protobuf.StructEntry.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public afn.libautobus.protocol.Protobuf.StructEntry build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private afn.libautobus.protocol.Protobuf.StructEntry buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public afn.libautobus.protocol.Protobuf.StructEntry buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        afn.libautobus.protocol.Protobuf.StructEntry returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof afn.libautobus.protocol.Protobuf.StructEntry) {
          return mergeFrom((afn.libautobus.protocol.Protobuf.StructEntry)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(afn.libautobus.protocol.Protobuf.StructEntry other) {
        if (other == afn.libautobus.protocol.Protobuf.StructEntry.getDefaultInstance()) return this;
        if (other.hasKey()) {
          setKey(other.getKey());
        }
        if (other.hasValue()) {
          mergeValue(other.getValue());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 10: {
              setKey(input.readString());
              break;
            }
            case 18: {
              afn.libautobus.protocol.Protobuf.Instance.Builder subBuilder = afn.libautobus.protocol.Protobuf.Instance.newBuilder();
              if (hasValue()) {
                subBuilder.mergeFrom(getValue());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setValue(subBuilder.buildPartial());
              break;
            }
          }
        }
      }
      
      
      // required string key = 1;
      public boolean hasKey() {
        return result.hasKey();
      }
      public java.lang.String getKey() {
        return result.getKey();
      }
      public Builder setKey(java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasKey = true;
        result.key_ = value;
        return this;
      }
      public Builder clearKey() {
        result.hasKey = false;
        result.key_ = getDefaultInstance().getKey();
        return this;
      }
      
      // required .Instance value = 2;
      public boolean hasValue() {
        return result.hasValue();
      }
      public afn.libautobus.protocol.Protobuf.Instance getValue() {
        return result.getValue();
      }
      public Builder setValue(afn.libautobus.protocol.Protobuf.Instance value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasValue = true;
        result.value_ = value;
        return this;
      }
      public Builder setValue(afn.libautobus.protocol.Protobuf.Instance.Builder builderForValue) {
        result.hasValue = true;
        result.value_ = builderForValue.build();
        return this;
      }
      public Builder mergeValue(afn.libautobus.protocol.Protobuf.Instance value) {
        if (result.hasValue() &&
            result.value_ != afn.libautobus.protocol.Protobuf.Instance.getDefaultInstance()) {
          result.value_ =
            afn.libautobus.protocol.Protobuf.Instance.newBuilder(result.value_).mergeFrom(value).buildPartial();
        } else {
          result.value_ = value;
        }
        result.hasValue = true;
        return this;
      }
      public Builder clearValue() {
        result.hasValue = false;
        result.value_ = afn.libautobus.protocol.Protobuf.Instance.getDefaultInstance();
        return this;
      }
    }
    
    static {
      afn.libautobus.protocol.Protobuf.getDescriptor();
    }
    
    static {
      afn.libautobus.protocol.Protobuf.internalForceInit();
    }
  }
  
  public static final class Instance extends
      com.google.protobuf.GeneratedMessage {
    // Use Instance.newBuilder() to construct.
    private Instance() {}
    
    private static final Instance defaultInstance = new Instance();
    public static Instance getDefaultInstance() {
      return defaultInstance;
    }
    
    public Instance getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return afn.libautobus.protocol.Protobuf.internal_static_Instance_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return afn.libautobus.protocol.Protobuf.internal_static_Instance_fieldAccessorTable;
    }
    
    // optional .IntegerInstance value1 = 1;
    public static final int VALUE1_FIELD_NUMBER = 1;
    private boolean hasValue1;
    private afn.libautobus.protocol.Protobuf.IntegerInstance value1_ = afn.libautobus.protocol.Protobuf.IntegerInstance.getDefaultInstance();
    public boolean hasValue1() { return hasValue1; }
    public afn.libautobus.protocol.Protobuf.IntegerInstance getValue1() { return value1_; }
    
    // optional .LongInstance value2 = 2;
    public static final int VALUE2_FIELD_NUMBER = 2;
    private boolean hasValue2;
    private afn.libautobus.protocol.Protobuf.LongInstance value2_ = afn.libautobus.protocol.Protobuf.LongInstance.getDefaultInstance();
    public boolean hasValue2() { return hasValue2; }
    public afn.libautobus.protocol.Protobuf.LongInstance getValue2() { return value2_; }
    
    // optional .DoubleInstance value3 = 3;
    public static final int VALUE3_FIELD_NUMBER = 3;
    private boolean hasValue3;
    private afn.libautobus.protocol.Protobuf.DoubleInstance value3_ = afn.libautobus.protocol.Protobuf.DoubleInstance.getDefaultInstance();
    public boolean hasValue3() { return hasValue3; }
    public afn.libautobus.protocol.Protobuf.DoubleInstance getValue3() { return value3_; }
    
    // optional .StringInstance value4 = 4;
    public static final int VALUE4_FIELD_NUMBER = 4;
    private boolean hasValue4;
    private afn.libautobus.protocol.Protobuf.StringInstance value4_ = afn.libautobus.protocol.Protobuf.StringInstance.getDefaultInstance();
    public boolean hasValue4() { return hasValue4; }
    public afn.libautobus.protocol.Protobuf.StringInstance getValue4() { return value4_; }
    
    // optional .TimestampInstance value5 = 5;
    public static final int VALUE5_FIELD_NUMBER = 5;
    private boolean hasValue5;
    private afn.libautobus.protocol.Protobuf.TimestampInstance value5_ = afn.libautobus.protocol.Protobuf.TimestampInstance.getDefaultInstance();
    public boolean hasValue5() { return hasValue5; }
    public afn.libautobus.protocol.Protobuf.TimestampInstance getValue5() { return value5_; }
    
    // optional .NullInstance value6 = 6;
    public static final int VALUE6_FIELD_NUMBER = 6;
    private boolean hasValue6;
    private afn.libautobus.protocol.Protobuf.NullInstance value6_ = afn.libautobus.protocol.Protobuf.NullInstance.getDefaultInstance();
    public boolean hasValue6() { return hasValue6; }
    public afn.libautobus.protocol.Protobuf.NullInstance getValue6() { return value6_; }
    
    // optional .ListInstance value7 = 7;
    public static final int VALUE7_FIELD_NUMBER = 7;
    private boolean hasValue7;
    private afn.libautobus.protocol.Protobuf.ListInstance value7_ = afn.libautobus.protocol.Protobuf.ListInstance.getDefaultInstance();
    public boolean hasValue7() { return hasValue7; }
    public afn.libautobus.protocol.Protobuf.ListInstance getValue7() { return value7_; }
    
    // optional .MapInstance value8 = 8;
    public static final int VALUE8_FIELD_NUMBER = 8;
    private boolean hasValue8;
    private afn.libautobus.protocol.Protobuf.MapInstance value8_ = afn.libautobus.protocol.Protobuf.MapInstance.getDefaultInstance();
    public boolean hasValue8() { return hasValue8; }
    public afn.libautobus.protocol.Protobuf.MapInstance getValue8() { return value8_; }
    
    // optional .StructInstance value9 = 9;
    public static final int VALUE9_FIELD_NUMBER = 9;
    private boolean hasValue9;
    private afn.libautobus.protocol.Protobuf.StructInstance value9_ = afn.libautobus.protocol.Protobuf.StructInstance.getDefaultInstance();
    public boolean hasValue9() { return hasValue9; }
    public afn.libautobus.protocol.Protobuf.StructInstance getValue9() { return value9_; }
    
    // optional .ExceptionInstance value10 = 10;
    public static final int VALUE10_FIELD_NUMBER = 10;
    private boolean hasValue10;
    private afn.libautobus.protocol.Protobuf.ExceptionInstance value10_ = afn.libautobus.protocol.Protobuf.ExceptionInstance.getDefaultInstance();
    public boolean hasValue10() { return hasValue10; }
    public afn.libautobus.protocol.Protobuf.ExceptionInstance getValue10() { return value10_; }
    
    // optional .BoolInstance value11 = 11;
    public static final int VALUE11_FIELD_NUMBER = 11;
    private boolean hasValue11;
    private afn.libautobus.protocol.Protobuf.BoolInstance value11_ = afn.libautobus.protocol.Protobuf.BoolInstance.getDefaultInstance();
    public boolean hasValue11() { return hasValue11; }
    public afn.libautobus.protocol.Protobuf.BoolInstance getValue11() { return value11_; }
    
    // required string value_n = 100;
    public static final int VALUE_N_FIELD_NUMBER = 100;
    private boolean hasValueN;
    private java.lang.String valueN_ = "";
    public boolean hasValueN() { return hasValueN; }
    public java.lang.String getValueN() { return valueN_; }
    
    public final boolean isInitialized() {
      if (!hasValueN) return false;
      if (hasValue1()) {
        if (!getValue1().isInitialized()) return false;
      }
      if (hasValue2()) {
        if (!getValue2().isInitialized()) return false;
      }
      if (hasValue3()) {
        if (!getValue3().isInitialized()) return false;
      }
      if (hasValue4()) {
        if (!getValue4().isInitialized()) return false;
      }
      if (hasValue5()) {
        if (!getValue5().isInitialized()) return false;
      }
      if (hasValue7()) {
        if (!getValue7().isInitialized()) return false;
      }
      if (hasValue8()) {
        if (!getValue8().isInitialized()) return false;
      }
      if (hasValue9()) {
        if (!getValue9().isInitialized()) return false;
      }
      if (hasValue11()) {
        if (!getValue11().isInitialized()) return false;
      }
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (hasValue1()) {
        output.writeMessage(1, getValue1());
      }
      if (hasValue2()) {
        output.writeMessage(2, getValue2());
      }
      if (hasValue3()) {
        output.writeMessage(3, getValue3());
      }
      if (hasValue4()) {
        output.writeMessage(4, getValue4());
      }
      if (hasValue5()) {
        output.writeMessage(5, getValue5());
      }
      if (hasValue6()) {
        output.writeMessage(6, getValue6());
      }
      if (hasValue7()) {
        output.writeMessage(7, getValue7());
      }
      if (hasValue8()) {
        output.writeMessage(8, getValue8());
      }
      if (hasValue9()) {
        output.writeMessage(9, getValue9());
      }
      if (hasValue10()) {
        output.writeMessage(10, getValue10());
      }
      if (hasValue11()) {
        output.writeMessage(11, getValue11());
      }
      if (hasValueN()) {
        output.writeString(100, getValueN());
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (hasValue1()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getValue1());
      }
      if (hasValue2()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, getValue2());
      }
      if (hasValue3()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, getValue3());
      }
      if (hasValue4()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, getValue4());
      }
      if (hasValue5()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(5, getValue5());
      }
      if (hasValue6()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(6, getValue6());
      }
      if (hasValue7()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(7, getValue7());
      }
      if (hasValue8()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(8, getValue8());
      }
      if (hasValue9()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(9, getValue9());
      }
      if (hasValue10()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(10, getValue10());
      }
      if (hasValue11()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(11, getValue11());
      }
      if (hasValueN()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(100, getValueN());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static afn.libautobus.protocol.Protobuf.Instance parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static afn.libautobus.protocol.Protobuf.Instance parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static afn.libautobus.protocol.Protobuf.Instance parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static afn.libautobus.protocol.Protobuf.Instance parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static afn.libautobus.protocol.Protobuf.Instance parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static afn.libautobus.protocol.Protobuf.Instance parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static afn.libautobus.protocol.Protobuf.Instance parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeDelimitedFrom(input).buildParsed();
    }
    public static afn.libautobus.protocol.Protobuf.Instance parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeDelimitedFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static afn.libautobus.protocol.Protobuf.Instance parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static afn.libautobus.protocol.Protobuf.Instance parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(afn.libautobus.protocol.Protobuf.Instance prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private afn.libautobus.protocol.Protobuf.Instance result;
      
      // Construct using afn.libautobus.protocol.Protobuf.Instance.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new afn.libautobus.protocol.Protobuf.Instance();
        return builder;
      }
      
      protected afn.libautobus.protocol.Protobuf.Instance internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new afn.libautobus.protocol.Protobuf.Instance();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return afn.libautobus.protocol.Protobuf.Instance.getDescriptor();
      }
      
      public afn.libautobus.protocol.Protobuf.Instance getDefaultInstanceForType() {
        return afn.libautobus.protocol.Protobuf.Instance.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public afn.libautobus.protocol.Protobuf.Instance build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private afn.libautobus.protocol.Protobuf.Instance buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public afn.libautobus.protocol.Protobuf.Instance buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        afn.libautobus.protocol.Protobuf.Instance returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof afn.libautobus.protocol.Protobuf.Instance) {
          return mergeFrom((afn.libautobus.protocol.Protobuf.Instance)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(afn.libautobus.protocol.Protobuf.Instance other) {
        if (other == afn.libautobus.protocol.Protobuf.Instance.getDefaultInstance()) return this;
        if (other.hasValue1()) {
          mergeValue1(other.getValue1());
        }
        if (other.hasValue2()) {
          mergeValue2(other.getValue2());
        }
        if (other.hasValue3()) {
          mergeValue3(other.getValue3());
        }
        if (other.hasValue4()) {
          mergeValue4(other.getValue4());
        }
        if (other.hasValue5()) {
          mergeValue5(other.getValue5());
        }
        if (other.hasValue6()) {
          mergeValue6(other.getValue6());
        }
        if (other.hasValue7()) {
          mergeValue7(other.getValue7());
        }
        if (other.hasValue8()) {
          mergeValue8(other.getValue8());
        }
        if (other.hasValue9()) {
          mergeValue9(other.getValue9());
        }
        if (other.hasValue10()) {
          mergeValue10(other.getValue10());
        }
        if (other.hasValue11()) {
          mergeValue11(other.getValue11());
        }
        if (other.hasValueN()) {
          setValueN(other.getValueN());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 10: {
              afn.libautobus.protocol.Protobuf.IntegerInstance.Builder subBuilder = afn.libautobus.protocol.Protobuf.IntegerInstance.newBuilder();
              if (hasValue1()) {
                subBuilder.mergeFrom(getValue1());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setValue1(subBuilder.buildPartial());
              break;
            }
            case 18: {
              afn.libautobus.protocol.Protobuf.LongInstance.Builder subBuilder = afn.libautobus.protocol.Protobuf.LongInstance.newBuilder();
              if (hasValue2()) {
                subBuilder.mergeFrom(getValue2());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setValue2(subBuilder.buildPartial());
              break;
            }
            case 26: {
              afn.libautobus.protocol.Protobuf.DoubleInstance.Builder subBuilder = afn.libautobus.protocol.Protobuf.DoubleInstance.newBuilder();
              if (hasValue3()) {
                subBuilder.mergeFrom(getValue3());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setValue3(subBuilder.buildPartial());
              break;
            }
            case 34: {
              afn.libautobus.protocol.Protobuf.StringInstance.Builder subBuilder = afn.libautobus.protocol.Protobuf.StringInstance.newBuilder();
              if (hasValue4()) {
                subBuilder.mergeFrom(getValue4());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setValue4(subBuilder.buildPartial());
              break;
            }
            case 42: {
              afn.libautobus.protocol.Protobuf.TimestampInstance.Builder subBuilder = afn.libautobus.protocol.Protobuf.TimestampInstance.newBuilder();
              if (hasValue5()) {
                subBuilder.mergeFrom(getValue5());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setValue5(subBuilder.buildPartial());
              break;
            }
            case 50: {
              afn.libautobus.protocol.Protobuf.NullInstance.Builder subBuilder = afn.libautobus.protocol.Protobuf.NullInstance.newBuilder();
              if (hasValue6()) {
                subBuilder.mergeFrom(getValue6());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setValue6(subBuilder.buildPartial());
              break;
            }
            case 58: {
              afn.libautobus.protocol.Protobuf.ListInstance.Builder subBuilder = afn.libautobus.protocol.Protobuf.ListInstance.newBuilder();
              if (hasValue7()) {
                subBuilder.mergeFrom(getValue7());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setValue7(subBuilder.buildPartial());
              break;
            }
            case 66: {
              afn.libautobus.protocol.Protobuf.MapInstance.Builder subBuilder = afn.libautobus.protocol.Protobuf.MapInstance.newBuilder();
              if (hasValue8()) {
                subBuilder.mergeFrom(getValue8());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setValue8(subBuilder.buildPartial());
              break;
            }
            case 74: {
              afn.libautobus.protocol.Protobuf.StructInstance.Builder subBuilder = afn.libautobus.protocol.Protobuf.StructInstance.newBuilder();
              if (hasValue9()) {
                subBuilder.mergeFrom(getValue9());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setValue9(subBuilder.buildPartial());
              break;
            }
            case 82: {
              afn.libautobus.protocol.Protobuf.ExceptionInstance.Builder subBuilder = afn.libautobus.protocol.Protobuf.ExceptionInstance.newBuilder();
              if (hasValue10()) {
                subBuilder.mergeFrom(getValue10());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setValue10(subBuilder.buildPartial());
              break;
            }
            case 90: {
              afn.libautobus.protocol.Protobuf.BoolInstance.Builder subBuilder = afn.libautobus.protocol.Protobuf.BoolInstance.newBuilder();
              if (hasValue11()) {
                subBuilder.mergeFrom(getValue11());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setValue11(subBuilder.buildPartial());
              break;
            }
            case 802: {
              setValueN(input.readString());
              break;
            }
          }
        }
      }
      
      
      // optional .IntegerInstance value1 = 1;
      public boolean hasValue1() {
        return result.hasValue1();
      }
      public afn.libautobus.protocol.Protobuf.IntegerInstance getValue1() {
        return result.getValue1();
      }
      public Builder setValue1(afn.libautobus.protocol.Protobuf.IntegerInstance value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasValue1 = true;
        result.value1_ = value;
        return this;
      }
      public Builder setValue1(afn.libautobus.protocol.Protobuf.IntegerInstance.Builder builderForValue) {
        result.hasValue1 = true;
        result.value1_ = builderForValue.build();
        return this;
      }
      public Builder mergeValue1(afn.libautobus.protocol.Protobuf.IntegerInstance value) {
        if (result.hasValue1() &&
            result.value1_ != afn.libautobus.protocol.Protobuf.IntegerInstance.getDefaultInstance()) {
          result.value1_ =
            afn.libautobus.protocol.Protobuf.IntegerInstance.newBuilder(result.value1_).mergeFrom(value).buildPartial();
        } else {
          result.value1_ = value;
        }
        result.hasValue1 = true;
        return this;
      }
      public Builder clearValue1() {
        result.hasValue1 = false;
        result.value1_ = afn.libautobus.protocol.Protobuf.IntegerInstance.getDefaultInstance();
        return this;
      }
      
      // optional .LongInstance value2 = 2;
      public boolean hasValue2() {
        return result.hasValue2();
      }
      public afn.libautobus.protocol.Protobuf.LongInstance getValue2() {
        return result.getValue2();
      }
      public Builder setValue2(afn.libautobus.protocol.Protobuf.LongInstance value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasValue2 = true;
        result.value2_ = value;
        return this;
      }
      public Builder setValue2(afn.libautobus.protocol.Protobuf.LongInstance.Builder builderForValue) {
        result.hasValue2 = true;
        result.value2_ = builderForValue.build();
        return this;
      }
      public Builder mergeValue2(afn.libautobus.protocol.Protobuf.LongInstance value) {
        if (result.hasValue2() &&
            result.value2_ != afn.libautobus.protocol.Protobuf.LongInstance.getDefaultInstance()) {
          result.value2_ =
            afn.libautobus.protocol.Protobuf.LongInstance.newBuilder(result.value2_).mergeFrom(value).buildPartial();
        } else {
          result.value2_ = value;
        }
        result.hasValue2 = true;
        return this;
      }
      public Builder clearValue2() {
        result.hasValue2 = false;
        result.value2_ = afn.libautobus.protocol.Protobuf.LongInstance.getDefaultInstance();
        return this;
      }
      
      // optional .DoubleInstance value3 = 3;
      public boolean hasValue3() {
        return result.hasValue3();
      }
      public afn.libautobus.protocol.Protobuf.DoubleInstance getValue3() {
        return result.getValue3();
      }
      public Builder setValue3(afn.libautobus.protocol.Protobuf.DoubleInstance value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasValue3 = true;
        result.value3_ = value;
        return this;
      }
      public Builder setValue3(afn.libautobus.protocol.Protobuf.DoubleInstance.Builder builderForValue) {
        result.hasValue3 = true;
        result.value3_ = builderForValue.build();
        return this;
      }
      public Builder mergeValue3(afn.libautobus.protocol.Protobuf.DoubleInstance value) {
        if (result.hasValue3() &&
            result.value3_ != afn.libautobus.protocol.Protobuf.DoubleInstance.getDefaultInstance()) {
          result.value3_ =
            afn.libautobus.protocol.Protobuf.DoubleInstance.newBuilder(result.value3_).mergeFrom(value).buildPartial();
        } else {
          result.value3_ = value;
        }
        result.hasValue3 = true;
        return this;
      }
      public Builder clearValue3() {
        result.hasValue3 = false;
        result.value3_ = afn.libautobus.protocol.Protobuf.DoubleInstance.getDefaultInstance();
        return this;
      }
      
      // optional .StringInstance value4 = 4;
      public boolean hasValue4() {
        return result.hasValue4();
      }
      public afn.libautobus.protocol.Protobuf.StringInstance getValue4() {
        return result.getValue4();
      }
      public Builder setValue4(afn.libautobus.protocol.Protobuf.StringInstance value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasValue4 = true;
        result.value4_ = value;
        return this;
      }
      public Builder setValue4(afn.libautobus.protocol.Protobuf.StringInstance.Builder builderForValue) {
        result.hasValue4 = true;
        result.value4_ = builderForValue.build();
        return this;
      }
      public Builder mergeValue4(afn.libautobus.protocol.Protobuf.StringInstance value) {
        if (result.hasValue4() &&
            result.value4_ != afn.libautobus.protocol.Protobuf.StringInstance.getDefaultInstance()) {
          result.value4_ =
            afn.libautobus.protocol.Protobuf.StringInstance.newBuilder(result.value4_).mergeFrom(value).buildPartial();
        } else {
          result.value4_ = value;
        }
        result.hasValue4 = true;
        return this;
      }
      public Builder clearValue4() {
        result.hasValue4 = false;
        result.value4_ = afn.libautobus.protocol.Protobuf.StringInstance.getDefaultInstance();
        return this;
      }
      
      // optional .TimestampInstance value5 = 5;
      public boolean hasValue5() {
        return result.hasValue5();
      }
      public afn.libautobus.protocol.Protobuf.TimestampInstance getValue5() {
        return result.getValue5();
      }
      public Builder setValue5(afn.libautobus.protocol.Protobuf.TimestampInstance value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasValue5 = true;
        result.value5_ = value;
        return this;
      }
      public Builder setValue5(afn.libautobus.protocol.Protobuf.TimestampInstance.Builder builderForValue) {
        result.hasValue5 = true;
        result.value5_ = builderForValue.build();
        return this;
      }
      public Builder mergeValue5(afn.libautobus.protocol.Protobuf.TimestampInstance value) {
        if (result.hasValue5() &&
            result.value5_ != afn.libautobus.protocol.Protobuf.TimestampInstance.getDefaultInstance()) {
          result.value5_ =
            afn.libautobus.protocol.Protobuf.TimestampInstance.newBuilder(result.value5_).mergeFrom(value).buildPartial();
        } else {
          result.value5_ = value;
        }
        result.hasValue5 = true;
        return this;
      }
      public Builder clearValue5() {
        result.hasValue5 = false;
        result.value5_ = afn.libautobus.protocol.Protobuf.TimestampInstance.getDefaultInstance();
        return this;
      }
      
      // optional .NullInstance value6 = 6;
      public boolean hasValue6() {
        return result.hasValue6();
      }
      public afn.libautobus.protocol.Protobuf.NullInstance getValue6() {
        return result.getValue6();
      }
      public Builder setValue6(afn.libautobus.protocol.Protobuf.NullInstance value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasValue6 = true;
        result.value6_ = value;
        return this;
      }
      public Builder setValue6(afn.libautobus.protocol.Protobuf.NullInstance.Builder builderForValue) {
        result.hasValue6 = true;
        result.value6_ = builderForValue.build();
        return this;
      }
      public Builder mergeValue6(afn.libautobus.protocol.Protobuf.NullInstance value) {
        if (result.hasValue6() &&
            result.value6_ != afn.libautobus.protocol.Protobuf.NullInstance.getDefaultInstance()) {
          result.value6_ =
            afn.libautobus.protocol.Protobuf.NullInstance.newBuilder(result.value6_).mergeFrom(value).buildPartial();
        } else {
          result.value6_ = value;
        }
        result.hasValue6 = true;
        return this;
      }
      public Builder clearValue6() {
        result.hasValue6 = false;
        result.value6_ = afn.libautobus.protocol.Protobuf.NullInstance.getDefaultInstance();
        return this;
      }
      
      // optional .ListInstance value7 = 7;
      public boolean hasValue7() {
        return result.hasValue7();
      }
      public afn.libautobus.protocol.Protobuf.ListInstance getValue7() {
        return result.getValue7();
      }
      public Builder setValue7(afn.libautobus.protocol.Protobuf.ListInstance value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasValue7 = true;
        result.value7_ = value;
        return this;
      }
      public Builder setValue7(afn.libautobus.protocol.Protobuf.ListInstance.Builder builderForValue) {
        result.hasValue7 = true;
        result.value7_ = builderForValue.build();
        return this;
      }
      public Builder mergeValue7(afn.libautobus.protocol.Protobuf.ListInstance value) {
        if (result.hasValue7() &&
            result.value7_ != afn.libautobus.protocol.Protobuf.ListInstance.getDefaultInstance()) {
          result.value7_ =
            afn.libautobus.protocol.Protobuf.ListInstance.newBuilder(result.value7_).mergeFrom(value).buildPartial();
        } else {
          result.value7_ = value;
        }
        result.hasValue7 = true;
        return this;
      }
      public Builder clearValue7() {
        result.hasValue7 = false;
        result.value7_ = afn.libautobus.protocol.Protobuf.ListInstance.getDefaultInstance();
        return this;
      }
      
      // optional .MapInstance value8 = 8;
      public boolean hasValue8() {
        return result.hasValue8();
      }
      public afn.libautobus.protocol.Protobuf.MapInstance getValue8() {
        return result.getValue8();
      }
      public Builder setValue8(afn.libautobus.protocol.Protobuf.MapInstance value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasValue8 = true;
        result.value8_ = value;
        return this;
      }
      public Builder setValue8(afn.libautobus.protocol.Protobuf.MapInstance.Builder builderForValue) {
        result.hasValue8 = true;
        result.value8_ = builderForValue.build();
        return this;
      }
      public Builder mergeValue8(afn.libautobus.protocol.Protobuf.MapInstance value) {
        if (result.hasValue8() &&
            result.value8_ != afn.libautobus.protocol.Protobuf.MapInstance.getDefaultInstance()) {
          result.value8_ =
            afn.libautobus.protocol.Protobuf.MapInstance.newBuilder(result.value8_).mergeFrom(value).buildPartial();
        } else {
          result.value8_ = value;
        }
        result.hasValue8 = true;
        return this;
      }
      public Builder clearValue8() {
        result.hasValue8 = false;
        result.value8_ = afn.libautobus.protocol.Protobuf.MapInstance.getDefaultInstance();
        return this;
      }
      
      // optional .StructInstance value9 = 9;
      public boolean hasValue9() {
        return result.hasValue9();
      }
      public afn.libautobus.protocol.Protobuf.StructInstance getValue9() {
        return result.getValue9();
      }
      public Builder setValue9(afn.libautobus.protocol.Protobuf.StructInstance value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasValue9 = true;
        result.value9_ = value;
        return this;
      }
      public Builder setValue9(afn.libautobus.protocol.Protobuf.StructInstance.Builder builderForValue) {
        result.hasValue9 = true;
        result.value9_ = builderForValue.build();
        return this;
      }
      public Builder mergeValue9(afn.libautobus.protocol.Protobuf.StructInstance value) {
        if (result.hasValue9() &&
            result.value9_ != afn.libautobus.protocol.Protobuf.StructInstance.getDefaultInstance()) {
          result.value9_ =
            afn.libautobus.protocol.Protobuf.StructInstance.newBuilder(result.value9_).mergeFrom(value).buildPartial();
        } else {
          result.value9_ = value;
        }
        result.hasValue9 = true;
        return this;
      }
      public Builder clearValue9() {
        result.hasValue9 = false;
        result.value9_ = afn.libautobus.protocol.Protobuf.StructInstance.getDefaultInstance();
        return this;
      }
      
      // optional .ExceptionInstance value10 = 10;
      public boolean hasValue10() {
        return result.hasValue10();
      }
      public afn.libautobus.protocol.Protobuf.ExceptionInstance getValue10() {
        return result.getValue10();
      }
      public Builder setValue10(afn.libautobus.protocol.Protobuf.ExceptionInstance value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasValue10 = true;
        result.value10_ = value;
        return this;
      }
      public Builder setValue10(afn.libautobus.protocol.Protobuf.ExceptionInstance.Builder builderForValue) {
        result.hasValue10 = true;
        result.value10_ = builderForValue.build();
        return this;
      }
      public Builder mergeValue10(afn.libautobus.protocol.Protobuf.ExceptionInstance value) {
        if (result.hasValue10() &&
            result.value10_ != afn.libautobus.protocol.Protobuf.ExceptionInstance.getDefaultInstance()) {
          result.value10_ =
            afn.libautobus.protocol.Protobuf.ExceptionInstance.newBuilder(result.value10_).mergeFrom(value).buildPartial();
        } else {
          result.value10_ = value;
        }
        result.hasValue10 = true;
        return this;
      }
      public Builder clearValue10() {
        result.hasValue10 = false;
        result.value10_ = afn.libautobus.protocol.Protobuf.ExceptionInstance.getDefaultInstance();
        return this;
      }
      
      // optional .BoolInstance value11 = 11;
      public boolean hasValue11() {
        return result.hasValue11();
      }
      public afn.libautobus.protocol.Protobuf.BoolInstance getValue11() {
        return result.getValue11();
      }
      public Builder setValue11(afn.libautobus.protocol.Protobuf.BoolInstance value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasValue11 = true;
        result.value11_ = value;
        return this;
      }
      public Builder setValue11(afn.libautobus.protocol.Protobuf.BoolInstance.Builder builderForValue) {
        result.hasValue11 = true;
        result.value11_ = builderForValue.build();
        return this;
      }
      public Builder mergeValue11(afn.libautobus.protocol.Protobuf.BoolInstance value) {
        if (result.hasValue11() &&
            result.value11_ != afn.libautobus.protocol.Protobuf.BoolInstance.getDefaultInstance()) {
          result.value11_ =
            afn.libautobus.protocol.Protobuf.BoolInstance.newBuilder(result.value11_).mergeFrom(value).buildPartial();
        } else {
          result.value11_ = value;
        }
        result.hasValue11 = true;
        return this;
      }
      public Builder clearValue11() {
        result.hasValue11 = false;
        result.value11_ = afn.libautobus.protocol.Protobuf.BoolInstance.getDefaultInstance();
        return this;
      }
      
      // required string value_n = 100;
      public boolean hasValueN() {
        return result.hasValueN();
      }
      public java.lang.String getValueN() {
        return result.getValueN();
      }
      public Builder setValueN(java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasValueN = true;
        result.valueN_ = value;
        return this;
      }
      public Builder clearValueN() {
        result.hasValueN = false;
        result.valueN_ = getDefaultInstance().getValueN();
        return this;
      }
    }
    
    static {
      afn.libautobus.protocol.Protobuf.getDescriptor();
    }
    
    static {
      afn.libautobus.protocol.Protobuf.internalForceInit();
    }
  }
  
  public static final class IntegerInstance extends
      com.google.protobuf.GeneratedMessage {
    // Use IntegerInstance.newBuilder() to construct.
    private IntegerInstance() {}
    
    private static final IntegerInstance defaultInstance = new IntegerInstance();
    public static IntegerInstance getDefaultInstance() {
      return defaultInstance;
    }
    
    public IntegerInstance getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return afn.libautobus.protocol.Protobuf.internal_static_IntegerInstance_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return afn.libautobus.protocol.Protobuf.internal_static_IntegerInstance_fieldAccessorTable;
    }
    
    // required fixed32 value = 1;
    public static final int VALUE_FIELD_NUMBER = 1;
    private boolean hasValue;
    private int value_ = 0;
    public boolean hasValue() { return hasValue; }
    public int getValue() { return value_; }
    
    public final boolean isInitialized() {
      if (!hasValue) return false;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (hasValue()) {
        output.writeFixed32(1, getValue());
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (hasValue()) {
        size += com.google.protobuf.CodedOutputStream
          .computeFixed32Size(1, getValue());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static afn.libautobus.protocol.Protobuf.IntegerInstance parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static afn.libautobus.protocol.Protobuf.IntegerInstance parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static afn.libautobus.protocol.Protobuf.IntegerInstance parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static afn.libautobus.protocol.Protobuf.IntegerInstance parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static afn.libautobus.protocol.Protobuf.IntegerInstance parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static afn.libautobus.protocol.Protobuf.IntegerInstance parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static afn.libautobus.protocol.Protobuf.IntegerInstance parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeDelimitedFrom(input).buildParsed();
    }
    public static afn.libautobus.protocol.Protobuf.IntegerInstance parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeDelimitedFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static afn.libautobus.protocol.Protobuf.IntegerInstance parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static afn.libautobus.protocol.Protobuf.IntegerInstance parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(afn.libautobus.protocol.Protobuf.IntegerInstance prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private afn.libautobus.protocol.Protobuf.IntegerInstance result;
      
      // Construct using afn.libautobus.protocol.Protobuf.IntegerInstance.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new afn.libautobus.protocol.Protobuf.IntegerInstance();
        return builder;
      }
      
      protected afn.libautobus.protocol.Protobuf.IntegerInstance internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new afn.libautobus.protocol.Protobuf.IntegerInstance();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return afn.libautobus.protocol.Protobuf.IntegerInstance.getDescriptor();
      }
      
      public afn.libautobus.protocol.Protobuf.IntegerInstance getDefaultInstanceForType() {
        return afn.libautobus.protocol.Protobuf.IntegerInstance.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public afn.libautobus.protocol.Protobuf.IntegerInstance build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private afn.libautobus.protocol.Protobuf.IntegerInstance buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public afn.libautobus.protocol.Protobuf.IntegerInstance buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        afn.libautobus.protocol.Protobuf.IntegerInstance returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof afn.libautobus.protocol.Protobuf.IntegerInstance) {
          return mergeFrom((afn.libautobus.protocol.Protobuf.IntegerInstance)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(afn.libautobus.protocol.Protobuf.IntegerInstance other) {
        if (other == afn.libautobus.protocol.Protobuf.IntegerInstance.getDefaultInstance()) return this;
        if (other.hasValue()) {
          setValue(other.getValue());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 13: {
              setValue(input.readFixed32());
              break;
            }
          }
        }
      }
      
      
      // required fixed32 value = 1;
      public boolean hasValue() {
        return result.hasValue();
      }
      public int getValue() {
        return result.getValue();
      }
      public Builder setValue(int value) {
        result.hasValue = true;
        result.value_ = value;
        return this;
      }
      public Builder clearValue() {
        result.hasValue = false;
        result.value_ = 0;
        return this;
      }
    }
    
    static {
      afn.libautobus.protocol.Protobuf.getDescriptor();
    }
    
    static {
      afn.libautobus.protocol.Protobuf.internalForceInit();
    }
  }
  
  public static final class LongInstance extends
      com.google.protobuf.GeneratedMessage {
    // Use LongInstance.newBuilder() to construct.
    private LongInstance() {}
    
    private static final LongInstance defaultInstance = new LongInstance();
    public static LongInstance getDefaultInstance() {
      return defaultInstance;
    }
    
    public LongInstance getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return afn.libautobus.protocol.Protobuf.internal_static_LongInstance_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return afn.libautobus.protocol.Protobuf.internal_static_LongInstance_fieldAccessorTable;
    }
    
    // required fixed64 value = 1;
    public static final int VALUE_FIELD_NUMBER = 1;
    private boolean hasValue;
    private long value_ = 0L;
    public boolean hasValue() { return hasValue; }
    public long getValue() { return value_; }
    
    public final boolean isInitialized() {
      if (!hasValue) return false;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (hasValue()) {
        output.writeFixed64(1, getValue());
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (hasValue()) {
        size += com.google.protobuf.CodedOutputStream
          .computeFixed64Size(1, getValue());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static afn.libautobus.protocol.Protobuf.LongInstance parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static afn.libautobus.protocol.Protobuf.LongInstance parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static afn.libautobus.protocol.Protobuf.LongInstance parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static afn.libautobus.protocol.Protobuf.LongInstance parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static afn.libautobus.protocol.Protobuf.LongInstance parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static afn.libautobus.protocol.Protobuf.LongInstance parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static afn.libautobus.protocol.Protobuf.LongInstance parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeDelimitedFrom(input).buildParsed();
    }
    public static afn.libautobus.protocol.Protobuf.LongInstance parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeDelimitedFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static afn.libautobus.protocol.Protobuf.LongInstance parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static afn.libautobus.protocol.Protobuf.LongInstance parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(afn.libautobus.protocol.Protobuf.LongInstance prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private afn.libautobus.protocol.Protobuf.LongInstance result;
      
      // Construct using afn.libautobus.protocol.Protobuf.LongInstance.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new afn.libautobus.protocol.Protobuf.LongInstance();
        return builder;
      }
      
      protected afn.libautobus.protocol.Protobuf.LongInstance internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new afn.libautobus.protocol.Protobuf.LongInstance();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return afn.libautobus.protocol.Protobuf.LongInstance.getDescriptor();
      }
      
      public afn.libautobus.protocol.Protobuf.LongInstance getDefaultInstanceForType() {
        return afn.libautobus.protocol.Protobuf.LongInstance.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public afn.libautobus.protocol.Protobuf.LongInstance build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private afn.libautobus.protocol.Protobuf.LongInstance buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public afn.libautobus.protocol.Protobuf.LongInstance buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        afn.libautobus.protocol.Protobuf.LongInstance returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof afn.libautobus.protocol.Protobuf.LongInstance) {
          return mergeFrom((afn.libautobus.protocol.Protobuf.LongInstance)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(afn.libautobus.protocol.Protobuf.LongInstance other) {
        if (other == afn.libautobus.protocol.Protobuf.LongInstance.getDefaultInstance()) return this;
        if (other.hasValue()) {
          setValue(other.getValue());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 9: {
              setValue(input.readFixed64());
              break;
            }
          }
        }
      }
      
      
      // required fixed64 value = 1;
      public boolean hasValue() {
        return result.hasValue();
      }
      public long getValue() {
        return result.getValue();
      }
      public Builder setValue(long value) {
        result.hasValue = true;
        result.value_ = value;
        return this;
      }
      public Builder clearValue() {
        result.hasValue = false;
        result.value_ = 0L;
        return this;
      }
    }
    
    static {
      afn.libautobus.protocol.Protobuf.getDescriptor();
    }
    
    static {
      afn.libautobus.protocol.Protobuf.internalForceInit();
    }
  }
  
  public static final class DoubleInstance extends
      com.google.protobuf.GeneratedMessage {
    // Use DoubleInstance.newBuilder() to construct.
    private DoubleInstance() {}
    
    private static final DoubleInstance defaultInstance = new DoubleInstance();
    public static DoubleInstance getDefaultInstance() {
      return defaultInstance;
    }
    
    public DoubleInstance getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return afn.libautobus.protocol.Protobuf.internal_static_DoubleInstance_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return afn.libautobus.protocol.Protobuf.internal_static_DoubleInstance_fieldAccessorTable;
    }
    
    // required double value = 1;
    public static final int VALUE_FIELD_NUMBER = 1;
    private boolean hasValue;
    private double value_ = 0D;
    public boolean hasValue() { return hasValue; }
    public double getValue() { return value_; }
    
    public final boolean isInitialized() {
      if (!hasValue) return false;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (hasValue()) {
        output.writeDouble(1, getValue());
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (hasValue()) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(1, getValue());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static afn.libautobus.protocol.Protobuf.DoubleInstance parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static afn.libautobus.protocol.Protobuf.DoubleInstance parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static afn.libautobus.protocol.Protobuf.DoubleInstance parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static afn.libautobus.protocol.Protobuf.DoubleInstance parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static afn.libautobus.protocol.Protobuf.DoubleInstance parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static afn.libautobus.protocol.Protobuf.DoubleInstance parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static afn.libautobus.protocol.Protobuf.DoubleInstance parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeDelimitedFrom(input).buildParsed();
    }
    public static afn.libautobus.protocol.Protobuf.DoubleInstance parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeDelimitedFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static afn.libautobus.protocol.Protobuf.DoubleInstance parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static afn.libautobus.protocol.Protobuf.DoubleInstance parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(afn.libautobus.protocol.Protobuf.DoubleInstance prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private afn.libautobus.protocol.Protobuf.DoubleInstance result;
      
      // Construct using afn.libautobus.protocol.Protobuf.DoubleInstance.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new afn.libautobus.protocol.Protobuf.DoubleInstance();
        return builder;
      }
      
      protected afn.libautobus.protocol.Protobuf.DoubleInstance internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new afn.libautobus.protocol.Protobuf.DoubleInstance();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return afn.libautobus.protocol.Protobuf.DoubleInstance.getDescriptor();
      }
      
      public afn.libautobus.protocol.Protobuf.DoubleInstance getDefaultInstanceForType() {
        return afn.libautobus.protocol.Protobuf.DoubleInstance.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public afn.libautobus.protocol.Protobuf.DoubleInstance build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private afn.libautobus.protocol.Protobuf.DoubleInstance buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public afn.libautobus.protocol.Protobuf.DoubleInstance buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        afn.libautobus.protocol.Protobuf.DoubleInstance returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof afn.libautobus.protocol.Protobuf.DoubleInstance) {
          return mergeFrom((afn.libautobus.protocol.Protobuf.DoubleInstance)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(afn.libautobus.protocol.Protobuf.DoubleInstance other) {
        if (other == afn.libautobus.protocol.Protobuf.DoubleInstance.getDefaultInstance()) return this;
        if (other.hasValue()) {
          setValue(other.getValue());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 9: {
              setValue(input.readDouble());
              break;
            }
          }
        }
      }
      
      
      // required double value = 1;
      public boolean hasValue() {
        return result.hasValue();
      }
      public double getValue() {
        return result.getValue();
      }
      public Builder setValue(double value) {
        result.hasValue = true;
        result.value_ = value;
        return this;
      }
      public Builder clearValue() {
        result.hasValue = false;
        result.value_ = 0D;
        return this;
      }
    }
    
    static {
      afn.libautobus.protocol.Protobuf.getDescriptor();
    }
    
    static {
      afn.libautobus.protocol.Protobuf.internalForceInit();
    }
  }
  
  public static final class StringInstance extends
      com.google.protobuf.GeneratedMessage {
    // Use StringInstance.newBuilder() to construct.
    private StringInstance() {}
    
    private static final StringInstance defaultInstance = new StringInstance();
    public static StringInstance getDefaultInstance() {
      return defaultInstance;
    }
    
    public StringInstance getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return afn.libautobus.protocol.Protobuf.internal_static_StringInstance_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return afn.libautobus.protocol.Protobuf.internal_static_StringInstance_fieldAccessorTable;
    }
    
    // required string value = 1;
    public static final int VALUE_FIELD_NUMBER = 1;
    private boolean hasValue;
    private java.lang.String value_ = "";
    public boolean hasValue() { return hasValue; }
    public java.lang.String getValue() { return value_; }
    
    public final boolean isInitialized() {
      if (!hasValue) return false;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (hasValue()) {
        output.writeString(1, getValue());
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (hasValue()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(1, getValue());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static afn.libautobus.protocol.Protobuf.StringInstance parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static afn.libautobus.protocol.Protobuf.StringInstance parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static afn.libautobus.protocol.Protobuf.StringInstance parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static afn.libautobus.protocol.Protobuf.StringInstance parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static afn.libautobus.protocol.Protobuf.StringInstance parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static afn.libautobus.protocol.Protobuf.StringInstance parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static afn.libautobus.protocol.Protobuf.StringInstance parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeDelimitedFrom(input).buildParsed();
    }
    public static afn.libautobus.protocol.Protobuf.StringInstance parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeDelimitedFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static afn.libautobus.protocol.Protobuf.StringInstance parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static afn.libautobus.protocol.Protobuf.StringInstance parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(afn.libautobus.protocol.Protobuf.StringInstance prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private afn.libautobus.protocol.Protobuf.StringInstance result;
      
      // Construct using afn.libautobus.protocol.Protobuf.StringInstance.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new afn.libautobus.protocol.Protobuf.StringInstance();
        return builder;
      }
      
      protected afn.libautobus.protocol.Protobuf.StringInstance internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new afn.libautobus.protocol.Protobuf.StringInstance();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return afn.libautobus.protocol.Protobuf.StringInstance.getDescriptor();
      }
      
      public afn.libautobus.protocol.Protobuf.StringInstance getDefaultInstanceForType() {
        return afn.libautobus.protocol.Protobuf.StringInstance.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public afn.libautobus.protocol.Protobuf.StringInstance build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private afn.libautobus.protocol.Protobuf.StringInstance buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public afn.libautobus.protocol.Protobuf.StringInstance buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        afn.libautobus.protocol.Protobuf.StringInstance returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof afn.libautobus.protocol.Protobuf.StringInstance) {
          return mergeFrom((afn.libautobus.protocol.Protobuf.StringInstance)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(afn.libautobus.protocol.Protobuf.StringInstance other) {
        if (other == afn.libautobus.protocol.Protobuf.StringInstance.getDefaultInstance()) return this;
        if (other.hasValue()) {
          setValue(other.getValue());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 10: {
              setValue(input.readString());
              break;
            }
          }
        }
      }
      
      
      // required string value = 1;
      public boolean hasValue() {
        return result.hasValue();
      }
      public java.lang.String getValue() {
        return result.getValue();
      }
      public Builder setValue(java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasValue = true;
        result.value_ = value;
        return this;
      }
      public Builder clearValue() {
        result.hasValue = false;
        result.value_ = getDefaultInstance().getValue();
        return this;
      }
    }
    
    static {
      afn.libautobus.protocol.Protobuf.getDescriptor();
    }
    
    static {
      afn.libautobus.protocol.Protobuf.internalForceInit();
    }
  }
  
  public static final class TimestampInstance extends
      com.google.protobuf.GeneratedMessage {
    // Use TimestampInstance.newBuilder() to construct.
    private TimestampInstance() {}
    
    private static final TimestampInstance defaultInstance = new TimestampInstance();
    public static TimestampInstance getDefaultInstance() {
      return defaultInstance;
    }
    
    public TimestampInstance getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return afn.libautobus.protocol.Protobuf.internal_static_TimestampInstance_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return afn.libautobus.protocol.Protobuf.internal_static_TimestampInstance_fieldAccessorTable;
    }
    
    // required fixed32 year = 1;
    public static final int YEAR_FIELD_NUMBER = 1;
    private boolean hasYear;
    private int year_ = 0;
    public boolean hasYear() { return hasYear; }
    public int getYear() { return year_; }
    
    // required fixed32 month = 2;
    public static final int MONTH_FIELD_NUMBER = 2;
    private boolean hasMonth;
    private int month_ = 0;
    public boolean hasMonth() { return hasMonth; }
    public int getMonth() { return month_; }
    
    // required fixed32 day = 3;
    public static final int DAY_FIELD_NUMBER = 3;
    private boolean hasDay;
    private int day_ = 0;
    public boolean hasDay() { return hasDay; }
    public int getDay() { return day_; }
    
    // required fixed32 hour = 4;
    public static final int HOUR_FIELD_NUMBER = 4;
    private boolean hasHour;
    private int hour_ = 0;
    public boolean hasHour() { return hasHour; }
    public int getHour() { return hour_; }
    
    // required fixed32 minute = 5;
    public static final int MINUTE_FIELD_NUMBER = 5;
    private boolean hasMinute;
    private int minute_ = 0;
    public boolean hasMinute() { return hasMinute; }
    public int getMinute() { return minute_; }
    
    // required fixed32 second = 6;
    public static final int SECOND_FIELD_NUMBER = 6;
    private boolean hasSecond;
    private int second_ = 0;
    public boolean hasSecond() { return hasSecond; }
    public int getSecond() { return second_; }
    
    // required fixed32 millisecond = 7;
    public static final int MILLISECOND_FIELD_NUMBER = 7;
    private boolean hasMillisecond;
    private int millisecond_ = 0;
    public boolean hasMillisecond() { return hasMillisecond; }
    public int getMillisecond() { return millisecond_; }
    
    public final boolean isInitialized() {
      if (!hasYear) return false;
      if (!hasMonth) return false;
      if (!hasDay) return false;
      if (!hasHour) return false;
      if (!hasMinute) return false;
      if (!hasSecond) return false;
      if (!hasMillisecond) return false;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (hasYear()) {
        output.writeFixed32(1, getYear());
      }
      if (hasMonth()) {
        output.writeFixed32(2, getMonth());
      }
      if (hasDay()) {
        output.writeFixed32(3, getDay());
      }
      if (hasHour()) {
        output.writeFixed32(4, getHour());
      }
      if (hasMinute()) {
        output.writeFixed32(5, getMinute());
      }
      if (hasSecond()) {
        output.writeFixed32(6, getSecond());
      }
      if (hasMillisecond()) {
        output.writeFixed32(7, getMillisecond());
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (hasYear()) {
        size += com.google.protobuf.CodedOutputStream
          .computeFixed32Size(1, getYear());
      }
      if (hasMonth()) {
        size += com.google.protobuf.CodedOutputStream
          .computeFixed32Size(2, getMonth());
      }
      if (hasDay()) {
        size += com.google.protobuf.CodedOutputStream
          .computeFixed32Size(3, getDay());
      }
      if (hasHour()) {
        size += com.google.protobuf.CodedOutputStream
          .computeFixed32Size(4, getHour());
      }
      if (hasMinute()) {
        size += com.google.protobuf.CodedOutputStream
          .computeFixed32Size(5, getMinute());
      }
      if (hasSecond()) {
        size += com.google.protobuf.CodedOutputStream
          .computeFixed32Size(6, getSecond());
      }
      if (hasMillisecond()) {
        size += com.google.protobuf.CodedOutputStream
          .computeFixed32Size(7, getMillisecond());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static afn.libautobus.protocol.Protobuf.TimestampInstance parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static afn.libautobus.protocol.Protobuf.TimestampInstance parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static afn.libautobus.protocol.Protobuf.TimestampInstance parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static afn.libautobus.protocol.Protobuf.TimestampInstance parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static afn.libautobus.protocol.Protobuf.TimestampInstance parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static afn.libautobus.protocol.Protobuf.TimestampInstance parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static afn.libautobus.protocol.Protobuf.TimestampInstance parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeDelimitedFrom(input).buildParsed();
    }
    public static afn.libautobus.protocol.Protobuf.TimestampInstance parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeDelimitedFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static afn.libautobus.protocol.Protobuf.TimestampInstance parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static afn.libautobus.protocol.Protobuf.TimestampInstance parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(afn.libautobus.protocol.Protobuf.TimestampInstance prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private afn.libautobus.protocol.Protobuf.TimestampInstance result;
      
      // Construct using afn.libautobus.protocol.Protobuf.TimestampInstance.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new afn.libautobus.protocol.Protobuf.TimestampInstance();
        return builder;
      }
      
      protected afn.libautobus.protocol.Protobuf.TimestampInstance internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new afn.libautobus.protocol.Protobuf.TimestampInstance();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return afn.libautobus.protocol.Protobuf.TimestampInstance.getDescriptor();
      }
      
      public afn.libautobus.protocol.Protobuf.TimestampInstance getDefaultInstanceForType() {
        return afn.libautobus.protocol.Protobuf.TimestampInstance.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public afn.libautobus.protocol.Protobuf.TimestampInstance build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private afn.libautobus.protocol.Protobuf.TimestampInstance buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public afn.libautobus.protocol.Protobuf.TimestampInstance buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        afn.libautobus.protocol.Protobuf.TimestampInstance returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof afn.libautobus.protocol.Protobuf.TimestampInstance) {
          return mergeFrom((afn.libautobus.protocol.Protobuf.TimestampInstance)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(afn.libautobus.protocol.Protobuf.TimestampInstance other) {
        if (other == afn.libautobus.protocol.Protobuf.TimestampInstance.getDefaultInstance()) return this;
        if (other.hasYear()) {
          setYear(other.getYear());
        }
        if (other.hasMonth()) {
          setMonth(other.getMonth());
        }
        if (other.hasDay()) {
          setDay(other.getDay());
        }
        if (other.hasHour()) {
          setHour(other.getHour());
        }
        if (other.hasMinute()) {
          setMinute(other.getMinute());
        }
        if (other.hasSecond()) {
          setSecond(other.getSecond());
        }
        if (other.hasMillisecond()) {
          setMillisecond(other.getMillisecond());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 13: {
              setYear(input.readFixed32());
              break;
            }
            case 21: {
              setMonth(input.readFixed32());
              break;
            }
            case 29: {
              setDay(input.readFixed32());
              break;
            }
            case 37: {
              setHour(input.readFixed32());
              break;
            }
            case 45: {
              setMinute(input.readFixed32());
              break;
            }
            case 53: {
              setSecond(input.readFixed32());
              break;
            }
            case 61: {
              setMillisecond(input.readFixed32());
              break;
            }
          }
        }
      }
      
      
      // required fixed32 year = 1;
      public boolean hasYear() {
        return result.hasYear();
      }
      public int getYear() {
        return result.getYear();
      }
      public Builder setYear(int value) {
        result.hasYear = true;
        result.year_ = value;
        return this;
      }
      public Builder clearYear() {
        result.hasYear = false;
        result.year_ = 0;
        return this;
      }
      
      // required fixed32 month = 2;
      public boolean hasMonth() {
        return result.hasMonth();
      }
      public int getMonth() {
        return result.getMonth();
      }
      public Builder setMonth(int value) {
        result.hasMonth = true;
        result.month_ = value;
        return this;
      }
      public Builder clearMonth() {
        result.hasMonth = false;
        result.month_ = 0;
        return this;
      }
      
      // required fixed32 day = 3;
      public boolean hasDay() {
        return result.hasDay();
      }
      public int getDay() {
        return result.getDay();
      }
      public Builder setDay(int value) {
        result.hasDay = true;
        result.day_ = value;
        return this;
      }
      public Builder clearDay() {
        result.hasDay = false;
        result.day_ = 0;
        return this;
      }
      
      // required fixed32 hour = 4;
      public boolean hasHour() {
        return result.hasHour();
      }
      public int getHour() {
        return result.getHour();
      }
      public Builder setHour(int value) {
        result.hasHour = true;
        result.hour_ = value;
        return this;
      }
      public Builder clearHour() {
        result.hasHour = false;
        result.hour_ = 0;
        return this;
      }
      
      // required fixed32 minute = 5;
      public boolean hasMinute() {
        return result.hasMinute();
      }
      public int getMinute() {
        return result.getMinute();
      }
      public Builder setMinute(int value) {
        result.hasMinute = true;
        result.minute_ = value;
        return this;
      }
      public Builder clearMinute() {
        result.hasMinute = false;
        result.minute_ = 0;
        return this;
      }
      
      // required fixed32 second = 6;
      public boolean hasSecond() {
        return result.hasSecond();
      }
      public int getSecond() {
        return result.getSecond();
      }
      public Builder setSecond(int value) {
        result.hasSecond = true;
        result.second_ = value;
        return this;
      }
      public Builder clearSecond() {
        result.hasSecond = false;
        result.second_ = 0;
        return this;
      }
      
      // required fixed32 millisecond = 7;
      public boolean hasMillisecond() {
        return result.hasMillisecond();
      }
      public int getMillisecond() {
        return result.getMillisecond();
      }
      public Builder setMillisecond(int value) {
        result.hasMillisecond = true;
        result.millisecond_ = value;
        return this;
      }
      public Builder clearMillisecond() {
        result.hasMillisecond = false;
        result.millisecond_ = 0;
        return this;
      }
    }
    
    static {
      afn.libautobus.protocol.Protobuf.getDescriptor();
    }
    
    static {
      afn.libautobus.protocol.Protobuf.internalForceInit();
    }
  }
  
  public static final class NullInstance extends
      com.google.protobuf.GeneratedMessage {
    // Use NullInstance.newBuilder() to construct.
    private NullInstance() {}
    
    private static final NullInstance defaultInstance = new NullInstance();
    public static NullInstance getDefaultInstance() {
      return defaultInstance;
    }
    
    public NullInstance getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return afn.libautobus.protocol.Protobuf.internal_static_NullInstance_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return afn.libautobus.protocol.Protobuf.internal_static_NullInstance_fieldAccessorTable;
    }
    
    public final boolean isInitialized() {
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static afn.libautobus.protocol.Protobuf.NullInstance parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static afn.libautobus.protocol.Protobuf.NullInstance parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static afn.libautobus.protocol.Protobuf.NullInstance parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static afn.libautobus.protocol.Protobuf.NullInstance parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static afn.libautobus.protocol.Protobuf.NullInstance parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static afn.libautobus.protocol.Protobuf.NullInstance parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static afn.libautobus.protocol.Protobuf.NullInstance parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeDelimitedFrom(input).buildParsed();
    }
    public static afn.libautobus.protocol.Protobuf.NullInstance parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeDelimitedFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static afn.libautobus.protocol.Protobuf.NullInstance parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static afn.libautobus.protocol.Protobuf.NullInstance parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(afn.libautobus.protocol.Protobuf.NullInstance prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private afn.libautobus.protocol.Protobuf.NullInstance result;
      
      // Construct using afn.libautobus.protocol.Protobuf.NullInstance.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new afn.libautobus.protocol.Protobuf.NullInstance();
        return builder;
      }
      
      protected afn.libautobus.protocol.Protobuf.NullInstance internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new afn.libautobus.protocol.Protobuf.NullInstance();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return afn.libautobus.protocol.Protobuf.NullInstance.getDescriptor();
      }
      
      public afn.libautobus.protocol.Protobuf.NullInstance getDefaultInstanceForType() {
        return afn.libautobus.protocol.Protobuf.NullInstance.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public afn.libautobus.protocol.Protobuf.NullInstance build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private afn.libautobus.protocol.Protobuf.NullInstance buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public afn.libautobus.protocol.Protobuf.NullInstance buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        afn.libautobus.protocol.Protobuf.NullInstance returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof afn.libautobus.protocol.Protobuf.NullInstance) {
          return mergeFrom((afn.libautobus.protocol.Protobuf.NullInstance)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(afn.libautobus.protocol.Protobuf.NullInstance other) {
        if (other == afn.libautobus.protocol.Protobuf.NullInstance.getDefaultInstance()) return this;
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
          }
        }
      }
      
    }
    
    static {
      afn.libautobus.protocol.Protobuf.getDescriptor();
    }
    
    static {
      afn.libautobus.protocol.Protobuf.internalForceInit();
    }
  }
  
  public static final class ListInstance extends
      com.google.protobuf.GeneratedMessage {
    // Use ListInstance.newBuilder() to construct.
    private ListInstance() {}
    
    private static final ListInstance defaultInstance = new ListInstance();
    public static ListInstance getDefaultInstance() {
      return defaultInstance;
    }
    
    public ListInstance getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return afn.libautobus.protocol.Protobuf.internal_static_ListInstance_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return afn.libautobus.protocol.Protobuf.internal_static_ListInstance_fieldAccessorTable;
    }
    
    // repeated .Instance value = 1;
    public static final int VALUE_FIELD_NUMBER = 1;
    private java.util.List<afn.libautobus.protocol.Protobuf.Instance> value_ =
      java.util.Collections.emptyList();
    public java.util.List<afn.libautobus.protocol.Protobuf.Instance> getValueList() {
      return value_;
    }
    public int getValueCount() { return value_.size(); }
    public afn.libautobus.protocol.Protobuf.Instance getValue(int index) {
      return value_.get(index);
    }
    
    public final boolean isInitialized() {
      for (afn.libautobus.protocol.Protobuf.Instance element : getValueList()) {
        if (!element.isInitialized()) return false;
      }
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      for (afn.libautobus.protocol.Protobuf.Instance element : getValueList()) {
        output.writeMessage(1, element);
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      for (afn.libautobus.protocol.Protobuf.Instance element : getValueList()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, element);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static afn.libautobus.protocol.Protobuf.ListInstance parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static afn.libautobus.protocol.Protobuf.ListInstance parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static afn.libautobus.protocol.Protobuf.ListInstance parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static afn.libautobus.protocol.Protobuf.ListInstance parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static afn.libautobus.protocol.Protobuf.ListInstance parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static afn.libautobus.protocol.Protobuf.ListInstance parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static afn.libautobus.protocol.Protobuf.ListInstance parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeDelimitedFrom(input).buildParsed();
    }
    public static afn.libautobus.protocol.Protobuf.ListInstance parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeDelimitedFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static afn.libautobus.protocol.Protobuf.ListInstance parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static afn.libautobus.protocol.Protobuf.ListInstance parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(afn.libautobus.protocol.Protobuf.ListInstance prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private afn.libautobus.protocol.Protobuf.ListInstance result;
      
      // Construct using afn.libautobus.protocol.Protobuf.ListInstance.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new afn.libautobus.protocol.Protobuf.ListInstance();
        return builder;
      }
      
      protected afn.libautobus.protocol.Protobuf.ListInstance internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new afn.libautobus.protocol.Protobuf.ListInstance();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return afn.libautobus.protocol.Protobuf.ListInstance.getDescriptor();
      }
      
      public afn.libautobus.protocol.Protobuf.ListInstance getDefaultInstanceForType() {
        return afn.libautobus.protocol.Protobuf.ListInstance.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public afn.libautobus.protocol.Protobuf.ListInstance build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private afn.libautobus.protocol.Protobuf.ListInstance buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public afn.libautobus.protocol.Protobuf.ListInstance buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        if (result.value_ != java.util.Collections.EMPTY_LIST) {
          result.value_ =
            java.util.Collections.unmodifiableList(result.value_);
        }
        afn.libautobus.protocol.Protobuf.ListInstance returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof afn.libautobus.protocol.Protobuf.ListInstance) {
          return mergeFrom((afn.libautobus.protocol.Protobuf.ListInstance)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(afn.libautobus.protocol.Protobuf.ListInstance other) {
        if (other == afn.libautobus.protocol.Protobuf.ListInstance.getDefaultInstance()) return this;
        if (!other.value_.isEmpty()) {
          if (result.value_.isEmpty()) {
            result.value_ = new java.util.ArrayList<afn.libautobus.protocol.Protobuf.Instance>();
          }
          result.value_.addAll(other.value_);
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 10: {
              afn.libautobus.protocol.Protobuf.Instance.Builder subBuilder = afn.libautobus.protocol.Protobuf.Instance.newBuilder();
              input.readMessage(subBuilder, extensionRegistry);
              addValue(subBuilder.buildPartial());
              break;
            }
          }
        }
      }
      
      
      // repeated .Instance value = 1;
      public java.util.List<afn.libautobus.protocol.Protobuf.Instance> getValueList() {
        return java.util.Collections.unmodifiableList(result.value_);
      }
      public int getValueCount() {
        return result.getValueCount();
      }
      public afn.libautobus.protocol.Protobuf.Instance getValue(int index) {
        return result.getValue(index);
      }
      public Builder setValue(int index, afn.libautobus.protocol.Protobuf.Instance value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.value_.set(index, value);
        return this;
      }
      public Builder setValue(int index, afn.libautobus.protocol.Protobuf.Instance.Builder builderForValue) {
        result.value_.set(index, builderForValue.build());
        return this;
      }
      public Builder addValue(afn.libautobus.protocol.Protobuf.Instance value) {
        if (value == null) {
          throw new NullPointerException();
        }
        if (result.value_.isEmpty()) {
          result.value_ = new java.util.ArrayList<afn.libautobus.protocol.Protobuf.Instance>();
        }
        result.value_.add(value);
        return this;
      }
      public Builder addValue(afn.libautobus.protocol.Protobuf.Instance.Builder builderForValue) {
        if (result.value_.isEmpty()) {
          result.value_ = new java.util.ArrayList<afn.libautobus.protocol.Protobuf.Instance>();
        }
        result.value_.add(builderForValue.build());
        return this;
      }
      public Builder addAllValue(
          java.lang.Iterable<? extends afn.libautobus.protocol.Protobuf.Instance> values) {
        if (result.value_.isEmpty()) {
          result.value_ = new java.util.ArrayList<afn.libautobus.protocol.Protobuf.Instance>();
        }
        super.addAll(values, result.value_);
        return this;
      }
      public Builder clearValue() {
        result.value_ = java.util.Collections.emptyList();
        return this;
      }
    }
    
    static {
      afn.libautobus.protocol.Protobuf.getDescriptor();
    }
    
    static {
      afn.libautobus.protocol.Protobuf.internalForceInit();
    }
  }
  
  public static final class MapInstance extends
      com.google.protobuf.GeneratedMessage {
    // Use MapInstance.newBuilder() to construct.
    private MapInstance() {}
    
    private static final MapInstance defaultInstance = new MapInstance();
    public static MapInstance getDefaultInstance() {
      return defaultInstance;
    }
    
    public MapInstance getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return afn.libautobus.protocol.Protobuf.internal_static_MapInstance_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return afn.libautobus.protocol.Protobuf.internal_static_MapInstance_fieldAccessorTable;
    }
    
    // repeated .MapEntry value = 1;
    public static final int VALUE_FIELD_NUMBER = 1;
    private java.util.List<afn.libautobus.protocol.Protobuf.MapEntry> value_ =
      java.util.Collections.emptyList();
    public java.util.List<afn.libautobus.protocol.Protobuf.MapEntry> getValueList() {
      return value_;
    }
    public int getValueCount() { return value_.size(); }
    public afn.libautobus.protocol.Protobuf.MapEntry getValue(int index) {
      return value_.get(index);
    }
    
    public final boolean isInitialized() {
      for (afn.libautobus.protocol.Protobuf.MapEntry element : getValueList()) {
        if (!element.isInitialized()) return false;
      }
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      for (afn.libautobus.protocol.Protobuf.MapEntry element : getValueList()) {
        output.writeMessage(1, element);
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      for (afn.libautobus.protocol.Protobuf.MapEntry element : getValueList()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, element);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static afn.libautobus.protocol.Protobuf.MapInstance parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static afn.libautobus.protocol.Protobuf.MapInstance parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static afn.libautobus.protocol.Protobuf.MapInstance parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static afn.libautobus.protocol.Protobuf.MapInstance parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static afn.libautobus.protocol.Protobuf.MapInstance parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static afn.libautobus.protocol.Protobuf.MapInstance parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static afn.libautobus.protocol.Protobuf.MapInstance parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeDelimitedFrom(input).buildParsed();
    }
    public static afn.libautobus.protocol.Protobuf.MapInstance parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeDelimitedFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static afn.libautobus.protocol.Protobuf.MapInstance parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static afn.libautobus.protocol.Protobuf.MapInstance parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(afn.libautobus.protocol.Protobuf.MapInstance prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private afn.libautobus.protocol.Protobuf.MapInstance result;
      
      // Construct using afn.libautobus.protocol.Protobuf.MapInstance.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new afn.libautobus.protocol.Protobuf.MapInstance();
        return builder;
      }
      
      protected afn.libautobus.protocol.Protobuf.MapInstance internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new afn.libautobus.protocol.Protobuf.MapInstance();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return afn.libautobus.protocol.Protobuf.MapInstance.getDescriptor();
      }
      
      public afn.libautobus.protocol.Protobuf.MapInstance getDefaultInstanceForType() {
        return afn.libautobus.protocol.Protobuf.MapInstance.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public afn.libautobus.protocol.Protobuf.MapInstance build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private afn.libautobus.protocol.Protobuf.MapInstance buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public afn.libautobus.protocol.Protobuf.MapInstance buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        if (result.value_ != java.util.Collections.EMPTY_LIST) {
          result.value_ =
            java.util.Collections.unmodifiableList(result.value_);
        }
        afn.libautobus.protocol.Protobuf.MapInstance returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof afn.libautobus.protocol.Protobuf.MapInstance) {
          return mergeFrom((afn.libautobus.protocol.Protobuf.MapInstance)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(afn.libautobus.protocol.Protobuf.MapInstance other) {
        if (other == afn.libautobus.protocol.Protobuf.MapInstance.getDefaultInstance()) return this;
        if (!other.value_.isEmpty()) {
          if (result.value_.isEmpty()) {
            result.value_ = new java.util.ArrayList<afn.libautobus.protocol.Protobuf.MapEntry>();
          }
          result.value_.addAll(other.value_);
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 10: {
              afn.libautobus.protocol.Protobuf.MapEntry.Builder subBuilder = afn.libautobus.protocol.Protobuf.MapEntry.newBuilder();
              input.readMessage(subBuilder, extensionRegistry);
              addValue(subBuilder.buildPartial());
              break;
            }
          }
        }
      }
      
      
      // repeated .MapEntry value = 1;
      public java.util.List<afn.libautobus.protocol.Protobuf.MapEntry> getValueList() {
        return java.util.Collections.unmodifiableList(result.value_);
      }
      public int getValueCount() {
        return result.getValueCount();
      }
      public afn.libautobus.protocol.Protobuf.MapEntry getValue(int index) {
        return result.getValue(index);
      }
      public Builder setValue(int index, afn.libautobus.protocol.Protobuf.MapEntry value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.value_.set(index, value);
        return this;
      }
      public Builder setValue(int index, afn.libautobus.protocol.Protobuf.MapEntry.Builder builderForValue) {
        result.value_.set(index, builderForValue.build());
        return this;
      }
      public Builder addValue(afn.libautobus.protocol.Protobuf.MapEntry value) {
        if (value == null) {
          throw new NullPointerException();
        }
        if (result.value_.isEmpty()) {
          result.value_ = new java.util.ArrayList<afn.libautobus.protocol.Protobuf.MapEntry>();
        }
        result.value_.add(value);
        return this;
      }
      public Builder addValue(afn.libautobus.protocol.Protobuf.MapEntry.Builder builderForValue) {
        if (result.value_.isEmpty()) {
          result.value_ = new java.util.ArrayList<afn.libautobus.protocol.Protobuf.MapEntry>();
        }
        result.value_.add(builderForValue.build());
        return this;
      }
      public Builder addAllValue(
          java.lang.Iterable<? extends afn.libautobus.protocol.Protobuf.MapEntry> values) {
        if (result.value_.isEmpty()) {
          result.value_ = new java.util.ArrayList<afn.libautobus.protocol.Protobuf.MapEntry>();
        }
        super.addAll(values, result.value_);
        return this;
      }
      public Builder clearValue() {
        result.value_ = java.util.Collections.emptyList();
        return this;
      }
    }
    
    static {
      afn.libautobus.protocol.Protobuf.getDescriptor();
    }
    
    static {
      afn.libautobus.protocol.Protobuf.internalForceInit();
    }
  }
  
  public static final class StructInstance extends
      com.google.protobuf.GeneratedMessage {
    // Use StructInstance.newBuilder() to construct.
    private StructInstance() {}
    
    private static final StructInstance defaultInstance = new StructInstance();
    public static StructInstance getDefaultInstance() {
      return defaultInstance;
    }
    
    public StructInstance getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return afn.libautobus.protocol.Protobuf.internal_static_StructInstance_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return afn.libautobus.protocol.Protobuf.internal_static_StructInstance_fieldAccessorTable;
    }
    
    // required string name = 1;
    public static final int NAME_FIELD_NUMBER = 1;
    private boolean hasName;
    private java.lang.String name_ = "";
    public boolean hasName() { return hasName; }
    public java.lang.String getName() { return name_; }
    
    // repeated .StructEntry value = 2;
    public static final int VALUE_FIELD_NUMBER = 2;
    private java.util.List<afn.libautobus.protocol.Protobuf.StructEntry> value_ =
      java.util.Collections.emptyList();
    public java.util.List<afn.libautobus.protocol.Protobuf.StructEntry> getValueList() {
      return value_;
    }
    public int getValueCount() { return value_.size(); }
    public afn.libautobus.protocol.Protobuf.StructEntry getValue(int index) {
      return value_.get(index);
    }
    
    public final boolean isInitialized() {
      if (!hasName) return false;
      for (afn.libautobus.protocol.Protobuf.StructEntry element : getValueList()) {
        if (!element.isInitialized()) return false;
      }
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (hasName()) {
        output.writeString(1, getName());
      }
      for (afn.libautobus.protocol.Protobuf.StructEntry element : getValueList()) {
        output.writeMessage(2, element);
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (hasName()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(1, getName());
      }
      for (afn.libautobus.protocol.Protobuf.StructEntry element : getValueList()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, element);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static afn.libautobus.protocol.Protobuf.StructInstance parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static afn.libautobus.protocol.Protobuf.StructInstance parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static afn.libautobus.protocol.Protobuf.StructInstance parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static afn.libautobus.protocol.Protobuf.StructInstance parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static afn.libautobus.protocol.Protobuf.StructInstance parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static afn.libautobus.protocol.Protobuf.StructInstance parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static afn.libautobus.protocol.Protobuf.StructInstance parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeDelimitedFrom(input).buildParsed();
    }
    public static afn.libautobus.protocol.Protobuf.StructInstance parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeDelimitedFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static afn.libautobus.protocol.Protobuf.StructInstance parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static afn.libautobus.protocol.Protobuf.StructInstance parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(afn.libautobus.protocol.Protobuf.StructInstance prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private afn.libautobus.protocol.Protobuf.StructInstance result;
      
      // Construct using afn.libautobus.protocol.Protobuf.StructInstance.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new afn.libautobus.protocol.Protobuf.StructInstance();
        return builder;
      }
      
      protected afn.libautobus.protocol.Protobuf.StructInstance internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new afn.libautobus.protocol.Protobuf.StructInstance();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return afn.libautobus.protocol.Protobuf.StructInstance.getDescriptor();
      }
      
      public afn.libautobus.protocol.Protobuf.StructInstance getDefaultInstanceForType() {
        return afn.libautobus.protocol.Protobuf.StructInstance.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public afn.libautobus.protocol.Protobuf.StructInstance build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private afn.libautobus.protocol.Protobuf.StructInstance buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public afn.libautobus.protocol.Protobuf.StructInstance buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        if (result.value_ != java.util.Collections.EMPTY_LIST) {
          result.value_ =
            java.util.Collections.unmodifiableList(result.value_);
        }
        afn.libautobus.protocol.Protobuf.StructInstance returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof afn.libautobus.protocol.Protobuf.StructInstance) {
          return mergeFrom((afn.libautobus.protocol.Protobuf.StructInstance)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(afn.libautobus.protocol.Protobuf.StructInstance other) {
        if (other == afn.libautobus.protocol.Protobuf.StructInstance.getDefaultInstance()) return this;
        if (other.hasName()) {
          setName(other.getName());
        }
        if (!other.value_.isEmpty()) {
          if (result.value_.isEmpty()) {
            result.value_ = new java.util.ArrayList<afn.libautobus.protocol.Protobuf.StructEntry>();
          }
          result.value_.addAll(other.value_);
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 10: {
              setName(input.readString());
              break;
            }
            case 18: {
              afn.libautobus.protocol.Protobuf.StructEntry.Builder subBuilder = afn.libautobus.protocol.Protobuf.StructEntry.newBuilder();
              input.readMessage(subBuilder, extensionRegistry);
              addValue(subBuilder.buildPartial());
              break;
            }
          }
        }
      }
      
      
      // required string name = 1;
      public boolean hasName() {
        return result.hasName();
      }
      public java.lang.String getName() {
        return result.getName();
      }
      public Builder setName(java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasName = true;
        result.name_ = value;
        return this;
      }
      public Builder clearName() {
        result.hasName = false;
        result.name_ = getDefaultInstance().getName();
        return this;
      }
      
      // repeated .StructEntry value = 2;
      public java.util.List<afn.libautobus.protocol.Protobuf.StructEntry> getValueList() {
        return java.util.Collections.unmodifiableList(result.value_);
      }
      public int getValueCount() {
        return result.getValueCount();
      }
      public afn.libautobus.protocol.Protobuf.StructEntry getValue(int index) {
        return result.getValue(index);
      }
      public Builder setValue(int index, afn.libautobus.protocol.Protobuf.StructEntry value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.value_.set(index, value);
        return this;
      }
      public Builder setValue(int index, afn.libautobus.protocol.Protobuf.StructEntry.Builder builderForValue) {
        result.value_.set(index, builderForValue.build());
        return this;
      }
      public Builder addValue(afn.libautobus.protocol.Protobuf.StructEntry value) {
        if (value == null) {
          throw new NullPointerException();
        }
        if (result.value_.isEmpty()) {
          result.value_ = new java.util.ArrayList<afn.libautobus.protocol.Protobuf.StructEntry>();
        }
        result.value_.add(value);
        return this;
      }
      public Builder addValue(afn.libautobus.protocol.Protobuf.StructEntry.Builder builderForValue) {
        if (result.value_.isEmpty()) {
          result.value_ = new java.util.ArrayList<afn.libautobus.protocol.Protobuf.StructEntry>();
        }
        result.value_.add(builderForValue.build());
        return this;
      }
      public Builder addAllValue(
          java.lang.Iterable<? extends afn.libautobus.protocol.Protobuf.StructEntry> values) {
        if (result.value_.isEmpty()) {
          result.value_ = new java.util.ArrayList<afn.libautobus.protocol.Protobuf.StructEntry>();
        }
        super.addAll(values, result.value_);
        return this;
      }
      public Builder clearValue() {
        result.value_ = java.util.Collections.emptyList();
        return this;
      }
    }
    
    static {
      afn.libautobus.protocol.Protobuf.getDescriptor();
    }
    
    static {
      afn.libautobus.protocol.Protobuf.internalForceInit();
    }
  }
  
  public static final class ExceptionInstance extends
      com.google.protobuf.GeneratedMessage {
    // Use ExceptionInstance.newBuilder() to construct.
    private ExceptionInstance() {}
    
    private static final ExceptionInstance defaultInstance = new ExceptionInstance();
    public static ExceptionInstance getDefaultInstance() {
      return defaultInstance;
    }
    
    public ExceptionInstance getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return afn.libautobus.protocol.Protobuf.internal_static_ExceptionInstance_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return afn.libautobus.protocol.Protobuf.internal_static_ExceptionInstance_fieldAccessorTable;
    }
    
    // optional string text = 1;
    public static final int TEXT_FIELD_NUMBER = 1;
    private boolean hasText;
    private java.lang.String text_ = "";
    public boolean hasText() { return hasText; }
    public java.lang.String getText() { return text_; }
    
    public final boolean isInitialized() {
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (hasText()) {
        output.writeString(1, getText());
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (hasText()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(1, getText());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static afn.libautobus.protocol.Protobuf.ExceptionInstance parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static afn.libautobus.protocol.Protobuf.ExceptionInstance parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static afn.libautobus.protocol.Protobuf.ExceptionInstance parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static afn.libautobus.protocol.Protobuf.ExceptionInstance parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static afn.libautobus.protocol.Protobuf.ExceptionInstance parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static afn.libautobus.protocol.Protobuf.ExceptionInstance parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static afn.libautobus.protocol.Protobuf.ExceptionInstance parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeDelimitedFrom(input).buildParsed();
    }
    public static afn.libautobus.protocol.Protobuf.ExceptionInstance parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeDelimitedFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static afn.libautobus.protocol.Protobuf.ExceptionInstance parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static afn.libautobus.protocol.Protobuf.ExceptionInstance parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(afn.libautobus.protocol.Protobuf.ExceptionInstance prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private afn.libautobus.protocol.Protobuf.ExceptionInstance result;
      
      // Construct using afn.libautobus.protocol.Protobuf.ExceptionInstance.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new afn.libautobus.protocol.Protobuf.ExceptionInstance();
        return builder;
      }
      
      protected afn.libautobus.protocol.Protobuf.ExceptionInstance internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new afn.libautobus.protocol.Protobuf.ExceptionInstance();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return afn.libautobus.protocol.Protobuf.ExceptionInstance.getDescriptor();
      }
      
      public afn.libautobus.protocol.Protobuf.ExceptionInstance getDefaultInstanceForType() {
        return afn.libautobus.protocol.Protobuf.ExceptionInstance.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public afn.libautobus.protocol.Protobuf.ExceptionInstance build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private afn.libautobus.protocol.Protobuf.ExceptionInstance buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public afn.libautobus.protocol.Protobuf.ExceptionInstance buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        afn.libautobus.protocol.Protobuf.ExceptionInstance returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof afn.libautobus.protocol.Protobuf.ExceptionInstance) {
          return mergeFrom((afn.libautobus.protocol.Protobuf.ExceptionInstance)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(afn.libautobus.protocol.Protobuf.ExceptionInstance other) {
        if (other == afn.libautobus.protocol.Protobuf.ExceptionInstance.getDefaultInstance()) return this;
        if (other.hasText()) {
          setText(other.getText());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 10: {
              setText(input.readString());
              break;
            }
          }
        }
      }
      
      
      // optional string text = 1;
      public boolean hasText() {
        return result.hasText();
      }
      public java.lang.String getText() {
        return result.getText();
      }
      public Builder setText(java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasText = true;
        result.text_ = value;
        return this;
      }
      public Builder clearText() {
        result.hasText = false;
        result.text_ = getDefaultInstance().getText();
        return this;
      }
    }
    
    static {
      afn.libautobus.protocol.Protobuf.getDescriptor();
    }
    
    static {
      afn.libautobus.protocol.Protobuf.internalForceInit();
    }
  }
  
  public static final class BoolInstance extends
      com.google.protobuf.GeneratedMessage {
    // Use BoolInstance.newBuilder() to construct.
    private BoolInstance() {}
    
    private static final BoolInstance defaultInstance = new BoolInstance();
    public static BoolInstance getDefaultInstance() {
      return defaultInstance;
    }
    
    public BoolInstance getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return afn.libautobus.protocol.Protobuf.internal_static_BoolInstance_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return afn.libautobus.protocol.Protobuf.internal_static_BoolInstance_fieldAccessorTable;
    }
    
    // required bool value = 1;
    public static final int VALUE_FIELD_NUMBER = 1;
    private boolean hasValue;
    private boolean value_ = false;
    public boolean hasValue() { return hasValue; }
    public boolean getValue() { return value_; }
    
    public final boolean isInitialized() {
      if (!hasValue) return false;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (hasValue()) {
        output.writeBool(1, getValue());
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (hasValue()) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(1, getValue());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static afn.libautobus.protocol.Protobuf.BoolInstance parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static afn.libautobus.protocol.Protobuf.BoolInstance parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static afn.libautobus.protocol.Protobuf.BoolInstance parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static afn.libautobus.protocol.Protobuf.BoolInstance parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static afn.libautobus.protocol.Protobuf.BoolInstance parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static afn.libautobus.protocol.Protobuf.BoolInstance parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static afn.libautobus.protocol.Protobuf.BoolInstance parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeDelimitedFrom(input).buildParsed();
    }
    public static afn.libautobus.protocol.Protobuf.BoolInstance parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeDelimitedFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static afn.libautobus.protocol.Protobuf.BoolInstance parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static afn.libautobus.protocol.Protobuf.BoolInstance parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(afn.libautobus.protocol.Protobuf.BoolInstance prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private afn.libautobus.protocol.Protobuf.BoolInstance result;
      
      // Construct using afn.libautobus.protocol.Protobuf.BoolInstance.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new afn.libautobus.protocol.Protobuf.BoolInstance();
        return builder;
      }
      
      protected afn.libautobus.protocol.Protobuf.BoolInstance internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new afn.libautobus.protocol.Protobuf.BoolInstance();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return afn.libautobus.protocol.Protobuf.BoolInstance.getDescriptor();
      }
      
      public afn.libautobus.protocol.Protobuf.BoolInstance getDefaultInstanceForType() {
        return afn.libautobus.protocol.Protobuf.BoolInstance.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public afn.libautobus.protocol.Protobuf.BoolInstance build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private afn.libautobus.protocol.Protobuf.BoolInstance buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public afn.libautobus.protocol.Protobuf.BoolInstance buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        afn.libautobus.protocol.Protobuf.BoolInstance returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof afn.libautobus.protocol.Protobuf.BoolInstance) {
          return mergeFrom((afn.libautobus.protocol.Protobuf.BoolInstance)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(afn.libautobus.protocol.Protobuf.BoolInstance other) {
        if (other == afn.libautobus.protocol.Protobuf.BoolInstance.getDefaultInstance()) return this;
        if (other.hasValue()) {
          setValue(other.getValue());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 8: {
              setValue(input.readBool());
              break;
            }
          }
        }
      }
      
      
      // required bool value = 1;
      public boolean hasValue() {
        return result.hasValue();
      }
      public boolean getValue() {
        return result.getValue();
      }
      public Builder setValue(boolean value) {
        result.hasValue = true;
        result.value_ = value;
        return this;
      }
      public Builder clearValue() {
        result.hasValue = false;
        result.value_ = false;
        return this;
      }
    }
    
    static {
      afn.libautobus.protocol.Protobuf.getDescriptor();
    }
    
    static {
      afn.libautobus.protocol.Protobuf.internalForceInit();
    }
  }
  
  public static final class Message extends
      com.google.protobuf.GeneratedMessage {
    // Use Message.newBuilder() to construct.
    private Message() {}
    
    private static final Message defaultInstance = new Message();
    public static Message getDefaultInstance() {
      return defaultInstance;
    }
    
    public Message getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return afn.libautobus.protocol.Protobuf.internal_static_Message_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return afn.libautobus.protocol.Protobuf.internal_static_Message_fieldAccessorTable;
    }
    
    // required fixed32 message_type = 1;
    public static final int MESSAGE_TYPE_FIELD_NUMBER = 1;
    private boolean hasMessageType;
    private int messageType_ = 0;
    public boolean hasMessageType() { return hasMessageType; }
    public int getMessageType() { return messageType_; }
    
    // required fixed64 message_id = 60;
    public static final int MESSAGE_ID_FIELD_NUMBER = 60;
    private boolean hasMessageId;
    private long messageId_ = 0L;
    public boolean hasMessageId() { return hasMessageId; }
    public long getMessageId() { return messageId_; }
    
    // optional .RegisterInterfaceCommand value2 = 2;
    public static final int VALUE2_FIELD_NUMBER = 2;
    private boolean hasValue2;
    private afn.libautobus.protocol.Protobuf.RegisterInterfaceCommand value2_ = afn.libautobus.protocol.Protobuf.RegisterInterfaceCommand.getDefaultInstance();
    public boolean hasValue2() { return hasValue2; }
    public afn.libautobus.protocol.Protobuf.RegisterInterfaceCommand getValue2() { return value2_; }
    
    // optional .RegisterInterfaceResponse value3 = 3;
    public static final int VALUE3_FIELD_NUMBER = 3;
    private boolean hasValue3;
    private afn.libautobus.protocol.Protobuf.RegisterInterfaceResponse value3_ = afn.libautobus.protocol.Protobuf.RegisterInterfaceResponse.getDefaultInstance();
    public boolean hasValue3() { return hasValue3; }
    public afn.libautobus.protocol.Protobuf.RegisterInterfaceResponse getValue3() { return value3_; }
    
    // optional .RegisterFunctionCommand value4 = 4;
    public static final int VALUE4_FIELD_NUMBER = 4;
    private boolean hasValue4;
    private afn.libautobus.protocol.Protobuf.RegisterFunctionCommand value4_ = afn.libautobus.protocol.Protobuf.RegisterFunctionCommand.getDefaultInstance();
    public boolean hasValue4() { return hasValue4; }
    public afn.libautobus.protocol.Protobuf.RegisterFunctionCommand getValue4() { return value4_; }
    
    // optional .RegisterFunctionResponse value5 = 5;
    public static final int VALUE5_FIELD_NUMBER = 5;
    private boolean hasValue5;
    private afn.libautobus.protocol.Protobuf.RegisterFunctionResponse value5_ = afn.libautobus.protocol.Protobuf.RegisterFunctionResponse.getDefaultInstance();
    public boolean hasValue5() { return hasValue5; }
    public afn.libautobus.protocol.Protobuf.RegisterFunctionResponse getValue5() { return value5_; }
    
    // optional .CallFunctionCommand value6 = 6;
    public static final int VALUE6_FIELD_NUMBER = 6;
    private boolean hasValue6;
    private afn.libautobus.protocol.Protobuf.CallFunctionCommand value6_ = afn.libautobus.protocol.Protobuf.CallFunctionCommand.getDefaultInstance();
    public boolean hasValue6() { return hasValue6; }
    public afn.libautobus.protocol.Protobuf.CallFunctionCommand getValue6() { return value6_; }
    
    // optional .CallFunctionResponse value7 = 7;
    public static final int VALUE7_FIELD_NUMBER = 7;
    private boolean hasValue7;
    private afn.libautobus.protocol.Protobuf.CallFunctionResponse value7_ = afn.libautobus.protocol.Protobuf.CallFunctionResponse.getDefaultInstance();
    public boolean hasValue7() { return hasValue7; }
    public afn.libautobus.protocol.Protobuf.CallFunctionResponse getValue7() { return value7_; }
    
    // optional .RunFunctionCommand value8 = 8;
    public static final int VALUE8_FIELD_NUMBER = 8;
    private boolean hasValue8;
    private afn.libautobus.protocol.Protobuf.RunFunctionCommand value8_ = afn.libautobus.protocol.Protobuf.RunFunctionCommand.getDefaultInstance();
    public boolean hasValue8() { return hasValue8; }
    public afn.libautobus.protocol.Protobuf.RunFunctionCommand getValue8() { return value8_; }
    
    // optional .RunFunctionResponse value9 = 9;
    public static final int VALUE9_FIELD_NUMBER = 9;
    private boolean hasValue9;
    private afn.libautobus.protocol.Protobuf.RunFunctionResponse value9_ = afn.libautobus.protocol.Protobuf.RunFunctionResponse.getDefaultInstance();
    public boolean hasValue9() { return hasValue9; }
    public afn.libautobus.protocol.Protobuf.RunFunctionResponse getValue9() { return value9_; }
    
    // optional .ErrorResponse value10 = 10;
    public static final int VALUE10_FIELD_NUMBER = 10;
    private boolean hasValue10;
    private afn.libautobus.protocol.Protobuf.ErrorResponse value10_ = afn.libautobus.protocol.Protobuf.ErrorResponse.getDefaultInstance();
    public boolean hasValue10() { return hasValue10; }
    public afn.libautobus.protocol.Protobuf.ErrorResponse getValue10() { return value10_; }
    
    // optional .RegisterEventCommand value11 = 11;
    public static final int VALUE11_FIELD_NUMBER = 11;
    private boolean hasValue11;
    private afn.libautobus.protocol.Protobuf.RegisterEventCommand value11_ = afn.libautobus.protocol.Protobuf.RegisterEventCommand.getDefaultInstance();
    public boolean hasValue11() { return hasValue11; }
    public afn.libautobus.protocol.Protobuf.RegisterEventCommand getValue11() { return value11_; }
    
    // optional .RegisterEventResponse value12 = 12;
    public static final int VALUE12_FIELD_NUMBER = 12;
    private boolean hasValue12;
    private afn.libautobus.protocol.Protobuf.RegisterEventResponse value12_ = afn.libautobus.protocol.Protobuf.RegisterEventResponse.getDefaultInstance();
    public boolean hasValue12() { return hasValue12; }
    public afn.libautobus.protocol.Protobuf.RegisterEventResponse getValue12() { return value12_; }
    
    // optional .RegisterListenerCommand value13 = 13;
    public static final int VALUE13_FIELD_NUMBER = 13;
    private boolean hasValue13;
    private afn.libautobus.protocol.Protobuf.RegisterListenerCommand value13_ = afn.libautobus.protocol.Protobuf.RegisterListenerCommand.getDefaultInstance();
    public boolean hasValue13() { return hasValue13; }
    public afn.libautobus.protocol.Protobuf.RegisterListenerCommand getValue13() { return value13_; }
    
    // optional .RegisterListenerCommand value14 = 14;
    public static final int VALUE14_FIELD_NUMBER = 14;
    private boolean hasValue14;
    private afn.libautobus.protocol.Protobuf.RegisterListenerCommand value14_ = afn.libautobus.protocol.Protobuf.RegisterListenerCommand.getDefaultInstance();
    public boolean hasValue14() { return hasValue14; }
    public afn.libautobus.protocol.Protobuf.RegisterListenerCommand getValue14() { return value14_; }
    
    // optional .DeregisterListenerCommand value15 = 15;
    public static final int VALUE15_FIELD_NUMBER = 15;
    private boolean hasValue15;
    private afn.libautobus.protocol.Protobuf.DeregisterListenerCommand value15_ = afn.libautobus.protocol.Protobuf.DeregisterListenerCommand.getDefaultInstance();
    public boolean hasValue15() { return hasValue15; }
    public afn.libautobus.protocol.Protobuf.DeregisterListenerCommand getValue15() { return value15_; }
    
    // optional .DeregisterListenerResponse value16 = 16;
    public static final int VALUE16_FIELD_NUMBER = 16;
    private boolean hasValue16;
    private afn.libautobus.protocol.Protobuf.DeregisterListenerResponse value16_ = afn.libautobus.protocol.Protobuf.DeregisterListenerResponse.getDefaultInstance();
    public boolean hasValue16() { return hasValue16; }
    public afn.libautobus.protocol.Protobuf.DeregisterListenerResponse getValue16() { return value16_; }
    
    // optional .FireEventCommand value17 = 17;
    public static final int VALUE17_FIELD_NUMBER = 17;
    private boolean hasValue17;
    private afn.libautobus.protocol.Protobuf.FireEventCommand value17_ = afn.libautobus.protocol.Protobuf.FireEventCommand.getDefaultInstance();
    public boolean hasValue17() { return hasValue17; }
    public afn.libautobus.protocol.Protobuf.FireEventCommand getValue17() { return value17_; }
    
    // optional .RegisterObjectCommand value19 = 19;
    public static final int VALUE19_FIELD_NUMBER = 19;
    private boolean hasValue19;
    private afn.libautobus.protocol.Protobuf.RegisterObjectCommand value19_ = afn.libautobus.protocol.Protobuf.RegisterObjectCommand.getDefaultInstance();
    public boolean hasValue19() { return hasValue19; }
    public afn.libautobus.protocol.Protobuf.RegisterObjectCommand getValue19() { return value19_; }
    
    // optional .RegisterObjectResponse value20 = 20;
    public static final int VALUE20_FIELD_NUMBER = 20;
    private boolean hasValue20;
    private afn.libautobus.protocol.Protobuf.RegisterObjectResponse value20_ = afn.libautobus.protocol.Protobuf.RegisterObjectResponse.getDefaultInstance();
    public boolean hasValue20() { return hasValue20; }
    public afn.libautobus.protocol.Protobuf.RegisterObjectResponse getValue20() { return value20_; }
    
    // optional .WatchObjectCommand value21 = 21;
    public static final int VALUE21_FIELD_NUMBER = 21;
    private boolean hasValue21;
    private afn.libautobus.protocol.Protobuf.WatchObjectCommand value21_ = afn.libautobus.protocol.Protobuf.WatchObjectCommand.getDefaultInstance();
    public boolean hasValue21() { return hasValue21; }
    public afn.libautobus.protocol.Protobuf.WatchObjectCommand getValue21() { return value21_; }
    
    // optional .WatchObjectResponse value22 = 22;
    public static final int VALUE22_FIELD_NUMBER = 22;
    private boolean hasValue22;
    private afn.libautobus.protocol.Protobuf.WatchObjectResponse value22_ = afn.libautobus.protocol.Protobuf.WatchObjectResponse.getDefaultInstance();
    public boolean hasValue22() { return hasValue22; }
    public afn.libautobus.protocol.Protobuf.WatchObjectResponse getValue22() { return value22_; }
    
    // optional .UnwatchObjectCommand value23 = 23;
    public static final int VALUE23_FIELD_NUMBER = 23;
    private boolean hasValue23;
    private afn.libautobus.protocol.Protobuf.UnwatchObjectCommand value23_ = afn.libautobus.protocol.Protobuf.UnwatchObjectCommand.getDefaultInstance();
    public boolean hasValue23() { return hasValue23; }
    public afn.libautobus.protocol.Protobuf.UnwatchObjectCommand getValue23() { return value23_; }
    
    // optional .UnwatchObjectCommand value24 = 24;
    public static final int VALUE24_FIELD_NUMBER = 24;
    private boolean hasValue24;
    private afn.libautobus.protocol.Protobuf.UnwatchObjectCommand value24_ = afn.libautobus.protocol.Protobuf.UnwatchObjectCommand.getDefaultInstance();
    public boolean hasValue24() { return hasValue24; }
    public afn.libautobus.protocol.Protobuf.UnwatchObjectCommand getValue24() { return value24_; }
    
    // optional .SetObjectCommand value25 = 25;
    public static final int VALUE25_FIELD_NUMBER = 25;
    private boolean hasValue25;
    private afn.libautobus.protocol.Protobuf.SetObjectCommand value25_ = afn.libautobus.protocol.Protobuf.SetObjectCommand.getDefaultInstance();
    public boolean hasValue25() { return hasValue25; }
    public afn.libautobus.protocol.Protobuf.SetObjectCommand getValue25() { return value25_; }
    
    // required string value_n = 100;
    public static final int VALUE_N_FIELD_NUMBER = 100;
    private boolean hasValueN;
    private java.lang.String valueN_ = "";
    public boolean hasValueN() { return hasValueN; }
    public java.lang.String getValueN() { return valueN_; }
    
    public final boolean isInitialized() {
      if (!hasMessageType) return false;
      if (!hasMessageId) return false;
      if (!hasValueN) return false;
      if (hasValue2()) {
        if (!getValue2().isInitialized()) return false;
      }
      if (hasValue4()) {
        if (!getValue4().isInitialized()) return false;
      }
      if (hasValue6()) {
        if (!getValue6().isInitialized()) return false;
      }
      if (hasValue7()) {
        if (!getValue7().isInitialized()) return false;
      }
      if (hasValue8()) {
        if (!getValue8().isInitialized()) return false;
      }
      if (hasValue9()) {
        if (!getValue9().isInitialized()) return false;
      }
      if (hasValue11()) {
        if (!getValue11().isInitialized()) return false;
      }
      if (hasValue13()) {
        if (!getValue13().isInitialized()) return false;
      }
      if (hasValue14()) {
        if (!getValue14().isInitialized()) return false;
      }
      if (hasValue15()) {
        if (!getValue15().isInitialized()) return false;
      }
      if (hasValue17()) {
        if (!getValue17().isInitialized()) return false;
      }
      if (hasValue19()) {
        if (!getValue19().isInitialized()) return false;
      }
      if (hasValue21()) {
        if (!getValue21().isInitialized()) return false;
      }
      if (hasValue22()) {
        if (!getValue22().isInitialized()) return false;
      }
      if (hasValue23()) {
        if (!getValue23().isInitialized()) return false;
      }
      if (hasValue24()) {
        if (!getValue24().isInitialized()) return false;
      }
      if (hasValue25()) {
        if (!getValue25().isInitialized()) return false;
      }
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (hasMessageType()) {
        output.writeFixed32(1, getMessageType());
      }
      if (hasValue2()) {
        output.writeMessage(2, getValue2());
      }
      if (hasValue3()) {
        output.writeMessage(3, getValue3());
      }
      if (hasValue4()) {
        output.writeMessage(4, getValue4());
      }
      if (hasValue5()) {
        output.writeMessage(5, getValue5());
      }
      if (hasValue6()) {
        output.writeMessage(6, getValue6());
      }
      if (hasValue7()) {
        output.writeMessage(7, getValue7());
      }
      if (hasValue8()) {
        output.writeMessage(8, getValue8());
      }
      if (hasValue9()) {
        output.writeMessage(9, getValue9());
      }
      if (hasValue10()) {
        output.writeMessage(10, getValue10());
      }
      if (hasValue11()) {
        output.writeMessage(11, getValue11());
      }
      if (hasValue12()) {
        output.writeMessage(12, getValue12());
      }
      if (hasValue13()) {
        output.writeMessage(13, getValue13());
      }
      if (hasValue14()) {
        output.writeMessage(14, getValue14());
      }
      if (hasValue15()) {
        output.writeMessage(15, getValue15());
      }
      if (hasValue16()) {
        output.writeMessage(16, getValue16());
      }
      if (hasValue17()) {
        output.writeMessage(17, getValue17());
      }
      if (hasValue19()) {
        output.writeMessage(19, getValue19());
      }
      if (hasValue20()) {
        output.writeMessage(20, getValue20());
      }
      if (hasValue21()) {
        output.writeMessage(21, getValue21());
      }
      if (hasValue22()) {
        output.writeMessage(22, getValue22());
      }
      if (hasValue23()) {
        output.writeMessage(23, getValue23());
      }
      if (hasValue24()) {
        output.writeMessage(24, getValue24());
      }
      if (hasValue25()) {
        output.writeMessage(25, getValue25());
      }
      if (hasMessageId()) {
        output.writeFixed64(60, getMessageId());
      }
      if (hasValueN()) {
        output.writeString(100, getValueN());
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (hasMessageType()) {
        size += com.google.protobuf.CodedOutputStream
          .computeFixed32Size(1, getMessageType());
      }
      if (hasValue2()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, getValue2());
      }
      if (hasValue3()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, getValue3());
      }
      if (hasValue4()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, getValue4());
      }
      if (hasValue5()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(5, getValue5());
      }
      if (hasValue6()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(6, getValue6());
      }
      if (hasValue7()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(7, getValue7());
      }
      if (hasValue8()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(8, getValue8());
      }
      if (hasValue9()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(9, getValue9());
      }
      if (hasValue10()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(10, getValue10());
      }
      if (hasValue11()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(11, getValue11());
      }
      if (hasValue12()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(12, getValue12());
      }
      if (hasValue13()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(13, getValue13());
      }
      if (hasValue14()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(14, getValue14());
      }
      if (hasValue15()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(15, getValue15());
      }
      if (hasValue16()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(16, getValue16());
      }
      if (hasValue17()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(17, getValue17());
      }
      if (hasValue19()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(19, getValue19());
      }
      if (hasValue20()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(20, getValue20());
      }
      if (hasValue21()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(21, getValue21());
      }
      if (hasValue22()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(22, getValue22());
      }
      if (hasValue23()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(23, getValue23());
      }
      if (hasValue24()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(24, getValue24());
      }
      if (hasValue25()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(25, getValue25());
      }
      if (hasMessageId()) {
        size += com.google.protobuf.CodedOutputStream
          .computeFixed64Size(60, getMessageId());
      }
      if (hasValueN()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(100, getValueN());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static afn.libautobus.protocol.Protobuf.Message parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static afn.libautobus.protocol.Protobuf.Message parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static afn.libautobus.protocol.Protobuf.Message parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static afn.libautobus.protocol.Protobuf.Message parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static afn.libautobus.protocol.Protobuf.Message parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static afn.libautobus.protocol.Protobuf.Message parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static afn.libautobus.protocol.Protobuf.Message parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeDelimitedFrom(input).buildParsed();
    }
    public static afn.libautobus.protocol.Protobuf.Message parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeDelimitedFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static afn.libautobus.protocol.Protobuf.Message parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static afn.libautobus.protocol.Protobuf.Message parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(afn.libautobus.protocol.Protobuf.Message prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private afn.libautobus.protocol.Protobuf.Message result;
      
      // Construct using afn.libautobus.protocol.Protobuf.Message.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new afn.libautobus.protocol.Protobuf.Message();
        return builder;
      }
      
      protected afn.libautobus.protocol.Protobuf.Message internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new afn.libautobus.protocol.Protobuf.Message();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return afn.libautobus.protocol.Protobuf.Message.getDescriptor();
      }
      
      public afn.libautobus.protocol.Protobuf.Message getDefaultInstanceForType() {
        return afn.libautobus.protocol.Protobuf.Message.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public afn.libautobus.protocol.Protobuf.Message build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private afn.libautobus.protocol.Protobuf.Message buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public afn.libautobus.protocol.Protobuf.Message buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        afn.libautobus.protocol.Protobuf.Message returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof afn.libautobus.protocol.Protobuf.Message) {
          return mergeFrom((afn.libautobus.protocol.Protobuf.Message)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(afn.libautobus.protocol.Protobuf.Message other) {
        if (other == afn.libautobus.protocol.Protobuf.Message.getDefaultInstance()) return this;
        if (other.hasMessageType()) {
          setMessageType(other.getMessageType());
        }
        if (other.hasMessageId()) {
          setMessageId(other.getMessageId());
        }
        if (other.hasValue2()) {
          mergeValue2(other.getValue2());
        }
        if (other.hasValue3()) {
          mergeValue3(other.getValue3());
        }
        if (other.hasValue4()) {
          mergeValue4(other.getValue4());
        }
        if (other.hasValue5()) {
          mergeValue5(other.getValue5());
        }
        if (other.hasValue6()) {
          mergeValue6(other.getValue6());
        }
        if (other.hasValue7()) {
          mergeValue7(other.getValue7());
        }
        if (other.hasValue8()) {
          mergeValue8(other.getValue8());
        }
        if (other.hasValue9()) {
          mergeValue9(other.getValue9());
        }
        if (other.hasValue10()) {
          mergeValue10(other.getValue10());
        }
        if (other.hasValue11()) {
          mergeValue11(other.getValue11());
        }
        if (other.hasValue12()) {
          mergeValue12(other.getValue12());
        }
        if (other.hasValue13()) {
          mergeValue13(other.getValue13());
        }
        if (other.hasValue14()) {
          mergeValue14(other.getValue14());
        }
        if (other.hasValue15()) {
          mergeValue15(other.getValue15());
        }
        if (other.hasValue16()) {
          mergeValue16(other.getValue16());
        }
        if (other.hasValue17()) {
          mergeValue17(other.getValue17());
        }
        if (other.hasValue19()) {
          mergeValue19(other.getValue19());
        }
        if (other.hasValue20()) {
          mergeValue20(other.getValue20());
        }
        if (other.hasValue21()) {
          mergeValue21(other.getValue21());
        }
        if (other.hasValue22()) {
          mergeValue22(other.getValue22());
        }
        if (other.hasValue23()) {
          mergeValue23(other.getValue23());
        }
        if (other.hasValue24()) {
          mergeValue24(other.getValue24());
        }
        if (other.hasValue25()) {
          mergeValue25(other.getValue25());
        }
        if (other.hasValueN()) {
          setValueN(other.getValueN());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 13: {
              setMessageType(input.readFixed32());
              break;
            }
            case 18: {
              afn.libautobus.protocol.Protobuf.RegisterInterfaceCommand.Builder subBuilder = afn.libautobus.protocol.Protobuf.RegisterInterfaceCommand.newBuilder();
              if (hasValue2()) {
                subBuilder.mergeFrom(getValue2());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setValue2(subBuilder.buildPartial());
              break;
            }
            case 26: {
              afn.libautobus.protocol.Protobuf.RegisterInterfaceResponse.Builder subBuilder = afn.libautobus.protocol.Protobuf.RegisterInterfaceResponse.newBuilder();
              if (hasValue3()) {
                subBuilder.mergeFrom(getValue3());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setValue3(subBuilder.buildPartial());
              break;
            }
            case 34: {
              afn.libautobus.protocol.Protobuf.RegisterFunctionCommand.Builder subBuilder = afn.libautobus.protocol.Protobuf.RegisterFunctionCommand.newBuilder();
              if (hasValue4()) {
                subBuilder.mergeFrom(getValue4());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setValue4(subBuilder.buildPartial());
              break;
            }
            case 42: {
              afn.libautobus.protocol.Protobuf.RegisterFunctionResponse.Builder subBuilder = afn.libautobus.protocol.Protobuf.RegisterFunctionResponse.newBuilder();
              if (hasValue5()) {
                subBuilder.mergeFrom(getValue5());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setValue5(subBuilder.buildPartial());
              break;
            }
            case 50: {
              afn.libautobus.protocol.Protobuf.CallFunctionCommand.Builder subBuilder = afn.libautobus.protocol.Protobuf.CallFunctionCommand.newBuilder();
              if (hasValue6()) {
                subBuilder.mergeFrom(getValue6());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setValue6(subBuilder.buildPartial());
              break;
            }
            case 58: {
              afn.libautobus.protocol.Protobuf.CallFunctionResponse.Builder subBuilder = afn.libautobus.protocol.Protobuf.CallFunctionResponse.newBuilder();
              if (hasValue7()) {
                subBuilder.mergeFrom(getValue7());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setValue7(subBuilder.buildPartial());
              break;
            }
            case 66: {
              afn.libautobus.protocol.Protobuf.RunFunctionCommand.Builder subBuilder = afn.libautobus.protocol.Protobuf.RunFunctionCommand.newBuilder();
              if (hasValue8()) {
                subBuilder.mergeFrom(getValue8());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setValue8(subBuilder.buildPartial());
              break;
            }
            case 74: {
              afn.libautobus.protocol.Protobuf.RunFunctionResponse.Builder subBuilder = afn.libautobus.protocol.Protobuf.RunFunctionResponse.newBuilder();
              if (hasValue9()) {
                subBuilder.mergeFrom(getValue9());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setValue9(subBuilder.buildPartial());
              break;
            }
            case 82: {
              afn.libautobus.protocol.Protobuf.ErrorResponse.Builder subBuilder = afn.libautobus.protocol.Protobuf.ErrorResponse.newBuilder();
              if (hasValue10()) {
                subBuilder.mergeFrom(getValue10());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setValue10(subBuilder.buildPartial());
              break;
            }
            case 90: {
              afn.libautobus.protocol.Protobuf.RegisterEventCommand.Builder subBuilder = afn.libautobus.protocol.Protobuf.RegisterEventCommand.newBuilder();
              if (hasValue11()) {
                subBuilder.mergeFrom(getValue11());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setValue11(subBuilder.buildPartial());
              break;
            }
            case 98: {
              afn.libautobus.protocol.Protobuf.RegisterEventResponse.Builder subBuilder = afn.libautobus.protocol.Protobuf.RegisterEventResponse.newBuilder();
              if (hasValue12()) {
                subBuilder.mergeFrom(getValue12());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setValue12(subBuilder.buildPartial());
              break;
            }
            case 106: {
              afn.libautobus.protocol.Protobuf.RegisterListenerCommand.Builder subBuilder = afn.libautobus.protocol.Protobuf.RegisterListenerCommand.newBuilder();
              if (hasValue13()) {
                subBuilder.mergeFrom(getValue13());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setValue13(subBuilder.buildPartial());
              break;
            }
            case 114: {
              afn.libautobus.protocol.Protobuf.RegisterListenerCommand.Builder subBuilder = afn.libautobus.protocol.Protobuf.RegisterListenerCommand.newBuilder();
              if (hasValue14()) {
                subBuilder.mergeFrom(getValue14());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setValue14(subBuilder.buildPartial());
              break;
            }
            case 122: {
              afn.libautobus.protocol.Protobuf.DeregisterListenerCommand.Builder subBuilder = afn.libautobus.protocol.Protobuf.DeregisterListenerCommand.newBuilder();
              if (hasValue15()) {
                subBuilder.mergeFrom(getValue15());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setValue15(subBuilder.buildPartial());
              break;
            }
            case 130: {
              afn.libautobus.protocol.Protobuf.DeregisterListenerResponse.Builder subBuilder = afn.libautobus.protocol.Protobuf.DeregisterListenerResponse.newBuilder();
              if (hasValue16()) {
                subBuilder.mergeFrom(getValue16());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setValue16(subBuilder.buildPartial());
              break;
            }
            case 138: {
              afn.libautobus.protocol.Protobuf.FireEventCommand.Builder subBuilder = afn.libautobus.protocol.Protobuf.FireEventCommand.newBuilder();
              if (hasValue17()) {
                subBuilder.mergeFrom(getValue17());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setValue17(subBuilder.buildPartial());
              break;
            }
            case 154: {
              afn.libautobus.protocol.Protobuf.RegisterObjectCommand.Builder subBuilder = afn.libautobus.protocol.Protobuf.RegisterObjectCommand.newBuilder();
              if (hasValue19()) {
                subBuilder.mergeFrom(getValue19());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setValue19(subBuilder.buildPartial());
              break;
            }
            case 162: {
              afn.libautobus.protocol.Protobuf.RegisterObjectResponse.Builder subBuilder = afn.libautobus.protocol.Protobuf.RegisterObjectResponse.newBuilder();
              if (hasValue20()) {
                subBuilder.mergeFrom(getValue20());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setValue20(subBuilder.buildPartial());
              break;
            }
            case 170: {
              afn.libautobus.protocol.Protobuf.WatchObjectCommand.Builder subBuilder = afn.libautobus.protocol.Protobuf.WatchObjectCommand.newBuilder();
              if (hasValue21()) {
                subBuilder.mergeFrom(getValue21());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setValue21(subBuilder.buildPartial());
              break;
            }
            case 178: {
              afn.libautobus.protocol.Protobuf.WatchObjectResponse.Builder subBuilder = afn.libautobus.protocol.Protobuf.WatchObjectResponse.newBuilder();
              if (hasValue22()) {
                subBuilder.mergeFrom(getValue22());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setValue22(subBuilder.buildPartial());
              break;
            }
            case 186: {
              afn.libautobus.protocol.Protobuf.UnwatchObjectCommand.Builder subBuilder = afn.libautobus.protocol.Protobuf.UnwatchObjectCommand.newBuilder();
              if (hasValue23()) {
                subBuilder.mergeFrom(getValue23());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setValue23(subBuilder.buildPartial());
              break;
            }
            case 194: {
              afn.libautobus.protocol.Protobuf.UnwatchObjectCommand.Builder subBuilder = afn.libautobus.protocol.Protobuf.UnwatchObjectCommand.newBuilder();
              if (hasValue24()) {
                subBuilder.mergeFrom(getValue24());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setValue24(subBuilder.buildPartial());
              break;
            }
            case 202: {
              afn.libautobus.protocol.Protobuf.SetObjectCommand.Builder subBuilder = afn.libautobus.protocol.Protobuf.SetObjectCommand.newBuilder();
              if (hasValue25()) {
                subBuilder.mergeFrom(getValue25());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setValue25(subBuilder.buildPartial());
              break;
            }
            case 481: {
              setMessageId(input.readFixed64());
              break;
            }
            case 802: {
              setValueN(input.readString());
              break;
            }
          }
        }
      }
      
      
      // required fixed32 message_type = 1;
      public boolean hasMessageType() {
        return result.hasMessageType();
      }
      public int getMessageType() {
        return result.getMessageType();
      }
      public Builder setMessageType(int value) {
        result.hasMessageType = true;
        result.messageType_ = value;
        return this;
      }
      public Builder clearMessageType() {
        result.hasMessageType = false;
        result.messageType_ = 0;
        return this;
      }
      
      // required fixed64 message_id = 60;
      public boolean hasMessageId() {
        return result.hasMessageId();
      }
      public long getMessageId() {
        return result.getMessageId();
      }
      public Builder setMessageId(long value) {
        result.hasMessageId = true;
        result.messageId_ = value;
        return this;
      }
      public Builder clearMessageId() {
        result.hasMessageId = false;
        result.messageId_ = 0L;
        return this;
      }
      
      // optional .RegisterInterfaceCommand value2 = 2;
      public boolean hasValue2() {
        return result.hasValue2();
      }
      public afn.libautobus.protocol.Protobuf.RegisterInterfaceCommand getValue2() {
        return result.getValue2();
      }
      public Builder setValue2(afn.libautobus.protocol.Protobuf.RegisterInterfaceCommand value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasValue2 = true;
        result.value2_ = value;
        return this;
      }
      public Builder setValue2(afn.libautobus.protocol.Protobuf.RegisterInterfaceCommand.Builder builderForValue) {
        result.hasValue2 = true;
        result.value2_ = builderForValue.build();
        return this;
      }
      public Builder mergeValue2(afn.libautobus.protocol.Protobuf.RegisterInterfaceCommand value) {
        if (result.hasValue2() &&
            result.value2_ != afn.libautobus.protocol.Protobuf.RegisterInterfaceCommand.getDefaultInstance()) {
          result.value2_ =
            afn.libautobus.protocol.Protobuf.RegisterInterfaceCommand.newBuilder(result.value2_).mergeFrom(value).buildPartial();
        } else {
          result.value2_ = value;
        }
        result.hasValue2 = true;
        return this;
      }
      public Builder clearValue2() {
        result.hasValue2 = false;
        result.value2_ = afn.libautobus.protocol.Protobuf.RegisterInterfaceCommand.getDefaultInstance();
        return this;
      }
      
      // optional .RegisterInterfaceResponse value3 = 3;
      public boolean hasValue3() {
        return result.hasValue3();
      }
      public afn.libautobus.protocol.Protobuf.RegisterInterfaceResponse getValue3() {
        return result.getValue3();
      }
      public Builder setValue3(afn.libautobus.protocol.Protobuf.RegisterInterfaceResponse value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasValue3 = true;
        result.value3_ = value;
        return this;
      }
      public Builder setValue3(afn.libautobus.protocol.Protobuf.RegisterInterfaceResponse.Builder builderForValue) {
        result.hasValue3 = true;
        result.value3_ = builderForValue.build();
        return this;
      }
      public Builder mergeValue3(afn.libautobus.protocol.Protobuf.RegisterInterfaceResponse value) {
        if (result.hasValue3() &&
            result.value3_ != afn.libautobus.protocol.Protobuf.RegisterInterfaceResponse.getDefaultInstance()) {
          result.value3_ =
            afn.libautobus.protocol.Protobuf.RegisterInterfaceResponse.newBuilder(result.value3_).mergeFrom(value).buildPartial();
        } else {
          result.value3_ = value;
        }
        result.hasValue3 = true;
        return this;
      }
      public Builder clearValue3() {
        result.hasValue3 = false;
        result.value3_ = afn.libautobus.protocol.Protobuf.RegisterInterfaceResponse.getDefaultInstance();
        return this;
      }
      
      // optional .RegisterFunctionCommand value4 = 4;
      public boolean hasValue4() {
        return result.hasValue4();
      }
      public afn.libautobus.protocol.Protobuf.RegisterFunctionCommand getValue4() {
        return result.getValue4();
      }
      public Builder setValue4(afn.libautobus.protocol.Protobuf.RegisterFunctionCommand value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasValue4 = true;
        result.value4_ = value;
        return this;
      }
      public Builder setValue4(afn.libautobus.protocol.Protobuf.RegisterFunctionCommand.Builder builderForValue) {
        result.hasValue4 = true;
        result.value4_ = builderForValue.build();
        return this;
      }
      public Builder mergeValue4(afn.libautobus.protocol.Protobuf.RegisterFunctionCommand value) {
        if (result.hasValue4() &&
            result.value4_ != afn.libautobus.protocol.Protobuf.RegisterFunctionCommand.getDefaultInstance()) {
          result.value4_ =
            afn.libautobus.protocol.Protobuf.RegisterFunctionCommand.newBuilder(result.value4_).mergeFrom(value).buildPartial();
        } else {
          result.value4_ = value;
        }
        result.hasValue4 = true;
        return this;
      }
      public Builder clearValue4() {
        result.hasValue4 = false;
        result.value4_ = afn.libautobus.protocol.Protobuf.RegisterFunctionCommand.getDefaultInstance();
        return this;
      }
      
      // optional .RegisterFunctionResponse value5 = 5;
      public boolean hasValue5() {
        return result.hasValue5();
      }
      public afn.libautobus.protocol.Protobuf.RegisterFunctionResponse getValue5() {
        return result.getValue5();
      }
      public Builder setValue5(afn.libautobus.protocol.Protobuf.RegisterFunctionResponse value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasValue5 = true;
        result.value5_ = value;
        return this;
      }
      public Builder setValue5(afn.libautobus.protocol.Protobuf.RegisterFunctionResponse.Builder builderForValue) {
        result.hasValue5 = true;
        result.value5_ = builderForValue.build();
        return this;
      }
      public Builder mergeValue5(afn.libautobus.protocol.Protobuf.RegisterFunctionResponse value) {
        if (result.hasValue5() &&
            result.value5_ != afn.libautobus.protocol.Protobuf.RegisterFunctionResponse.getDefaultInstance()) {
          result.value5_ =
            afn.libautobus.protocol.Protobuf.RegisterFunctionResponse.newBuilder(result.value5_).mergeFrom(value).buildPartial();
        } else {
          result.value5_ = value;
        }
        result.hasValue5 = true;
        return this;
      }
      public Builder clearValue5() {
        result.hasValue5 = false;
        result.value5_ = afn.libautobus.protocol.Protobuf.RegisterFunctionResponse.getDefaultInstance();
        return this;
      }
      
      // optional .CallFunctionCommand value6 = 6;
      public boolean hasValue6() {
        return result.hasValue6();
      }
      public afn.libautobus.protocol.Protobuf.CallFunctionCommand getValue6() {
        return result.getValue6();
      }
      public Builder setValue6(afn.libautobus.protocol.Protobuf.CallFunctionCommand value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasValue6 = true;
        result.value6_ = value;
        return this;
      }
      public Builder setValue6(afn.libautobus.protocol.Protobuf.CallFunctionCommand.Builder builderForValue) {
        result.hasValue6 = true;
        result.value6_ = builderForValue.build();
        return this;
      }
      public Builder mergeValue6(afn.libautobus.protocol.Protobuf.CallFunctionCommand value) {
        if (result.hasValue6() &&
            result.value6_ != afn.libautobus.protocol.Protobuf.CallFunctionCommand.getDefaultInstance()) {
          result.value6_ =
            afn.libautobus.protocol.Protobuf.CallFunctionCommand.newBuilder(result.value6_).mergeFrom(value).buildPartial();
        } else {
          result.value6_ = value;
        }
        result.hasValue6 = true;
        return this;
      }
      public Builder clearValue6() {
        result.hasValue6 = false;
        result.value6_ = afn.libautobus.protocol.Protobuf.CallFunctionCommand.getDefaultInstance();
        return this;
      }
      
      // optional .CallFunctionResponse value7 = 7;
      public boolean hasValue7() {
        return result.hasValue7();
      }
      public afn.libautobus.protocol.Protobuf.CallFunctionResponse getValue7() {
        return result.getValue7();
      }
      public Builder setValue7(afn.libautobus.protocol.Protobuf.CallFunctionResponse value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasValue7 = true;
        result.value7_ = value;
        return this;
      }
      public Builder setValue7(afn.libautobus.protocol.Protobuf.CallFunctionResponse.Builder builderForValue) {
        result.hasValue7 = true;
        result.value7_ = builderForValue.build();
        return this;
      }
      public Builder mergeValue7(afn.libautobus.protocol.Protobuf.CallFunctionResponse value) {
        if (result.hasValue7() &&
            result.value7_ != afn.libautobus.protocol.Protobuf.CallFunctionResponse.getDefaultInstance()) {
          result.value7_ =
            afn.libautobus.protocol.Protobuf.CallFunctionResponse.newBuilder(result.value7_).mergeFrom(value).buildPartial();
        } else {
          result.value7_ = value;
        }
        result.hasValue7 = true;
        return this;
      }
      public Builder clearValue7() {
        result.hasValue7 = false;
        result.value7_ = afn.libautobus.protocol.Protobuf.CallFunctionResponse.getDefaultInstance();
        return this;
      }
      
      // optional .RunFunctionCommand value8 = 8;
      public boolean hasValue8() {
        return result.hasValue8();
      }
      public afn.libautobus.protocol.Protobuf.RunFunctionCommand getValue8() {
        return result.getValue8();
      }
      public Builder setValue8(afn.libautobus.protocol.Protobuf.RunFunctionCommand value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasValue8 = true;
        result.value8_ = value;
        return this;
      }
      public Builder setValue8(afn.libautobus.protocol.Protobuf.RunFunctionCommand.Builder builderForValue) {
        result.hasValue8 = true;
        result.value8_ = builderForValue.build();
        return this;
      }
      public Builder mergeValue8(afn.libautobus.protocol.Protobuf.RunFunctionCommand value) {
        if (result.hasValue8() &&
            result.value8_ != afn.libautobus.protocol.Protobuf.RunFunctionCommand.getDefaultInstance()) {
          result.value8_ =
            afn.libautobus.protocol.Protobuf.RunFunctionCommand.newBuilder(result.value8_).mergeFrom(value).buildPartial();
        } else {
          result.value8_ = value;
        }
        result.hasValue8 = true;
        return this;
      }
      public Builder clearValue8() {
        result.hasValue8 = false;
        result.value8_ = afn.libautobus.protocol.Protobuf.RunFunctionCommand.getDefaultInstance();
        return this;
      }
      
      // optional .RunFunctionResponse value9 = 9;
      public boolean hasValue9() {
        return result.hasValue9();
      }
      public afn.libautobus.protocol.Protobuf.RunFunctionResponse getValue9() {
        return result.getValue9();
      }
      public Builder setValue9(afn.libautobus.protocol.Protobuf.RunFunctionResponse value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasValue9 = true;
        result.value9_ = value;
        return this;
      }
      public Builder setValue9(afn.libautobus.protocol.Protobuf.RunFunctionResponse.Builder builderForValue) {
        result.hasValue9 = true;
        result.value9_ = builderForValue.build();
        return this;
      }
      public Builder mergeValue9(afn.libautobus.protocol.Protobuf.RunFunctionResponse value) {
        if (result.hasValue9() &&
            result.value9_ != afn.libautobus.protocol.Protobuf.RunFunctionResponse.getDefaultInstance()) {
          result.value9_ =
            afn.libautobus.protocol.Protobuf.RunFunctionResponse.newBuilder(result.value9_).mergeFrom(value).buildPartial();
        } else {
          result.value9_ = value;
        }
        result.hasValue9 = true;
        return this;
      }
      public Builder clearValue9() {
        result.hasValue9 = false;
        result.value9_ = afn.libautobus.protocol.Protobuf.RunFunctionResponse.getDefaultInstance();
        return this;
      }
      
      // optional .ErrorResponse value10 = 10;
      public boolean hasValue10() {
        return result.hasValue10();
      }
      public afn.libautobus.protocol.Protobuf.ErrorResponse getValue10() {
        return result.getValue10();
      }
      public Builder setValue10(afn.libautobus.protocol.Protobuf.ErrorResponse value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasValue10 = true;
        result.value10_ = value;
        return this;
      }
      public Builder setValue10(afn.libautobus.protocol.Protobuf.ErrorResponse.Builder builderForValue) {
        result.hasValue10 = true;
        result.value10_ = builderForValue.build();
        return this;
      }
      public Builder mergeValue10(afn.libautobus.protocol.Protobuf.ErrorResponse value) {
        if (result.hasValue10() &&
            result.value10_ != afn.libautobus.protocol.Protobuf.ErrorResponse.getDefaultInstance()) {
          result.value10_ =
            afn.libautobus.protocol.Protobuf.ErrorResponse.newBuilder(result.value10_).mergeFrom(value).buildPartial();
        } else {
          result.value10_ = value;
        }
        result.hasValue10 = true;
        return this;
      }
      public Builder clearValue10() {
        result.hasValue10 = false;
        result.value10_ = afn.libautobus.protocol.Protobuf.ErrorResponse.getDefaultInstance();
        return this;
      }
      
      // optional .RegisterEventCommand value11 = 11;
      public boolean hasValue11() {
        return result.hasValue11();
      }
      public afn.libautobus.protocol.Protobuf.RegisterEventCommand getValue11() {
        return result.getValue11();
      }
      public Builder setValue11(afn.libautobus.protocol.Protobuf.RegisterEventCommand value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasValue11 = true;
        result.value11_ = value;
        return this;
      }
      public Builder setValue11(afn.libautobus.protocol.Protobuf.RegisterEventCommand.Builder builderForValue) {
        result.hasValue11 = true;
        result.value11_ = builderForValue.build();
        return this;
      }
      public Builder mergeValue11(afn.libautobus.protocol.Protobuf.RegisterEventCommand value) {
        if (result.hasValue11() &&
            result.value11_ != afn.libautobus.protocol.Protobuf.RegisterEventCommand.getDefaultInstance()) {
          result.value11_ =
            afn.libautobus.protocol.Protobuf.RegisterEventCommand.newBuilder(result.value11_).mergeFrom(value).buildPartial();
        } else {
          result.value11_ = value;
        }
        result.hasValue11 = true;
        return this;
      }
      public Builder clearValue11() {
        result.hasValue11 = false;
        result.value11_ = afn.libautobus.protocol.Protobuf.RegisterEventCommand.getDefaultInstance();
        return this;
      }
      
      // optional .RegisterEventResponse value12 = 12;
      public boolean hasValue12() {
        return result.hasValue12();
      }
      public afn.libautobus.protocol.Protobuf.RegisterEventResponse getValue12() {
        return result.getValue12();
      }
      public Builder setValue12(afn.libautobus.protocol.Protobuf.RegisterEventResponse value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasValue12 = true;
        result.value12_ = value;
        return this;
      }
      public Builder setValue12(afn.libautobus.protocol.Protobuf.RegisterEventResponse.Builder builderForValue) {
        result.hasValue12 = true;
        result.value12_ = builderForValue.build();
        return this;
      }
      public Builder mergeValue12(afn.libautobus.protocol.Protobuf.RegisterEventResponse value) {
        if (result.hasValue12() &&
            result.value12_ != afn.libautobus.protocol.Protobuf.RegisterEventResponse.getDefaultInstance()) {
          result.value12_ =
            afn.libautobus.protocol.Protobuf.RegisterEventResponse.newBuilder(result.value12_).mergeFrom(value).buildPartial();
        } else {
          result.value12_ = value;
        }
        result.hasValue12 = true;
        return this;
      }
      public Builder clearValue12() {
        result.hasValue12 = false;
        result.value12_ = afn.libautobus.protocol.Protobuf.RegisterEventResponse.getDefaultInstance();
        return this;
      }
      
      // optional .RegisterListenerCommand value13 = 13;
      public boolean hasValue13() {
        return result.hasValue13();
      }
      public afn.libautobus.protocol.Protobuf.RegisterListenerCommand getValue13() {
        return result.getValue13();
      }
      public Builder setValue13(afn.libautobus.protocol.Protobuf.RegisterListenerCommand value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasValue13 = true;
        result.value13_ = value;
        return this;
      }
      public Builder setValue13(afn.libautobus.protocol.Protobuf.RegisterListenerCommand.Builder builderForValue) {
        result.hasValue13 = true;
        result.value13_ = builderForValue.build();
        return this;
      }
      public Builder mergeValue13(afn.libautobus.protocol.Protobuf.RegisterListenerCommand value) {
        if (result.hasValue13() &&
            result.value13_ != afn.libautobus.protocol.Protobuf.RegisterListenerCommand.getDefaultInstance()) {
          result.value13_ =
            afn.libautobus.protocol.Protobuf.RegisterListenerCommand.newBuilder(result.value13_).mergeFrom(value).buildPartial();
        } else {
          result.value13_ = value;
        }
        result.hasValue13 = true;
        return this;
      }
      public Builder clearValue13() {
        result.hasValue13 = false;
        result.value13_ = afn.libautobus.protocol.Protobuf.RegisterListenerCommand.getDefaultInstance();
        return this;
      }
      
      // optional .RegisterListenerCommand value14 = 14;
      public boolean hasValue14() {
        return result.hasValue14();
      }
      public afn.libautobus.protocol.Protobuf.RegisterListenerCommand getValue14() {
        return result.getValue14();
      }
      public Builder setValue14(afn.libautobus.protocol.Protobuf.RegisterListenerCommand value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasValue14 = true;
        result.value14_ = value;
        return this;
      }
      public Builder setValue14(afn.libautobus.protocol.Protobuf.RegisterListenerCommand.Builder builderForValue) {
        result.hasValue14 = true;
        result.value14_ = builderForValue.build();
        return this;
      }
      public Builder mergeValue14(afn.libautobus.protocol.Protobuf.RegisterListenerCommand value) {
        if (result.hasValue14() &&
            result.value14_ != afn.libautobus.protocol.Protobuf.RegisterListenerCommand.getDefaultInstance()) {
          result.value14_ =
            afn.libautobus.protocol.Protobuf.RegisterListenerCommand.newBuilder(result.value14_).mergeFrom(value).buildPartial();
        } else {
          result.value14_ = value;
        }
        result.hasValue14 = true;
        return this;
      }
      public Builder clearValue14() {
        result.hasValue14 = false;
        result.value14_ = afn.libautobus.protocol.Protobuf.RegisterListenerCommand.getDefaultInstance();
        return this;
      }
      
      // optional .DeregisterListenerCommand value15 = 15;
      public boolean hasValue15() {
        return result.hasValue15();
      }
      public afn.libautobus.protocol.Protobuf.DeregisterListenerCommand getValue15() {
        return result.getValue15();
      }
      public Builder setValue15(afn.libautobus.protocol.Protobuf.DeregisterListenerCommand value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasValue15 = true;
        result.value15_ = value;
        return this;
      }
      public Builder setValue15(afn.libautobus.protocol.Protobuf.DeregisterListenerCommand.Builder builderForValue) {
        result.hasValue15 = true;
        result.value15_ = builderForValue.build();
        return this;
      }
      public Builder mergeValue15(afn.libautobus.protocol.Protobuf.DeregisterListenerCommand value) {
        if (result.hasValue15() &&
            result.value15_ != afn.libautobus.protocol.Protobuf.DeregisterListenerCommand.getDefaultInstance()) {
          result.value15_ =
            afn.libautobus.protocol.Protobuf.DeregisterListenerCommand.newBuilder(result.value15_).mergeFrom(value).buildPartial();
        } else {
          result.value15_ = value;
        }
        result.hasValue15 = true;
        return this;
      }
      public Builder clearValue15() {
        result.hasValue15 = false;
        result.value15_ = afn.libautobus.protocol.Protobuf.DeregisterListenerCommand.getDefaultInstance();
        return this;
      }
      
      // optional .DeregisterListenerResponse value16 = 16;
      public boolean hasValue16() {
        return result.hasValue16();
      }
      public afn.libautobus.protocol.Protobuf.DeregisterListenerResponse getValue16() {
        return result.getValue16();
      }
      public Builder setValue16(afn.libautobus.protocol.Protobuf.DeregisterListenerResponse value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasValue16 = true;
        result.value16_ = value;
        return this;
      }
      public Builder setValue16(afn.libautobus.protocol.Protobuf.DeregisterListenerResponse.Builder builderForValue) {
        result.hasValue16 = true;
        result.value16_ = builderForValue.build();
        return this;
      }
      public Builder mergeValue16(afn.libautobus.protocol.Protobuf.DeregisterListenerResponse value) {
        if (result.hasValue16() &&
            result.value16_ != afn.libautobus.protocol.Protobuf.DeregisterListenerResponse.getDefaultInstance()) {
          result.value16_ =
            afn.libautobus.protocol.Protobuf.DeregisterListenerResponse.newBuilder(result.value16_).mergeFrom(value).buildPartial();
        } else {
          result.value16_ = value;
        }
        result.hasValue16 = true;
        return this;
      }
      public Builder clearValue16() {
        result.hasValue16 = false;
        result.value16_ = afn.libautobus.protocol.Protobuf.DeregisterListenerResponse.getDefaultInstance();
        return this;
      }
      
      // optional .FireEventCommand value17 = 17;
      public boolean hasValue17() {
        return result.hasValue17();
      }
      public afn.libautobus.protocol.Protobuf.FireEventCommand getValue17() {
        return result.getValue17();
      }
      public Builder setValue17(afn.libautobus.protocol.Protobuf.FireEventCommand value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasValue17 = true;
        result.value17_ = value;
        return this;
      }
      public Builder setValue17(afn.libautobus.protocol.Protobuf.FireEventCommand.Builder builderForValue) {
        result.hasValue17 = true;
        result.value17_ = builderForValue.build();
        return this;
      }
      public Builder mergeValue17(afn.libautobus.protocol.Protobuf.FireEventCommand value) {
        if (result.hasValue17() &&
            result.value17_ != afn.libautobus.protocol.Protobuf.FireEventCommand.getDefaultInstance()) {
          result.value17_ =
            afn.libautobus.protocol.Protobuf.FireEventCommand.newBuilder(result.value17_).mergeFrom(value).buildPartial();
        } else {
          result.value17_ = value;
        }
        result.hasValue17 = true;
        return this;
      }
      public Builder clearValue17() {
        result.hasValue17 = false;
        result.value17_ = afn.libautobus.protocol.Protobuf.FireEventCommand.getDefaultInstance();
        return this;
      }
      
      // optional .RegisterObjectCommand value19 = 19;
      public boolean hasValue19() {
        return result.hasValue19();
      }
      public afn.libautobus.protocol.Protobuf.RegisterObjectCommand getValue19() {
        return result.getValue19();
      }
      public Builder setValue19(afn.libautobus.protocol.Protobuf.RegisterObjectCommand value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasValue19 = true;
        result.value19_ = value;
        return this;
      }
      public Builder setValue19(afn.libautobus.protocol.Protobuf.RegisterObjectCommand.Builder builderForValue) {
        result.hasValue19 = true;
        result.value19_ = builderForValue.build();
        return this;
      }
      public Builder mergeValue19(afn.libautobus.protocol.Protobuf.RegisterObjectCommand value) {
        if (result.hasValue19() &&
            result.value19_ != afn.libautobus.protocol.Protobuf.RegisterObjectCommand.getDefaultInstance()) {
          result.value19_ =
            afn.libautobus.protocol.Protobuf.RegisterObjectCommand.newBuilder(result.value19_).mergeFrom(value).buildPartial();
        } else {
          result.value19_ = value;
        }
        result.hasValue19 = true;
        return this;
      }
      public Builder clearValue19() {
        result.hasValue19 = false;
        result.value19_ = afn.libautobus.protocol.Protobuf.RegisterObjectCommand.getDefaultInstance();
        return this;
      }
      
      // optional .RegisterObjectResponse value20 = 20;
      public boolean hasValue20() {
        return result.hasValue20();
      }
      public afn.libautobus.protocol.Protobuf.RegisterObjectResponse getValue20() {
        return result.getValue20();
      }
      public Builder setValue20(afn.libautobus.protocol.Protobuf.RegisterObjectResponse value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasValue20 = true;
        result.value20_ = value;
        return this;
      }
      public Builder setValue20(afn.libautobus.protocol.Protobuf.RegisterObjectResponse.Builder builderForValue) {
        result.hasValue20 = true;
        result.value20_ = builderForValue.build();
        return this;
      }
      public Builder mergeValue20(afn.libautobus.protocol.Protobuf.RegisterObjectResponse value) {
        if (result.hasValue20() &&
            result.value20_ != afn.libautobus.protocol.Protobuf.RegisterObjectResponse.getDefaultInstance()) {
          result.value20_ =
            afn.libautobus.protocol.Protobuf.RegisterObjectResponse.newBuilder(result.value20_).mergeFrom(value).buildPartial();
        } else {
          result.value20_ = value;
        }
        result.hasValue20 = true;
        return this;
      }
      public Builder clearValue20() {
        result.hasValue20 = false;
        result.value20_ = afn.libautobus.protocol.Protobuf.RegisterObjectResponse.getDefaultInstance();
        return this;
      }
      
      // optional .WatchObjectCommand value21 = 21;
      public boolean hasValue21() {
        return result.hasValue21();
      }
      public afn.libautobus.protocol.Protobuf.WatchObjectCommand getValue21() {
        return result.getValue21();
      }
      public Builder setValue21(afn.libautobus.protocol.Protobuf.WatchObjectCommand value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasValue21 = true;
        result.value21_ = value;
        return this;
      }
      public Builder setValue21(afn.libautobus.protocol.Protobuf.WatchObjectCommand.Builder builderForValue) {
        result.hasValue21 = true;
        result.value21_ = builderForValue.build();
        return this;
      }
      public Builder mergeValue21(afn.libautobus.protocol.Protobuf.WatchObjectCommand value) {
        if (result.hasValue21() &&
            result.value21_ != afn.libautobus.protocol.Protobuf.WatchObjectCommand.getDefaultInstance()) {
          result.value21_ =
            afn.libautobus.protocol.Protobuf.WatchObjectCommand.newBuilder(result.value21_).mergeFrom(value).buildPartial();
        } else {
          result.value21_ = value;
        }
        result.hasValue21 = true;
        return this;
      }
      public Builder clearValue21() {
        result.hasValue21 = false;
        result.value21_ = afn.libautobus.protocol.Protobuf.WatchObjectCommand.getDefaultInstance();
        return this;
      }
      
      // optional .WatchObjectResponse value22 = 22;
      public boolean hasValue22() {
        return result.hasValue22();
      }
      public afn.libautobus.protocol.Protobuf.WatchObjectResponse getValue22() {
        return result.getValue22();
      }
      public Builder setValue22(afn.libautobus.protocol.Protobuf.WatchObjectResponse value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasValue22 = true;
        result.value22_ = value;
        return this;
      }
      public Builder setValue22(afn.libautobus.protocol.Protobuf.WatchObjectResponse.Builder builderForValue) {
        result.hasValue22 = true;
        result.value22_ = builderForValue.build();
        return this;
      }
      public Builder mergeValue22(afn.libautobus.protocol.Protobuf.WatchObjectResponse value) {
        if (result.hasValue22() &&
            result.value22_ != afn.libautobus.protocol.Protobuf.WatchObjectResponse.getDefaultInstance()) {
          result.value22_ =
            afn.libautobus.protocol.Protobuf.WatchObjectResponse.newBuilder(result.value22_).mergeFrom(value).buildPartial();
        } else {
          result.value22_ = value;
        }
        result.hasValue22 = true;
        return this;
      }
      public Builder clearValue22() {
        result.hasValue22 = false;
        result.value22_ = afn.libautobus.protocol.Protobuf.WatchObjectResponse.getDefaultInstance();
        return this;
      }
      
      // optional .UnwatchObjectCommand value23 = 23;
      public boolean hasValue23() {
        return result.hasValue23();
      }
      public afn.libautobus.protocol.Protobuf.UnwatchObjectCommand getValue23() {
        return result.getValue23();
      }
      public Builder setValue23(afn.libautobus.protocol.Protobuf.UnwatchObjectCommand value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasValue23 = true;
        result.value23_ = value;
        return this;
      }
      public Builder setValue23(afn.libautobus.protocol.Protobuf.UnwatchObjectCommand.Builder builderForValue) {
        result.hasValue23 = true;
        result.value23_ = builderForValue.build();
        return this;
      }
      public Builder mergeValue23(afn.libautobus.protocol.Protobuf.UnwatchObjectCommand value) {
        if (result.hasValue23() &&
            result.value23_ != afn.libautobus.protocol.Protobuf.UnwatchObjectCommand.getDefaultInstance()) {
          result.value23_ =
            afn.libautobus.protocol.Protobuf.UnwatchObjectCommand.newBuilder(result.value23_).mergeFrom(value).buildPartial();
        } else {
          result.value23_ = value;
        }
        result.hasValue23 = true;
        return this;
      }
      public Builder clearValue23() {
        result.hasValue23 = false;
        result.value23_ = afn.libautobus.protocol.Protobuf.UnwatchObjectCommand.getDefaultInstance();
        return this;
      }
      
      // optional .UnwatchObjectCommand value24 = 24;
      public boolean hasValue24() {
        return result.hasValue24();
      }
      public afn.libautobus.protocol.Protobuf.UnwatchObjectCommand getValue24() {
        return result.getValue24();
      }
      public Builder setValue24(afn.libautobus.protocol.Protobuf.UnwatchObjectCommand value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasValue24 = true;
        result.value24_ = value;
        return this;
      }
      public Builder setValue24(afn.libautobus.protocol.Protobuf.UnwatchObjectCommand.Builder builderForValue) {
        result.hasValue24 = true;
        result.value24_ = builderForValue.build();
        return this;
      }
      public Builder mergeValue24(afn.libautobus.protocol.Protobuf.UnwatchObjectCommand value) {
        if (result.hasValue24() &&
            result.value24_ != afn.libautobus.protocol.Protobuf.UnwatchObjectCommand.getDefaultInstance()) {
          result.value24_ =
            afn.libautobus.protocol.Protobuf.UnwatchObjectCommand.newBuilder(result.value24_).mergeFrom(value).buildPartial();
        } else {
          result.value24_ = value;
        }
        result.hasValue24 = true;
        return this;
      }
      public Builder clearValue24() {
        result.hasValue24 = false;
        result.value24_ = afn.libautobus.protocol.Protobuf.UnwatchObjectCommand.getDefaultInstance();
        return this;
      }
      
      // optional .SetObjectCommand value25 = 25;
      public boolean hasValue25() {
        return result.hasValue25();
      }
      public afn.libautobus.protocol.Protobuf.SetObjectCommand getValue25() {
        return result.getValue25();
      }
      public Builder setValue25(afn.libautobus.protocol.Protobuf.SetObjectCommand value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasValue25 = true;
        result.value25_ = value;
        return this;
      }
      public Builder setValue25(afn.libautobus.protocol.Protobuf.SetObjectCommand.Builder builderForValue) {
        result.hasValue25 = true;
        result.value25_ = builderForValue.build();
        return this;
      }
      public Builder mergeValue25(afn.libautobus.protocol.Protobuf.SetObjectCommand value) {
        if (result.hasValue25() &&
            result.value25_ != afn.libautobus.protocol.Protobuf.SetObjectCommand.getDefaultInstance()) {
          result.value25_ =
            afn.libautobus.protocol.Protobuf.SetObjectCommand.newBuilder(result.value25_).mergeFrom(value).buildPartial();
        } else {
          result.value25_ = value;
        }
        result.hasValue25 = true;
        return this;
      }
      public Builder clearValue25() {
        result.hasValue25 = false;
        result.value25_ = afn.libautobus.protocol.Protobuf.SetObjectCommand.getDefaultInstance();
        return this;
      }
      
      // required string value_n = 100;
      public boolean hasValueN() {
        return result.hasValueN();
      }
      public java.lang.String getValueN() {
        return result.getValueN();
      }
      public Builder setValueN(java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasValueN = true;
        result.valueN_ = value;
        return this;
      }
      public Builder clearValueN() {
        result.hasValueN = false;
        result.valueN_ = getDefaultInstance().getValueN();
        return this;
      }
    }
    
    static {
      afn.libautobus.protocol.Protobuf.getDescriptor();
    }
    
    static {
      afn.libautobus.protocol.Protobuf.internalForceInit();
    }
  }
  
  public static final class RegisterInterfaceCommand extends
      com.google.protobuf.GeneratedMessage {
    // Use RegisterInterfaceCommand.newBuilder() to construct.
    private RegisterInterfaceCommand() {}
    
    private static final RegisterInterfaceCommand defaultInstance = new RegisterInterfaceCommand();
    public static RegisterInterfaceCommand getDefaultInstance() {
      return defaultInstance;
    }
    
    public RegisterInterfaceCommand getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return afn.libautobus.protocol.Protobuf.internal_static_RegisterInterfaceCommand_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return afn.libautobus.protocol.Protobuf.internal_static_RegisterInterfaceCommand_fieldAccessorTable;
    }
    
    // required string name = 1;
    public static final int NAME_FIELD_NUMBER = 1;
    private boolean hasName;
    private java.lang.String name_ = "";
    public boolean hasName() { return hasName; }
    public java.lang.String getName() { return name_; }
    
    // optional string doc = 3;
    public static final int DOC_FIELD_NUMBER = 3;
    private boolean hasDoc;
    private java.lang.String doc_ = "";
    public boolean hasDoc() { return hasDoc; }
    public java.lang.String getDoc() { return doc_; }
    
    public final boolean isInitialized() {
      if (!hasName) return false;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (hasName()) {
        output.writeString(1, getName());
      }
      if (hasDoc()) {
        output.writeString(3, getDoc());
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (hasName()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(1, getName());
      }
      if (hasDoc()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(3, getDoc());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static afn.libautobus.protocol.Protobuf.RegisterInterfaceCommand parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static afn.libautobus.protocol.Protobuf.RegisterInterfaceCommand parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static afn.libautobus.protocol.Protobuf.RegisterInterfaceCommand parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static afn.libautobus.protocol.Protobuf.RegisterInterfaceCommand parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static afn.libautobus.protocol.Protobuf.RegisterInterfaceCommand parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static afn.libautobus.protocol.Protobuf.RegisterInterfaceCommand parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static afn.libautobus.protocol.Protobuf.RegisterInterfaceCommand parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeDelimitedFrom(input).buildParsed();
    }
    public static afn.libautobus.protocol.Protobuf.RegisterInterfaceCommand parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeDelimitedFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static afn.libautobus.protocol.Protobuf.RegisterInterfaceCommand parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static afn.libautobus.protocol.Protobuf.RegisterInterfaceCommand parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(afn.libautobus.protocol.Protobuf.RegisterInterfaceCommand prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private afn.libautobus.protocol.Protobuf.RegisterInterfaceCommand result;
      
      // Construct using afn.libautobus.protocol.Protobuf.RegisterInterfaceCommand.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new afn.libautobus.protocol.Protobuf.RegisterInterfaceCommand();
        return builder;
      }
      
      protected afn.libautobus.protocol.Protobuf.RegisterInterfaceCommand internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new afn.libautobus.protocol.Protobuf.RegisterInterfaceCommand();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return afn.libautobus.protocol.Protobuf.RegisterInterfaceCommand.getDescriptor();
      }
      
      public afn.libautobus.protocol.Protobuf.RegisterInterfaceCommand getDefaultInstanceForType() {
        return afn.libautobus.protocol.Protobuf.RegisterInterfaceCommand.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public afn.libautobus.protocol.Protobuf.RegisterInterfaceCommand build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private afn.libautobus.protocol.Protobuf.RegisterInterfaceCommand buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public afn.libautobus.protocol.Protobuf.RegisterInterfaceCommand buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        afn.libautobus.protocol.Protobuf.RegisterInterfaceCommand returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof afn.libautobus.protocol.Protobuf.RegisterInterfaceCommand) {
          return mergeFrom((afn.libautobus.protocol.Protobuf.RegisterInterfaceCommand)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(afn.libautobus.protocol.Protobuf.RegisterInterfaceCommand other) {
        if (other == afn.libautobus.protocol.Protobuf.RegisterInterfaceCommand.getDefaultInstance()) return this;
        if (other.hasName()) {
          setName(other.getName());
        }
        if (other.hasDoc()) {
          setDoc(other.getDoc());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 10: {
              setName(input.readString());
              break;
            }
            case 26: {
              setDoc(input.readString());
              break;
            }
          }
        }
      }
      
      
      // required string name = 1;
      public boolean hasName() {
        return result.hasName();
      }
      public java.lang.String getName() {
        return result.getName();
      }
      public Builder setName(java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasName = true;
        result.name_ = value;
        return this;
      }
      public Builder clearName() {
        result.hasName = false;
        result.name_ = getDefaultInstance().getName();
        return this;
      }
      
      // optional string doc = 3;
      public boolean hasDoc() {
        return result.hasDoc();
      }
      public java.lang.String getDoc() {
        return result.getDoc();
      }
      public Builder setDoc(java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasDoc = true;
        result.doc_ = value;
        return this;
      }
      public Builder clearDoc() {
        result.hasDoc = false;
        result.doc_ = getDefaultInstance().getDoc();
        return this;
      }
    }
    
    static {
      afn.libautobus.protocol.Protobuf.getDescriptor();
    }
    
    static {
      afn.libautobus.protocol.Protobuf.internalForceInit();
    }
  }
  
  public static final class RegisterInterfaceResponse extends
      com.google.protobuf.GeneratedMessage {
    // Use RegisterInterfaceResponse.newBuilder() to construct.
    private RegisterInterfaceResponse() {}
    
    private static final RegisterInterfaceResponse defaultInstance = new RegisterInterfaceResponse();
    public static RegisterInterfaceResponse getDefaultInstance() {
      return defaultInstance;
    }
    
    public RegisterInterfaceResponse getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return afn.libautobus.protocol.Protobuf.internal_static_RegisterInterfaceResponse_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return afn.libautobus.protocol.Protobuf.internal_static_RegisterInterfaceResponse_fieldAccessorTable;
    }
    
    public final boolean isInitialized() {
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static afn.libautobus.protocol.Protobuf.RegisterInterfaceResponse parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static afn.libautobus.protocol.Protobuf.RegisterInterfaceResponse parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static afn.libautobus.protocol.Protobuf.RegisterInterfaceResponse parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static afn.libautobus.protocol.Protobuf.RegisterInterfaceResponse parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static afn.libautobus.protocol.Protobuf.RegisterInterfaceResponse parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static afn.libautobus.protocol.Protobuf.RegisterInterfaceResponse parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static afn.libautobus.protocol.Protobuf.RegisterInterfaceResponse parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeDelimitedFrom(input).buildParsed();
    }
    public static afn.libautobus.protocol.Protobuf.RegisterInterfaceResponse parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeDelimitedFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static afn.libautobus.protocol.Protobuf.RegisterInterfaceResponse parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static afn.libautobus.protocol.Protobuf.RegisterInterfaceResponse parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(afn.libautobus.protocol.Protobuf.RegisterInterfaceResponse prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private afn.libautobus.protocol.Protobuf.RegisterInterfaceResponse result;
      
      // Construct using afn.libautobus.protocol.Protobuf.RegisterInterfaceResponse.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new afn.libautobus.protocol.Protobuf.RegisterInterfaceResponse();
        return builder;
      }
      
      protected afn.libautobus.protocol.Protobuf.RegisterInterfaceResponse internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new afn.libautobus.protocol.Protobuf.RegisterInterfaceResponse();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return afn.libautobus.protocol.Protobuf.RegisterInterfaceResponse.getDescriptor();
      }
      
      public afn.libautobus.protocol.Protobuf.RegisterInterfaceResponse getDefaultInstanceForType() {
        return afn.libautobus.protocol.Protobuf.RegisterInterfaceResponse.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public afn.libautobus.protocol.Protobuf.RegisterInterfaceResponse build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private afn.libautobus.protocol.Protobuf.RegisterInterfaceResponse buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public afn.libautobus.protocol.Protobuf.RegisterInterfaceResponse buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        afn.libautobus.protocol.Protobuf.RegisterInterfaceResponse returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof afn.libautobus.protocol.Protobuf.RegisterInterfaceResponse) {
          return mergeFrom((afn.libautobus.protocol.Protobuf.RegisterInterfaceResponse)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(afn.libautobus.protocol.Protobuf.RegisterInterfaceResponse other) {
        if (other == afn.libautobus.protocol.Protobuf.RegisterInterfaceResponse.getDefaultInstance()) return this;
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
          }
        }
      }
      
    }
    
    static {
      afn.libautobus.protocol.Protobuf.getDescriptor();
    }
    
    static {
      afn.libautobus.protocol.Protobuf.internalForceInit();
    }
  }
  
  public static final class RegisterFunctionCommand extends
      com.google.protobuf.GeneratedMessage {
    // Use RegisterFunctionCommand.newBuilder() to construct.
    private RegisterFunctionCommand() {}
    
    private static final RegisterFunctionCommand defaultInstance = new RegisterFunctionCommand();
    public static RegisterFunctionCommand getDefaultInstance() {
      return defaultInstance;
    }
    
    public RegisterFunctionCommand getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return afn.libautobus.protocol.Protobuf.internal_static_RegisterFunctionCommand_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return afn.libautobus.protocol.Protobuf.internal_static_RegisterFunctionCommand_fieldAccessorTable;
    }
    
    // required string interface_name = 2;
    public static final int INTERFACE_NAME_FIELD_NUMBER = 2;
    private boolean hasInterfaceName;
    private java.lang.String interfaceName_ = "";
    public boolean hasInterfaceName() { return hasInterfaceName; }
    public java.lang.String getInterfaceName() { return interfaceName_; }
    
    // repeated string name = 3;
    public static final int NAME_FIELD_NUMBER = 3;
    private java.util.List<java.lang.String> name_ =
      java.util.Collections.emptyList();
    public java.util.List<java.lang.String> getNameList() {
      return name_;
    }
    public int getNameCount() { return name_.size(); }
    public java.lang.String getName(int index) {
      return name_.get(index);
    }
    
    // repeated string doc = 4;
    public static final int DOC_FIELD_NUMBER = 4;
    private java.util.List<java.lang.String> doc_ =
      java.util.Collections.emptyList();
    public java.util.List<java.lang.String> getDocList() {
      return doc_;
    }
    public int getDocCount() { return doc_.size(); }
    public java.lang.String getDoc(int index) {
      return doc_.get(index);
    }
    
    public final boolean isInitialized() {
      if (!hasInterfaceName) return false;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (hasInterfaceName()) {
        output.writeString(2, getInterfaceName());
      }
      for (java.lang.String element : getNameList()) {
        output.writeString(3, element);
      }
      for (java.lang.String element : getDocList()) {
        output.writeString(4, element);
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (hasInterfaceName()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(2, getInterfaceName());
      }
      {
        int dataSize = 0;
        for (java.lang.String element : getNameList()) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeStringSizeNoTag(element);
        }
        size += dataSize;
        size += 1 * getNameList().size();
      }
      {
        int dataSize = 0;
        for (java.lang.String element : getDocList()) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeStringSizeNoTag(element);
        }
        size += dataSize;
        size += 1 * getDocList().size();
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static afn.libautobus.protocol.Protobuf.RegisterFunctionCommand parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static afn.libautobus.protocol.Protobuf.RegisterFunctionCommand parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static afn.libautobus.protocol.Protobuf.RegisterFunctionCommand parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static afn.libautobus.protocol.Protobuf.RegisterFunctionCommand parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static afn.libautobus.protocol.Protobuf.RegisterFunctionCommand parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static afn.libautobus.protocol.Protobuf.RegisterFunctionCommand parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static afn.libautobus.protocol.Protobuf.RegisterFunctionCommand parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeDelimitedFrom(input).buildParsed();
    }
    public static afn.libautobus.protocol.Protobuf.RegisterFunctionCommand parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeDelimitedFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static afn.libautobus.protocol.Protobuf.RegisterFunctionCommand parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static afn.libautobus.protocol.Protobuf.RegisterFunctionCommand parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(afn.libautobus.protocol.Protobuf.RegisterFunctionCommand prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private afn.libautobus.protocol.Protobuf.RegisterFunctionCommand result;
      
      // Construct using afn.libautobus.protocol.Protobuf.RegisterFunctionCommand.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new afn.libautobus.protocol.Protobuf.RegisterFunctionCommand();
        return builder;
      }
      
      protected afn.libautobus.protocol.Protobuf.RegisterFunctionCommand internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new afn.libautobus.protocol.Protobuf.RegisterFunctionCommand();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return afn.libautobus.protocol.Protobuf.RegisterFunctionCommand.getDescriptor();
      }
      
      public afn.libautobus.protocol.Protobuf.RegisterFunctionCommand getDefaultInstanceForType() {
        return afn.libautobus.protocol.Protobuf.RegisterFunctionCommand.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public afn.libautobus.protocol.Protobuf.RegisterFunctionCommand build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private afn.libautobus.protocol.Protobuf.RegisterFunctionCommand buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public afn.libautobus.protocol.Protobuf.RegisterFunctionCommand buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        if (result.name_ != java.util.Collections.EMPTY_LIST) {
          result.name_ =
            java.util.Collections.unmodifiableList(result.name_);
        }
        if (result.doc_ != java.util.Collections.EMPTY_LIST) {
          result.doc_ =
            java.util.Collections.unmodifiableList(result.doc_);
        }
        afn.libautobus.protocol.Protobuf.RegisterFunctionCommand returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof afn.libautobus.protocol.Protobuf.RegisterFunctionCommand) {
          return mergeFrom((afn.libautobus.protocol.Protobuf.RegisterFunctionCommand)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(afn.libautobus.protocol.Protobuf.RegisterFunctionCommand other) {
        if (other == afn.libautobus.protocol.Protobuf.RegisterFunctionCommand.getDefaultInstance()) return this;
        if (other.hasInterfaceName()) {
          setInterfaceName(other.getInterfaceName());
        }
        if (!other.name_.isEmpty()) {
          if (result.name_.isEmpty()) {
            result.name_ = new java.util.ArrayList<java.lang.String>();
          }
          result.name_.addAll(other.name_);
        }
        if (!other.doc_.isEmpty()) {
          if (result.doc_.isEmpty()) {
            result.doc_ = new java.util.ArrayList<java.lang.String>();
          }
          result.doc_.addAll(other.doc_);
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 18: {
              setInterfaceName(input.readString());
              break;
            }
            case 26: {
              addName(input.readString());
              break;
            }
            case 34: {
              addDoc(input.readString());
              break;
            }
          }
        }
      }
      
      
      // required string interface_name = 2;
      public boolean hasInterfaceName() {
        return result.hasInterfaceName();
      }
      public java.lang.String getInterfaceName() {
        return result.getInterfaceName();
      }
      public Builder setInterfaceName(java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasInterfaceName = true;
        result.interfaceName_ = value;
        return this;
      }
      public Builder clearInterfaceName() {
        result.hasInterfaceName = false;
        result.interfaceName_ = getDefaultInstance().getInterfaceName();
        return this;
      }
      
      // repeated string name = 3;
      public java.util.List<java.lang.String> getNameList() {
        return java.util.Collections.unmodifiableList(result.name_);
      }
      public int getNameCount() {
        return result.getNameCount();
      }
      public java.lang.String getName(int index) {
        return result.getName(index);
      }
      public Builder setName(int index, java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.name_.set(index, value);
        return this;
      }
      public Builder addName(java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  if (result.name_.isEmpty()) {
          result.name_ = new java.util.ArrayList<java.lang.String>();
        }
        result.name_.add(value);
        return this;
      }
      public Builder addAllName(
          java.lang.Iterable<? extends java.lang.String> values) {
        if (result.name_.isEmpty()) {
          result.name_ = new java.util.ArrayList<java.lang.String>();
        }
        super.addAll(values, result.name_);
        return this;
      }
      public Builder clearName() {
        result.name_ = java.util.Collections.emptyList();
        return this;
      }
      
      // repeated string doc = 4;
      public java.util.List<java.lang.String> getDocList() {
        return java.util.Collections.unmodifiableList(result.doc_);
      }
      public int getDocCount() {
        return result.getDocCount();
      }
      public java.lang.String getDoc(int index) {
        return result.getDoc(index);
      }
      public Builder setDoc(int index, java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.doc_.set(index, value);
        return this;
      }
      public Builder addDoc(java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  if (result.doc_.isEmpty()) {
          result.doc_ = new java.util.ArrayList<java.lang.String>();
        }
        result.doc_.add(value);
        return this;
      }
      public Builder addAllDoc(
          java.lang.Iterable<? extends java.lang.String> values) {
        if (result.doc_.isEmpty()) {
          result.doc_ = new java.util.ArrayList<java.lang.String>();
        }
        super.addAll(values, result.doc_);
        return this;
      }
      public Builder clearDoc() {
        result.doc_ = java.util.Collections.emptyList();
        return this;
      }
    }
    
    static {
      afn.libautobus.protocol.Protobuf.getDescriptor();
    }
    
    static {
      afn.libautobus.protocol.Protobuf.internalForceInit();
    }
  }
  
  public static final class RegisterFunctionResponse extends
      com.google.protobuf.GeneratedMessage {
    // Use RegisterFunctionResponse.newBuilder() to construct.
    private RegisterFunctionResponse() {}
    
    private static final RegisterFunctionResponse defaultInstance = new RegisterFunctionResponse();
    public static RegisterFunctionResponse getDefaultInstance() {
      return defaultInstance;
    }
    
    public RegisterFunctionResponse getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return afn.libautobus.protocol.Protobuf.internal_static_RegisterFunctionResponse_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return afn.libautobus.protocol.Protobuf.internal_static_RegisterFunctionResponse_fieldAccessorTable;
    }
    
    public final boolean isInitialized() {
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static afn.libautobus.protocol.Protobuf.RegisterFunctionResponse parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static afn.libautobus.protocol.Protobuf.RegisterFunctionResponse parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static afn.libautobus.protocol.Protobuf.RegisterFunctionResponse parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static afn.libautobus.protocol.Protobuf.RegisterFunctionResponse parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static afn.libautobus.protocol.Protobuf.RegisterFunctionResponse parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static afn.libautobus.protocol.Protobuf.RegisterFunctionResponse parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static afn.libautobus.protocol.Protobuf.RegisterFunctionResponse parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeDelimitedFrom(input).buildParsed();
    }
    public static afn.libautobus.protocol.Protobuf.RegisterFunctionResponse parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeDelimitedFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static afn.libautobus.protocol.Protobuf.RegisterFunctionResponse parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static afn.libautobus.protocol.Protobuf.RegisterFunctionResponse parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(afn.libautobus.protocol.Protobuf.RegisterFunctionResponse prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private afn.libautobus.protocol.Protobuf.RegisterFunctionResponse result;
      
      // Construct using afn.libautobus.protocol.Protobuf.RegisterFunctionResponse.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new afn.libautobus.protocol.Protobuf.RegisterFunctionResponse();
        return builder;
      }
      
      protected afn.libautobus.protocol.Protobuf.RegisterFunctionResponse internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new afn.libautobus.protocol.Protobuf.RegisterFunctionResponse();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return afn.libautobus.protocol.Protobuf.RegisterFunctionResponse.getDescriptor();
      }
      
      public afn.libautobus.protocol.Protobuf.RegisterFunctionResponse getDefaultInstanceForType() {
        return afn.libautobus.protocol.Protobuf.RegisterFunctionResponse.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public afn.libautobus.protocol.Protobuf.RegisterFunctionResponse build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private afn.libautobus.protocol.Protobuf.RegisterFunctionResponse buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public afn.libautobus.protocol.Protobuf.RegisterFunctionResponse buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        afn.libautobus.protocol.Protobuf.RegisterFunctionResponse returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof afn.libautobus.protocol.Protobuf.RegisterFunctionResponse) {
          return mergeFrom((afn.libautobus.protocol.Protobuf.RegisterFunctionResponse)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(afn.libautobus.protocol.Protobuf.RegisterFunctionResponse other) {
        if (other == afn.libautobus.protocol.Protobuf.RegisterFunctionResponse.getDefaultInstance()) return this;
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
          }
        }
      }
      
    }
    
    static {
      afn.libautobus.protocol.Protobuf.getDescriptor();
    }
    
    static {
      afn.libautobus.protocol.Protobuf.internalForceInit();
    }
  }
  
  public static final class CallFunctionCommand extends
      com.google.protobuf.GeneratedMessage {
    // Use CallFunctionCommand.newBuilder() to construct.
    private CallFunctionCommand() {}
    
    private static final CallFunctionCommand defaultInstance = new CallFunctionCommand();
    public static CallFunctionCommand getDefaultInstance() {
      return defaultInstance;
    }
    
    public CallFunctionCommand getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return afn.libautobus.protocol.Protobuf.internal_static_CallFunctionCommand_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return afn.libautobus.protocol.Protobuf.internal_static_CallFunctionCommand_fieldAccessorTable;
    }
    
    // optional string interface_name = 2;
    public static final int INTERFACE_NAME_FIELD_NUMBER = 2;
    private boolean hasInterfaceName;
    private java.lang.String interfaceName_ = "";
    public boolean hasInterfaceName() { return hasInterfaceName; }
    public java.lang.String getInterfaceName() { return interfaceName_; }
    
    // required string function = 3;
    public static final int FUNCTION_FIELD_NUMBER = 3;
    private boolean hasFunction;
    private java.lang.String function_ = "";
    public boolean hasFunction() { return hasFunction; }
    public java.lang.String getFunction() { return function_; }
    
    // repeated .Instance arguments = 4;
    public static final int ARGUMENTS_FIELD_NUMBER = 4;
    private java.util.List<afn.libautobus.protocol.Protobuf.Instance> arguments_ =
      java.util.Collections.emptyList();
    public java.util.List<afn.libautobus.protocol.Protobuf.Instance> getArgumentsList() {
      return arguments_;
    }
    public int getArgumentsCount() { return arguments_.size(); }
    public afn.libautobus.protocol.Protobuf.Instance getArguments(int index) {
      return arguments_.get(index);
    }
    
    public final boolean isInitialized() {
      if (!hasFunction) return false;
      for (afn.libautobus.protocol.Protobuf.Instance element : getArgumentsList()) {
        if (!element.isInitialized()) return false;
      }
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (hasInterfaceName()) {
        output.writeString(2, getInterfaceName());
      }
      if (hasFunction()) {
        output.writeString(3, getFunction());
      }
      for (afn.libautobus.protocol.Protobuf.Instance element : getArgumentsList()) {
        output.writeMessage(4, element);
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (hasInterfaceName()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(2, getInterfaceName());
      }
      if (hasFunction()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(3, getFunction());
      }
      for (afn.libautobus.protocol.Protobuf.Instance element : getArgumentsList()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, element);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static afn.libautobus.protocol.Protobuf.CallFunctionCommand parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static afn.libautobus.protocol.Protobuf.CallFunctionCommand parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static afn.libautobus.protocol.Protobuf.CallFunctionCommand parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static afn.libautobus.protocol.Protobuf.CallFunctionCommand parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static afn.libautobus.protocol.Protobuf.CallFunctionCommand parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static afn.libautobus.protocol.Protobuf.CallFunctionCommand parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static afn.libautobus.protocol.Protobuf.CallFunctionCommand parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeDelimitedFrom(input).buildParsed();
    }
    public static afn.libautobus.protocol.Protobuf.CallFunctionCommand parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeDelimitedFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static afn.libautobus.protocol.Protobuf.CallFunctionCommand parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static afn.libautobus.protocol.Protobuf.CallFunctionCommand parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(afn.libautobus.protocol.Protobuf.CallFunctionCommand prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private afn.libautobus.protocol.Protobuf.CallFunctionCommand result;
      
      // Construct using afn.libautobus.protocol.Protobuf.CallFunctionCommand.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new afn.libautobus.protocol.Protobuf.CallFunctionCommand();
        return builder;
      }
      
      protected afn.libautobus.protocol.Protobuf.CallFunctionCommand internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new afn.libautobus.protocol.Protobuf.CallFunctionCommand();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return afn.libautobus.protocol.Protobuf.CallFunctionCommand.getDescriptor();
      }
      
      public afn.libautobus.protocol.Protobuf.CallFunctionCommand getDefaultInstanceForType() {
        return afn.libautobus.protocol.Protobuf.CallFunctionCommand.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public afn.libautobus.protocol.Protobuf.CallFunctionCommand build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private afn.libautobus.protocol.Protobuf.CallFunctionCommand buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public afn.libautobus.protocol.Protobuf.CallFunctionCommand buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        if (result.arguments_ != java.util.Collections.EMPTY_LIST) {
          result.arguments_ =
            java.util.Collections.unmodifiableList(result.arguments_);
        }
        afn.libautobus.protocol.Protobuf.CallFunctionCommand returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof afn.libautobus.protocol.Protobuf.CallFunctionCommand) {
          return mergeFrom((afn.libautobus.protocol.Protobuf.CallFunctionCommand)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(afn.libautobus.protocol.Protobuf.CallFunctionCommand other) {
        if (other == afn.libautobus.protocol.Protobuf.CallFunctionCommand.getDefaultInstance()) return this;
        if (other.hasInterfaceName()) {
          setInterfaceName(other.getInterfaceName());
        }
        if (other.hasFunction()) {
          setFunction(other.getFunction());
        }
        if (!other.arguments_.isEmpty()) {
          if (result.arguments_.isEmpty()) {
            result.arguments_ = new java.util.ArrayList<afn.libautobus.protocol.Protobuf.Instance>();
          }
          result.arguments_.addAll(other.arguments_);
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 18: {
              setInterfaceName(input.readString());
              break;
            }
            case 26: {
              setFunction(input.readString());
              break;
            }
            case 34: {
              afn.libautobus.protocol.Protobuf.Instance.Builder subBuilder = afn.libautobus.protocol.Protobuf.Instance.newBuilder();
              input.readMessage(subBuilder, extensionRegistry);
              addArguments(subBuilder.buildPartial());
              break;
            }
          }
        }
      }
      
      
      // optional string interface_name = 2;
      public boolean hasInterfaceName() {
        return result.hasInterfaceName();
      }
      public java.lang.String getInterfaceName() {
        return result.getInterfaceName();
      }
      public Builder setInterfaceName(java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasInterfaceName = true;
        result.interfaceName_ = value;
        return this;
      }
      public Builder clearInterfaceName() {
        result.hasInterfaceName = false;
        result.interfaceName_ = getDefaultInstance().getInterfaceName();
        return this;
      }
      
      // required string function = 3;
      public boolean hasFunction() {
        return result.hasFunction();
      }
      public java.lang.String getFunction() {
        return result.getFunction();
      }
      public Builder setFunction(java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasFunction = true;
        result.function_ = value;
        return this;
      }
      public Builder clearFunction() {
        result.hasFunction = false;
        result.function_ = getDefaultInstance().getFunction();
        return this;
      }
      
      // repeated .Instance arguments = 4;
      public java.util.List<afn.libautobus.protocol.Protobuf.Instance> getArgumentsList() {
        return java.util.Collections.unmodifiableList(result.arguments_);
      }
      public int getArgumentsCount() {
        return result.getArgumentsCount();
      }
      public afn.libautobus.protocol.Protobuf.Instance getArguments(int index) {
        return result.getArguments(index);
      }
      public Builder setArguments(int index, afn.libautobus.protocol.Protobuf.Instance value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.arguments_.set(index, value);
        return this;
      }
      public Builder setArguments(int index, afn.libautobus.protocol.Protobuf.Instance.Builder builderForValue) {
        result.arguments_.set(index, builderForValue.build());
        return this;
      }
      public Builder addArguments(afn.libautobus.protocol.Protobuf.Instance value) {
        if (value == null) {
          throw new NullPointerException();
        }
        if (result.arguments_.isEmpty()) {
          result.arguments_ = new java.util.ArrayList<afn.libautobus.protocol.Protobuf.Instance>();
        }
        result.arguments_.add(value);
        return this;
      }
      public Builder addArguments(afn.libautobus.protocol.Protobuf.Instance.Builder builderForValue) {
        if (result.arguments_.isEmpty()) {
          result.arguments_ = new java.util.ArrayList<afn.libautobus.protocol.Protobuf.Instance>();
        }
        result.arguments_.add(builderForValue.build());
        return this;
      }
      public Builder addAllArguments(
          java.lang.Iterable<? extends afn.libautobus.protocol.Protobuf.Instance> values) {
        if (result.arguments_.isEmpty()) {
          result.arguments_ = new java.util.ArrayList<afn.libautobus.protocol.Protobuf.Instance>();
        }
        super.addAll(values, result.arguments_);
        return this;
      }
      public Builder clearArguments() {
        result.arguments_ = java.util.Collections.emptyList();
        return this;
      }
    }
    
    static {
      afn.libautobus.protocol.Protobuf.getDescriptor();
    }
    
    static {
      afn.libautobus.protocol.Protobuf.internalForceInit();
    }
  }
  
  public static final class CallFunctionResponse extends
      com.google.protobuf.GeneratedMessage {
    // Use CallFunctionResponse.newBuilder() to construct.
    private CallFunctionResponse() {}
    
    private static final CallFunctionResponse defaultInstance = new CallFunctionResponse();
    public static CallFunctionResponse getDefaultInstance() {
      return defaultInstance;
    }
    
    public CallFunctionResponse getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return afn.libautobus.protocol.Protobuf.internal_static_CallFunctionResponse_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return afn.libautobus.protocol.Protobuf.internal_static_CallFunctionResponse_fieldAccessorTable;
    }
    
    // required .Instance return_value = 1;
    public static final int RETURN_VALUE_FIELD_NUMBER = 1;
    private boolean hasReturnValue;
    private afn.libautobus.protocol.Protobuf.Instance returnValue_ = afn.libautobus.protocol.Protobuf.Instance.getDefaultInstance();
    public boolean hasReturnValue() { return hasReturnValue; }
    public afn.libautobus.protocol.Protobuf.Instance getReturnValue() { return returnValue_; }
    
    public final boolean isInitialized() {
      if (!hasReturnValue) return false;
      if (!getReturnValue().isInitialized()) return false;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (hasReturnValue()) {
        output.writeMessage(1, getReturnValue());
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (hasReturnValue()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getReturnValue());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static afn.libautobus.protocol.Protobuf.CallFunctionResponse parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static afn.libautobus.protocol.Protobuf.CallFunctionResponse parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static afn.libautobus.protocol.Protobuf.CallFunctionResponse parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static afn.libautobus.protocol.Protobuf.CallFunctionResponse parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static afn.libautobus.protocol.Protobuf.CallFunctionResponse parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static afn.libautobus.protocol.Protobuf.CallFunctionResponse parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static afn.libautobus.protocol.Protobuf.CallFunctionResponse parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeDelimitedFrom(input).buildParsed();
    }
    public static afn.libautobus.protocol.Protobuf.CallFunctionResponse parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeDelimitedFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static afn.libautobus.protocol.Protobuf.CallFunctionResponse parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static afn.libautobus.protocol.Protobuf.CallFunctionResponse parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(afn.libautobus.protocol.Protobuf.CallFunctionResponse prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private afn.libautobus.protocol.Protobuf.CallFunctionResponse result;
      
      // Construct using afn.libautobus.protocol.Protobuf.CallFunctionResponse.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new afn.libautobus.protocol.Protobuf.CallFunctionResponse();
        return builder;
      }
      
      protected afn.libautobus.protocol.Protobuf.CallFunctionResponse internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new afn.libautobus.protocol.Protobuf.CallFunctionResponse();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return afn.libautobus.protocol.Protobuf.CallFunctionResponse.getDescriptor();
      }
      
      public afn.libautobus.protocol.Protobuf.CallFunctionResponse getDefaultInstanceForType() {
        return afn.libautobus.protocol.Protobuf.CallFunctionResponse.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public afn.libautobus.protocol.Protobuf.CallFunctionResponse build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private afn.libautobus.protocol.Protobuf.CallFunctionResponse buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public afn.libautobus.protocol.Protobuf.CallFunctionResponse buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        afn.libautobus.protocol.Protobuf.CallFunctionResponse returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof afn.libautobus.protocol.Protobuf.CallFunctionResponse) {
          return mergeFrom((afn.libautobus.protocol.Protobuf.CallFunctionResponse)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(afn.libautobus.protocol.Protobuf.CallFunctionResponse other) {
        if (other == afn.libautobus.protocol.Protobuf.CallFunctionResponse.getDefaultInstance()) return this;
        if (other.hasReturnValue()) {
          mergeReturnValue(other.getReturnValue());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 10: {
              afn.libautobus.protocol.Protobuf.Instance.Builder subBuilder = afn.libautobus.protocol.Protobuf.Instance.newBuilder();
              if (hasReturnValue()) {
                subBuilder.mergeFrom(getReturnValue());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setReturnValue(subBuilder.buildPartial());
              break;
            }
          }
        }
      }
      
      
      // required .Instance return_value = 1;
      public boolean hasReturnValue() {
        return result.hasReturnValue();
      }
      public afn.libautobus.protocol.Protobuf.Instance getReturnValue() {
        return result.getReturnValue();
      }
      public Builder setReturnValue(afn.libautobus.protocol.Protobuf.Instance value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasReturnValue = true;
        result.returnValue_ = value;
        return this;
      }
      public Builder setReturnValue(afn.libautobus.protocol.Protobuf.Instance.Builder builderForValue) {
        result.hasReturnValue = true;
        result.returnValue_ = builderForValue.build();
        return this;
      }
      public Builder mergeReturnValue(afn.libautobus.protocol.Protobuf.Instance value) {
        if (result.hasReturnValue() &&
            result.returnValue_ != afn.libautobus.protocol.Protobuf.Instance.getDefaultInstance()) {
          result.returnValue_ =
            afn.libautobus.protocol.Protobuf.Instance.newBuilder(result.returnValue_).mergeFrom(value).buildPartial();
        } else {
          result.returnValue_ = value;
        }
        result.hasReturnValue = true;
        return this;
      }
      public Builder clearReturnValue() {
        result.hasReturnValue = false;
        result.returnValue_ = afn.libautobus.protocol.Protobuf.Instance.getDefaultInstance();
        return this;
      }
    }
    
    static {
      afn.libautobus.protocol.Protobuf.getDescriptor();
    }
    
    static {
      afn.libautobus.protocol.Protobuf.internalForceInit();
    }
  }
  
  public static final class RunFunctionCommand extends
      com.google.protobuf.GeneratedMessage {
    // Use RunFunctionCommand.newBuilder() to construct.
    private RunFunctionCommand() {}
    
    private static final RunFunctionCommand defaultInstance = new RunFunctionCommand();
    public static RunFunctionCommand getDefaultInstance() {
      return defaultInstance;
    }
    
    public RunFunctionCommand getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return afn.libautobus.protocol.Protobuf.internal_static_RunFunctionCommand_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return afn.libautobus.protocol.Protobuf.internal_static_RunFunctionCommand_fieldAccessorTable;
    }
    
    // required string interface_name = 2;
    public static final int INTERFACE_NAME_FIELD_NUMBER = 2;
    private boolean hasInterfaceName;
    private java.lang.String interfaceName_ = "";
    public boolean hasInterfaceName() { return hasInterfaceName; }
    public java.lang.String getInterfaceName() { return interfaceName_; }
    
    // required string function = 3;
    public static final int FUNCTION_FIELD_NUMBER = 3;
    private boolean hasFunction;
    private java.lang.String function_ = "";
    public boolean hasFunction() { return hasFunction; }
    public java.lang.String getFunction() { return function_; }
    
    // repeated .Instance arguments = 4;
    public static final int ARGUMENTS_FIELD_NUMBER = 4;
    private java.util.List<afn.libautobus.protocol.Protobuf.Instance> arguments_ =
      java.util.Collections.emptyList();
    public java.util.List<afn.libautobus.protocol.Protobuf.Instance> getArgumentsList() {
      return arguments_;
    }
    public int getArgumentsCount() { return arguments_.size(); }
    public afn.libautobus.protocol.Protobuf.Instance getArguments(int index) {
      return arguments_.get(index);
    }
    
    public final boolean isInitialized() {
      if (!hasInterfaceName) return false;
      if (!hasFunction) return false;
      for (afn.libautobus.protocol.Protobuf.Instance element : getArgumentsList()) {
        if (!element.isInitialized()) return false;
      }
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (hasInterfaceName()) {
        output.writeString(2, getInterfaceName());
      }
      if (hasFunction()) {
        output.writeString(3, getFunction());
      }
      for (afn.libautobus.protocol.Protobuf.Instance element : getArgumentsList()) {
        output.writeMessage(4, element);
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (hasInterfaceName()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(2, getInterfaceName());
      }
      if (hasFunction()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(3, getFunction());
      }
      for (afn.libautobus.protocol.Protobuf.Instance element : getArgumentsList()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, element);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static afn.libautobus.protocol.Protobuf.RunFunctionCommand parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static afn.libautobus.protocol.Protobuf.RunFunctionCommand parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static afn.libautobus.protocol.Protobuf.RunFunctionCommand parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static afn.libautobus.protocol.Protobuf.RunFunctionCommand parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static afn.libautobus.protocol.Protobuf.RunFunctionCommand parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static afn.libautobus.protocol.Protobuf.RunFunctionCommand parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static afn.libautobus.protocol.Protobuf.RunFunctionCommand parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeDelimitedFrom(input).buildParsed();
    }
    public static afn.libautobus.protocol.Protobuf.RunFunctionCommand parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeDelimitedFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static afn.libautobus.protocol.Protobuf.RunFunctionCommand parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static afn.libautobus.protocol.Protobuf.RunFunctionCommand parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(afn.libautobus.protocol.Protobuf.RunFunctionCommand prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private afn.libautobus.protocol.Protobuf.RunFunctionCommand result;
      
      // Construct using afn.libautobus.protocol.Protobuf.RunFunctionCommand.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new afn.libautobus.protocol.Protobuf.RunFunctionCommand();
        return builder;
      }
      
      protected afn.libautobus.protocol.Protobuf.RunFunctionCommand internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new afn.libautobus.protocol.Protobuf.RunFunctionCommand();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return afn.libautobus.protocol.Protobuf.RunFunctionCommand.getDescriptor();
      }
      
      public afn.libautobus.protocol.Protobuf.RunFunctionCommand getDefaultInstanceForType() {
        return afn.libautobus.protocol.Protobuf.RunFunctionCommand.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public afn.libautobus.protocol.Protobuf.RunFunctionCommand build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private afn.libautobus.protocol.Protobuf.RunFunctionCommand buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public afn.libautobus.protocol.Protobuf.RunFunctionCommand buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        if (result.arguments_ != java.util.Collections.EMPTY_LIST) {
          result.arguments_ =
            java.util.Collections.unmodifiableList(result.arguments_);
        }
        afn.libautobus.protocol.Protobuf.RunFunctionCommand returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof afn.libautobus.protocol.Protobuf.RunFunctionCommand) {
          return mergeFrom((afn.libautobus.protocol.Protobuf.RunFunctionCommand)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(afn.libautobus.protocol.Protobuf.RunFunctionCommand other) {
        if (other == afn.libautobus.protocol.Protobuf.RunFunctionCommand.getDefaultInstance()) return this;
        if (other.hasInterfaceName()) {
          setInterfaceName(other.getInterfaceName());
        }
        if (other.hasFunction()) {
          setFunction(other.getFunction());
        }
        if (!other.arguments_.isEmpty()) {
          if (result.arguments_.isEmpty()) {
            result.arguments_ = new java.util.ArrayList<afn.libautobus.protocol.Protobuf.Instance>();
          }
          result.arguments_.addAll(other.arguments_);
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 18: {
              setInterfaceName(input.readString());
              break;
            }
            case 26: {
              setFunction(input.readString());
              break;
            }
            case 34: {
              afn.libautobus.protocol.Protobuf.Instance.Builder subBuilder = afn.libautobus.protocol.Protobuf.Instance.newBuilder();
              input.readMessage(subBuilder, extensionRegistry);
              addArguments(subBuilder.buildPartial());
              break;
            }
          }
        }
      }
      
      
      // required string interface_name = 2;
      public boolean hasInterfaceName() {
        return result.hasInterfaceName();
      }
      public java.lang.String getInterfaceName() {
        return result.getInterfaceName();
      }
      public Builder setInterfaceName(java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasInterfaceName = true;
        result.interfaceName_ = value;
        return this;
      }
      public Builder clearInterfaceName() {
        result.hasInterfaceName = false;
        result.interfaceName_ = getDefaultInstance().getInterfaceName();
        return this;
      }
      
      // required string function = 3;
      public boolean hasFunction() {
        return result.hasFunction();
      }
      public java.lang.String getFunction() {
        return result.getFunction();
      }
      public Builder setFunction(java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasFunction = true;
        result.function_ = value;
        return this;
      }
      public Builder clearFunction() {
        result.hasFunction = false;
        result.function_ = getDefaultInstance().getFunction();
        return this;
      }
      
      // repeated .Instance arguments = 4;
      public java.util.List<afn.libautobus.protocol.Protobuf.Instance> getArgumentsList() {
        return java.util.Collections.unmodifiableList(result.arguments_);
      }
      public int getArgumentsCount() {
        return result.getArgumentsCount();
      }
      public afn.libautobus.protocol.Protobuf.Instance getArguments(int index) {
        return result.getArguments(index);
      }
      public Builder setArguments(int index, afn.libautobus.protocol.Protobuf.Instance value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.arguments_.set(index, value);
        return this;
      }
      public Builder setArguments(int index, afn.libautobus.protocol.Protobuf.Instance.Builder builderForValue) {
        result.arguments_.set(index, builderForValue.build());
        return this;
      }
      public Builder addArguments(afn.libautobus.protocol.Protobuf.Instance value) {
        if (value == null) {
          throw new NullPointerException();
        }
        if (result.arguments_.isEmpty()) {
          result.arguments_ = new java.util.ArrayList<afn.libautobus.protocol.Protobuf.Instance>();
        }
        result.arguments_.add(value);
        return this;
      }
      public Builder addArguments(afn.libautobus.protocol.Protobuf.Instance.Builder builderForValue) {
        if (result.arguments_.isEmpty()) {
          result.arguments_ = new java.util.ArrayList<afn.libautobus.protocol.Protobuf.Instance>();
        }
        result.arguments_.add(builderForValue.build());
        return this;
      }
      public Builder addAllArguments(
          java.lang.Iterable<? extends afn.libautobus.protocol.Protobuf.Instance> values) {
        if (result.arguments_.isEmpty()) {
          result.arguments_ = new java.util.ArrayList<afn.libautobus.protocol.Protobuf.Instance>();
        }
        super.addAll(values, result.arguments_);
        return this;
      }
      public Builder clearArguments() {
        result.arguments_ = java.util.Collections.emptyList();
        return this;
      }
    }
    
    static {
      afn.libautobus.protocol.Protobuf.getDescriptor();
    }
    
    static {
      afn.libautobus.protocol.Protobuf.internalForceInit();
    }
  }
  
  public static final class RunFunctionResponse extends
      com.google.protobuf.GeneratedMessage {
    // Use RunFunctionResponse.newBuilder() to construct.
    private RunFunctionResponse() {}
    
    private static final RunFunctionResponse defaultInstance = new RunFunctionResponse();
    public static RunFunctionResponse getDefaultInstance() {
      return defaultInstance;
    }
    
    public RunFunctionResponse getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return afn.libautobus.protocol.Protobuf.internal_static_RunFunctionResponse_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return afn.libautobus.protocol.Protobuf.internal_static_RunFunctionResponse_fieldAccessorTable;
    }
    
    // required .Instance return_value = 1;
    public static final int RETURN_VALUE_FIELD_NUMBER = 1;
    private boolean hasReturnValue;
    private afn.libautobus.protocol.Protobuf.Instance returnValue_ = afn.libautobus.protocol.Protobuf.Instance.getDefaultInstance();
    public boolean hasReturnValue() { return hasReturnValue; }
    public afn.libautobus.protocol.Protobuf.Instance getReturnValue() { return returnValue_; }
    
    public final boolean isInitialized() {
      if (!hasReturnValue) return false;
      if (!getReturnValue().isInitialized()) return false;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (hasReturnValue()) {
        output.writeMessage(1, getReturnValue());
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (hasReturnValue()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getReturnValue());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static afn.libautobus.protocol.Protobuf.RunFunctionResponse parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static afn.libautobus.protocol.Protobuf.RunFunctionResponse parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static afn.libautobus.protocol.Protobuf.RunFunctionResponse parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static afn.libautobus.protocol.Protobuf.RunFunctionResponse parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static afn.libautobus.protocol.Protobuf.RunFunctionResponse parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static afn.libautobus.protocol.Protobuf.RunFunctionResponse parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static afn.libautobus.protocol.Protobuf.RunFunctionResponse parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeDelimitedFrom(input).buildParsed();
    }
    public static afn.libautobus.protocol.Protobuf.RunFunctionResponse parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeDelimitedFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static afn.libautobus.protocol.Protobuf.RunFunctionResponse parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static afn.libautobus.protocol.Protobuf.RunFunctionResponse parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(afn.libautobus.protocol.Protobuf.RunFunctionResponse prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private afn.libautobus.protocol.Protobuf.RunFunctionResponse result;
      
      // Construct using afn.libautobus.protocol.Protobuf.RunFunctionResponse.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new afn.libautobus.protocol.Protobuf.RunFunctionResponse();
        return builder;
      }
      
      protected afn.libautobus.protocol.Protobuf.RunFunctionResponse internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new afn.libautobus.protocol.Protobuf.RunFunctionResponse();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return afn.libautobus.protocol.Protobuf.RunFunctionResponse.getDescriptor();
      }
      
      public afn.libautobus.protocol.Protobuf.RunFunctionResponse getDefaultInstanceForType() {
        return afn.libautobus.protocol.Protobuf.RunFunctionResponse.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public afn.libautobus.protocol.Protobuf.RunFunctionResponse build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private afn.libautobus.protocol.Protobuf.RunFunctionResponse buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public afn.libautobus.protocol.Protobuf.RunFunctionResponse buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        afn.libautobus.protocol.Protobuf.RunFunctionResponse returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof afn.libautobus.protocol.Protobuf.RunFunctionResponse) {
          return mergeFrom((afn.libautobus.protocol.Protobuf.RunFunctionResponse)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(afn.libautobus.protocol.Protobuf.RunFunctionResponse other) {
        if (other == afn.libautobus.protocol.Protobuf.RunFunctionResponse.getDefaultInstance()) return this;
        if (other.hasReturnValue()) {
          mergeReturnValue(other.getReturnValue());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 10: {
              afn.libautobus.protocol.Protobuf.Instance.Builder subBuilder = afn.libautobus.protocol.Protobuf.Instance.newBuilder();
              if (hasReturnValue()) {
                subBuilder.mergeFrom(getReturnValue());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setReturnValue(subBuilder.buildPartial());
              break;
            }
          }
        }
      }
      
      
      // required .Instance return_value = 1;
      public boolean hasReturnValue() {
        return result.hasReturnValue();
      }
      public afn.libautobus.protocol.Protobuf.Instance getReturnValue() {
        return result.getReturnValue();
      }
      public Builder setReturnValue(afn.libautobus.protocol.Protobuf.Instance value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasReturnValue = true;
        result.returnValue_ = value;
        return this;
      }
      public Builder setReturnValue(afn.libautobus.protocol.Protobuf.Instance.Builder builderForValue) {
        result.hasReturnValue = true;
        result.returnValue_ = builderForValue.build();
        return this;
      }
      public Builder mergeReturnValue(afn.libautobus.protocol.Protobuf.Instance value) {
        if (result.hasReturnValue() &&
            result.returnValue_ != afn.libautobus.protocol.Protobuf.Instance.getDefaultInstance()) {
          result.returnValue_ =
            afn.libautobus.protocol.Protobuf.Instance.newBuilder(result.returnValue_).mergeFrom(value).buildPartial();
        } else {
          result.returnValue_ = value;
        }
        result.hasReturnValue = true;
        return this;
      }
      public Builder clearReturnValue() {
        result.hasReturnValue = false;
        result.returnValue_ = afn.libautobus.protocol.Protobuf.Instance.getDefaultInstance();
        return this;
      }
    }
    
    static {
      afn.libautobus.protocol.Protobuf.getDescriptor();
    }
    
    static {
      afn.libautobus.protocol.Protobuf.internalForceInit();
    }
  }
  
  public static final class ErrorResponse extends
      com.google.protobuf.GeneratedMessage {
    // Use ErrorResponse.newBuilder() to construct.
    private ErrorResponse() {}
    
    private static final ErrorResponse defaultInstance = new ErrorResponse();
    public static ErrorResponse getDefaultInstance() {
      return defaultInstance;
    }
    
    public ErrorResponse getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return afn.libautobus.protocol.Protobuf.internal_static_ErrorResponse_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return afn.libautobus.protocol.Protobuf.internal_static_ErrorResponse_fieldAccessorTable;
    }
    
    // optional string text = 1;
    public static final int TEXT_FIELD_NUMBER = 1;
    private boolean hasText;
    private java.lang.String text_ = "";
    public boolean hasText() { return hasText; }
    public java.lang.String getText() { return text_; }
    
    public final boolean isInitialized() {
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (hasText()) {
        output.writeString(1, getText());
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (hasText()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(1, getText());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static afn.libautobus.protocol.Protobuf.ErrorResponse parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static afn.libautobus.protocol.Protobuf.ErrorResponse parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static afn.libautobus.protocol.Protobuf.ErrorResponse parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static afn.libautobus.protocol.Protobuf.ErrorResponse parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static afn.libautobus.protocol.Protobuf.ErrorResponse parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static afn.libautobus.protocol.Protobuf.ErrorResponse parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static afn.libautobus.protocol.Protobuf.ErrorResponse parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeDelimitedFrom(input).buildParsed();
    }
    public static afn.libautobus.protocol.Protobuf.ErrorResponse parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeDelimitedFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static afn.libautobus.protocol.Protobuf.ErrorResponse parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static afn.libautobus.protocol.Protobuf.ErrorResponse parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(afn.libautobus.protocol.Protobuf.ErrorResponse prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private afn.libautobus.protocol.Protobuf.ErrorResponse result;
      
      // Construct using afn.libautobus.protocol.Protobuf.ErrorResponse.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new afn.libautobus.protocol.Protobuf.ErrorResponse();
        return builder;
      }
      
      protected afn.libautobus.protocol.Protobuf.ErrorResponse internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new afn.libautobus.protocol.Protobuf.ErrorResponse();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return afn.libautobus.protocol.Protobuf.ErrorResponse.getDescriptor();
      }
      
      public afn.libautobus.protocol.Protobuf.ErrorResponse getDefaultInstanceForType() {
        return afn.libautobus.protocol.Protobuf.ErrorResponse.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public afn.libautobus.protocol.Protobuf.ErrorResponse build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private afn.libautobus.protocol.Protobuf.ErrorResponse buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public afn.libautobus.protocol.Protobuf.ErrorResponse buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        afn.libautobus.protocol.Protobuf.ErrorResponse returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof afn.libautobus.protocol.Protobuf.ErrorResponse) {
          return mergeFrom((afn.libautobus.protocol.Protobuf.ErrorResponse)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(afn.libautobus.protocol.Protobuf.ErrorResponse other) {
        if (other == afn.libautobus.protocol.Protobuf.ErrorResponse.getDefaultInstance()) return this;
        if (other.hasText()) {
          setText(other.getText());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 10: {
              setText(input.readString());
              break;
            }
          }
        }
      }
      
      
      // optional string text = 1;
      public boolean hasText() {
        return result.hasText();
      }
      public java.lang.String getText() {
        return result.getText();
      }
      public Builder setText(java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasText = true;
        result.text_ = value;
        return this;
      }
      public Builder clearText() {
        result.hasText = false;
        result.text_ = getDefaultInstance().getText();
        return this;
      }
    }
    
    static {
      afn.libautobus.protocol.Protobuf.getDescriptor();
    }
    
    static {
      afn.libautobus.protocol.Protobuf.internalForceInit();
    }
  }
  
  public static final class RegisterEventCommand extends
      com.google.protobuf.GeneratedMessage {
    // Use RegisterEventCommand.newBuilder() to construct.
    private RegisterEventCommand() {}
    
    private static final RegisterEventCommand defaultInstance = new RegisterEventCommand();
    public static RegisterEventCommand getDefaultInstance() {
      return defaultInstance;
    }
    
    public RegisterEventCommand getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return afn.libautobus.protocol.Protobuf.internal_static_RegisterEventCommand_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return afn.libautobus.protocol.Protobuf.internal_static_RegisterEventCommand_fieldAccessorTable;
    }
    
    // required string interface_name = 1;
    public static final int INTERFACE_NAME_FIELD_NUMBER = 1;
    private boolean hasInterfaceName;
    private java.lang.String interfaceName_ = "";
    public boolean hasInterfaceName() { return hasInterfaceName; }
    public java.lang.String getInterfaceName() { return interfaceName_; }
    
    // required string event_name = 2;
    public static final int EVENT_NAME_FIELD_NUMBER = 2;
    private boolean hasEventName;
    private java.lang.String eventName_ = "";
    public boolean hasEventName() { return hasEventName; }
    public java.lang.String getEventName() { return eventName_; }
    
    // optional string doc = 3;
    public static final int DOC_FIELD_NUMBER = 3;
    private boolean hasDoc;
    private java.lang.String doc_ = "";
    public boolean hasDoc() { return hasDoc; }
    public java.lang.String getDoc() { return doc_; }
    
    public final boolean isInitialized() {
      if (!hasInterfaceName) return false;
      if (!hasEventName) return false;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (hasInterfaceName()) {
        output.writeString(1, getInterfaceName());
      }
      if (hasEventName()) {
        output.writeString(2, getEventName());
      }
      if (hasDoc()) {
        output.writeString(3, getDoc());
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (hasInterfaceName()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(1, getInterfaceName());
      }
      if (hasEventName()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(2, getEventName());
      }
      if (hasDoc()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(3, getDoc());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static afn.libautobus.protocol.Protobuf.RegisterEventCommand parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static afn.libautobus.protocol.Protobuf.RegisterEventCommand parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static afn.libautobus.protocol.Protobuf.RegisterEventCommand parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static afn.libautobus.protocol.Protobuf.RegisterEventCommand parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static afn.libautobus.protocol.Protobuf.RegisterEventCommand parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static afn.libautobus.protocol.Protobuf.RegisterEventCommand parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static afn.libautobus.protocol.Protobuf.RegisterEventCommand parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeDelimitedFrom(input).buildParsed();
    }
    public static afn.libautobus.protocol.Protobuf.RegisterEventCommand parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeDelimitedFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static afn.libautobus.protocol.Protobuf.RegisterEventCommand parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static afn.libautobus.protocol.Protobuf.RegisterEventCommand parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(afn.libautobus.protocol.Protobuf.RegisterEventCommand prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private afn.libautobus.protocol.Protobuf.RegisterEventCommand result;
      
      // Construct using afn.libautobus.protocol.Protobuf.RegisterEventCommand.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new afn.libautobus.protocol.Protobuf.RegisterEventCommand();
        return builder;
      }
      
      protected afn.libautobus.protocol.Protobuf.RegisterEventCommand internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new afn.libautobus.protocol.Protobuf.RegisterEventCommand();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return afn.libautobus.protocol.Protobuf.RegisterEventCommand.getDescriptor();
      }
      
      public afn.libautobus.protocol.Protobuf.RegisterEventCommand getDefaultInstanceForType() {
        return afn.libautobus.protocol.Protobuf.RegisterEventCommand.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public afn.libautobus.protocol.Protobuf.RegisterEventCommand build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private afn.libautobus.protocol.Protobuf.RegisterEventCommand buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public afn.libautobus.protocol.Protobuf.RegisterEventCommand buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        afn.libautobus.protocol.Protobuf.RegisterEventCommand returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof afn.libautobus.protocol.Protobuf.RegisterEventCommand) {
          return mergeFrom((afn.libautobus.protocol.Protobuf.RegisterEventCommand)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(afn.libautobus.protocol.Protobuf.RegisterEventCommand other) {
        if (other == afn.libautobus.protocol.Protobuf.RegisterEventCommand.getDefaultInstance()) return this;
        if (other.hasInterfaceName()) {
          setInterfaceName(other.getInterfaceName());
        }
        if (other.hasEventName()) {
          setEventName(other.getEventName());
        }
        if (other.hasDoc()) {
          setDoc(other.getDoc());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 10: {
              setInterfaceName(input.readString());
              break;
            }
            case 18: {
              setEventName(input.readString());
              break;
            }
            case 26: {
              setDoc(input.readString());
              break;
            }
          }
        }
      }
      
      
      // required string interface_name = 1;
      public boolean hasInterfaceName() {
        return result.hasInterfaceName();
      }
      public java.lang.String getInterfaceName() {
        return result.getInterfaceName();
      }
      public Builder setInterfaceName(java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasInterfaceName = true;
        result.interfaceName_ = value;
        return this;
      }
      public Builder clearInterfaceName() {
        result.hasInterfaceName = false;
        result.interfaceName_ = getDefaultInstance().getInterfaceName();
        return this;
      }
      
      // required string event_name = 2;
      public boolean hasEventName() {
        return result.hasEventName();
      }
      public java.lang.String getEventName() {
        return result.getEventName();
      }
      public Builder setEventName(java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasEventName = true;
        result.eventName_ = value;
        return this;
      }
      public Builder clearEventName() {
        result.hasEventName = false;
        result.eventName_ = getDefaultInstance().getEventName();
        return this;
      }
      
      // optional string doc = 3;
      public boolean hasDoc() {
        return result.hasDoc();
      }
      public java.lang.String getDoc() {
        return result.getDoc();
      }
      public Builder setDoc(java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasDoc = true;
        result.doc_ = value;
        return this;
      }
      public Builder clearDoc() {
        result.hasDoc = false;
        result.doc_ = getDefaultInstance().getDoc();
        return this;
      }
    }
    
    static {
      afn.libautobus.protocol.Protobuf.getDescriptor();
    }
    
    static {
      afn.libautobus.protocol.Protobuf.internalForceInit();
    }
  }
  
  public static final class RegisterEventResponse extends
      com.google.protobuf.GeneratedMessage {
    // Use RegisterEventResponse.newBuilder() to construct.
    private RegisterEventResponse() {}
    
    private static final RegisterEventResponse defaultInstance = new RegisterEventResponse();
    public static RegisterEventResponse getDefaultInstance() {
      return defaultInstance;
    }
    
    public RegisterEventResponse getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return afn.libautobus.protocol.Protobuf.internal_static_RegisterEventResponse_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return afn.libautobus.protocol.Protobuf.internal_static_RegisterEventResponse_fieldAccessorTable;
    }
    
    public final boolean isInitialized() {
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static afn.libautobus.protocol.Protobuf.RegisterEventResponse parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static afn.libautobus.protocol.Protobuf.RegisterEventResponse parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static afn.libautobus.protocol.Protobuf.RegisterEventResponse parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static afn.libautobus.protocol.Protobuf.RegisterEventResponse parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static afn.libautobus.protocol.Protobuf.RegisterEventResponse parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static afn.libautobus.protocol.Protobuf.RegisterEventResponse parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static afn.libautobus.protocol.Protobuf.RegisterEventResponse parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeDelimitedFrom(input).buildParsed();
    }
    public static afn.libautobus.protocol.Protobuf.RegisterEventResponse parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeDelimitedFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static afn.libautobus.protocol.Protobuf.RegisterEventResponse parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static afn.libautobus.protocol.Protobuf.RegisterEventResponse parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(afn.libautobus.protocol.Protobuf.RegisterEventResponse prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private afn.libautobus.protocol.Protobuf.RegisterEventResponse result;
      
      // Construct using afn.libautobus.protocol.Protobuf.RegisterEventResponse.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new afn.libautobus.protocol.Protobuf.RegisterEventResponse();
        return builder;
      }
      
      protected afn.libautobus.protocol.Protobuf.RegisterEventResponse internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new afn.libautobus.protocol.Protobuf.RegisterEventResponse();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return afn.libautobus.protocol.Protobuf.RegisterEventResponse.getDescriptor();
      }
      
      public afn.libautobus.protocol.Protobuf.RegisterEventResponse getDefaultInstanceForType() {
        return afn.libautobus.protocol.Protobuf.RegisterEventResponse.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public afn.libautobus.protocol.Protobuf.RegisterEventResponse build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private afn.libautobus.protocol.Protobuf.RegisterEventResponse buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public afn.libautobus.protocol.Protobuf.RegisterEventResponse buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        afn.libautobus.protocol.Protobuf.RegisterEventResponse returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof afn.libautobus.protocol.Protobuf.RegisterEventResponse) {
          return mergeFrom((afn.libautobus.protocol.Protobuf.RegisterEventResponse)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(afn.libautobus.protocol.Protobuf.RegisterEventResponse other) {
        if (other == afn.libautobus.protocol.Protobuf.RegisterEventResponse.getDefaultInstance()) return this;
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
          }
        }
      }
      
    }
    
    static {
      afn.libautobus.protocol.Protobuf.getDescriptor();
    }
    
    static {
      afn.libautobus.protocol.Protobuf.internalForceInit();
    }
  }
  
  public static final class RegisterListenerCommand extends
      com.google.protobuf.GeneratedMessage {
    // Use RegisterListenerCommand.newBuilder() to construct.
    private RegisterListenerCommand() {}
    
    private static final RegisterListenerCommand defaultInstance = new RegisterListenerCommand();
    public static RegisterListenerCommand getDefaultInstance() {
      return defaultInstance;
    }
    
    public RegisterListenerCommand getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return afn.libautobus.protocol.Protobuf.internal_static_RegisterListenerCommand_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return afn.libautobus.protocol.Protobuf.internal_static_RegisterListenerCommand_fieldAccessorTable;
    }
    
    // required string interface_name = 1;
    public static final int INTERFACE_NAME_FIELD_NUMBER = 1;
    private boolean hasInterfaceName;
    private java.lang.String interfaceName_ = "";
    public boolean hasInterfaceName() { return hasInterfaceName; }
    public java.lang.String getInterfaceName() { return interfaceName_; }
    
    // required string event_name = 2;
    public static final int EVENT_NAME_FIELD_NUMBER = 2;
    private boolean hasEventName;
    private java.lang.String eventName_ = "";
    public boolean hasEventName() { return hasEventName; }
    public java.lang.String getEventName() { return eventName_; }
    
    public final boolean isInitialized() {
      if (!hasInterfaceName) return false;
      if (!hasEventName) return false;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (hasInterfaceName()) {
        output.writeString(1, getInterfaceName());
      }
      if (hasEventName()) {
        output.writeString(2, getEventName());
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (hasInterfaceName()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(1, getInterfaceName());
      }
      if (hasEventName()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(2, getEventName());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static afn.libautobus.protocol.Protobuf.RegisterListenerCommand parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static afn.libautobus.protocol.Protobuf.RegisterListenerCommand parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static afn.libautobus.protocol.Protobuf.RegisterListenerCommand parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static afn.libautobus.protocol.Protobuf.RegisterListenerCommand parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static afn.libautobus.protocol.Protobuf.RegisterListenerCommand parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static afn.libautobus.protocol.Protobuf.RegisterListenerCommand parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static afn.libautobus.protocol.Protobuf.RegisterListenerCommand parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeDelimitedFrom(input).buildParsed();
    }
    public static afn.libautobus.protocol.Protobuf.RegisterListenerCommand parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeDelimitedFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static afn.libautobus.protocol.Protobuf.RegisterListenerCommand parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static afn.libautobus.protocol.Protobuf.RegisterListenerCommand parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(afn.libautobus.protocol.Protobuf.RegisterListenerCommand prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private afn.libautobus.protocol.Protobuf.RegisterListenerCommand result;
      
      // Construct using afn.libautobus.protocol.Protobuf.RegisterListenerCommand.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new afn.libautobus.protocol.Protobuf.RegisterListenerCommand();
        return builder;
      }
      
      protected afn.libautobus.protocol.Protobuf.RegisterListenerCommand internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new afn.libautobus.protocol.Protobuf.RegisterListenerCommand();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return afn.libautobus.protocol.Protobuf.RegisterListenerCommand.getDescriptor();
      }
      
      public afn.libautobus.protocol.Protobuf.RegisterListenerCommand getDefaultInstanceForType() {
        return afn.libautobus.protocol.Protobuf.RegisterListenerCommand.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public afn.libautobus.protocol.Protobuf.RegisterListenerCommand build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private afn.libautobus.protocol.Protobuf.RegisterListenerCommand buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public afn.libautobus.protocol.Protobuf.RegisterListenerCommand buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        afn.libautobus.protocol.Protobuf.RegisterListenerCommand returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof afn.libautobus.protocol.Protobuf.RegisterListenerCommand) {
          return mergeFrom((afn.libautobus.protocol.Protobuf.RegisterListenerCommand)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(afn.libautobus.protocol.Protobuf.RegisterListenerCommand other) {
        if (other == afn.libautobus.protocol.Protobuf.RegisterListenerCommand.getDefaultInstance()) return this;
        if (other.hasInterfaceName()) {
          setInterfaceName(other.getInterfaceName());
        }
        if (other.hasEventName()) {
          setEventName(other.getEventName());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 10: {
              setInterfaceName(input.readString());
              break;
            }
            case 18: {
              setEventName(input.readString());
              break;
            }
          }
        }
      }
      
      
      // required string interface_name = 1;
      public boolean hasInterfaceName() {
        return result.hasInterfaceName();
      }
      public java.lang.String getInterfaceName() {
        return result.getInterfaceName();
      }
      public Builder setInterfaceName(java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasInterfaceName = true;
        result.interfaceName_ = value;
        return this;
      }
      public Builder clearInterfaceName() {
        result.hasInterfaceName = false;
        result.interfaceName_ = getDefaultInstance().getInterfaceName();
        return this;
      }
      
      // required string event_name = 2;
      public boolean hasEventName() {
        return result.hasEventName();
      }
      public java.lang.String getEventName() {
        return result.getEventName();
      }
      public Builder setEventName(java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasEventName = true;
        result.eventName_ = value;
        return this;
      }
      public Builder clearEventName() {
        result.hasEventName = false;
        result.eventName_ = getDefaultInstance().getEventName();
        return this;
      }
    }
    
    static {
      afn.libautobus.protocol.Protobuf.getDescriptor();
    }
    
    static {
      afn.libautobus.protocol.Protobuf.internalForceInit();
    }
  }
  
  public static final class RegisterListenerResponse extends
      com.google.protobuf.GeneratedMessage {
    // Use RegisterListenerResponse.newBuilder() to construct.
    private RegisterListenerResponse() {}
    
    private static final RegisterListenerResponse defaultInstance = new RegisterListenerResponse();
    public static RegisterListenerResponse getDefaultInstance() {
      return defaultInstance;
    }
    
    public RegisterListenerResponse getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return afn.libautobus.protocol.Protobuf.internal_static_RegisterListenerResponse_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return afn.libautobus.protocol.Protobuf.internal_static_RegisterListenerResponse_fieldAccessorTable;
    }
    
    public final boolean isInitialized() {
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static afn.libautobus.protocol.Protobuf.RegisterListenerResponse parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static afn.libautobus.protocol.Protobuf.RegisterListenerResponse parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static afn.libautobus.protocol.Protobuf.RegisterListenerResponse parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static afn.libautobus.protocol.Protobuf.RegisterListenerResponse parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static afn.libautobus.protocol.Protobuf.RegisterListenerResponse parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static afn.libautobus.protocol.Protobuf.RegisterListenerResponse parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static afn.libautobus.protocol.Protobuf.RegisterListenerResponse parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeDelimitedFrom(input).buildParsed();
    }
    public static afn.libautobus.protocol.Protobuf.RegisterListenerResponse parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeDelimitedFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static afn.libautobus.protocol.Protobuf.RegisterListenerResponse parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static afn.libautobus.protocol.Protobuf.RegisterListenerResponse parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(afn.libautobus.protocol.Protobuf.RegisterListenerResponse prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private afn.libautobus.protocol.Protobuf.RegisterListenerResponse result;
      
      // Construct using afn.libautobus.protocol.Protobuf.RegisterListenerResponse.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new afn.libautobus.protocol.Protobuf.RegisterListenerResponse();
        return builder;
      }
      
      protected afn.libautobus.protocol.Protobuf.RegisterListenerResponse internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new afn.libautobus.protocol.Protobuf.RegisterListenerResponse();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return afn.libautobus.protocol.Protobuf.RegisterListenerResponse.getDescriptor();
      }
      
      public afn.libautobus.protocol.Protobuf.RegisterListenerResponse getDefaultInstanceForType() {
        return afn.libautobus.protocol.Protobuf.RegisterListenerResponse.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public afn.libautobus.protocol.Protobuf.RegisterListenerResponse build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private afn.libautobus.protocol.Protobuf.RegisterListenerResponse buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public afn.libautobus.protocol.Protobuf.RegisterListenerResponse buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        afn.libautobus.protocol.Protobuf.RegisterListenerResponse returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof afn.libautobus.protocol.Protobuf.RegisterListenerResponse) {
          return mergeFrom((afn.libautobus.protocol.Protobuf.RegisterListenerResponse)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(afn.libautobus.protocol.Protobuf.RegisterListenerResponse other) {
        if (other == afn.libautobus.protocol.Protobuf.RegisterListenerResponse.getDefaultInstance()) return this;
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
          }
        }
      }
      
    }
    
    static {
      afn.libautobus.protocol.Protobuf.getDescriptor();
    }
    
    static {
      afn.libautobus.protocol.Protobuf.internalForceInit();
    }
  }
  
  public static final class DeregisterListenerCommand extends
      com.google.protobuf.GeneratedMessage {
    // Use DeregisterListenerCommand.newBuilder() to construct.
    private DeregisterListenerCommand() {}
    
    private static final DeregisterListenerCommand defaultInstance = new DeregisterListenerCommand();
    public static DeregisterListenerCommand getDefaultInstance() {
      return defaultInstance;
    }
    
    public DeregisterListenerCommand getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return afn.libautobus.protocol.Protobuf.internal_static_DeregisterListenerCommand_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return afn.libautobus.protocol.Protobuf.internal_static_DeregisterListenerCommand_fieldAccessorTable;
    }
    
    // required string interface_name = 1;
    public static final int INTERFACE_NAME_FIELD_NUMBER = 1;
    private boolean hasInterfaceName;
    private java.lang.String interfaceName_ = "";
    public boolean hasInterfaceName() { return hasInterfaceName; }
    public java.lang.String getInterfaceName() { return interfaceName_; }
    
    // required string event_name = 2;
    public static final int EVENT_NAME_FIELD_NUMBER = 2;
    private boolean hasEventName;
    private java.lang.String eventName_ = "";
    public boolean hasEventName() { return hasEventName; }
    public java.lang.String getEventName() { return eventName_; }
    
    public final boolean isInitialized() {
      if (!hasInterfaceName) return false;
      if (!hasEventName) return false;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (hasInterfaceName()) {
        output.writeString(1, getInterfaceName());
      }
      if (hasEventName()) {
        output.writeString(2, getEventName());
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (hasInterfaceName()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(1, getInterfaceName());
      }
      if (hasEventName()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(2, getEventName());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static afn.libautobus.protocol.Protobuf.DeregisterListenerCommand parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static afn.libautobus.protocol.Protobuf.DeregisterListenerCommand parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static afn.libautobus.protocol.Protobuf.DeregisterListenerCommand parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static afn.libautobus.protocol.Protobuf.DeregisterListenerCommand parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static afn.libautobus.protocol.Protobuf.DeregisterListenerCommand parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static afn.libautobus.protocol.Protobuf.DeregisterListenerCommand parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static afn.libautobus.protocol.Protobuf.DeregisterListenerCommand parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeDelimitedFrom(input).buildParsed();
    }
    public static afn.libautobus.protocol.Protobuf.DeregisterListenerCommand parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeDelimitedFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static afn.libautobus.protocol.Protobuf.DeregisterListenerCommand parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static afn.libautobus.protocol.Protobuf.DeregisterListenerCommand parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(afn.libautobus.protocol.Protobuf.DeregisterListenerCommand prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private afn.libautobus.protocol.Protobuf.DeregisterListenerCommand result;
      
      // Construct using afn.libautobus.protocol.Protobuf.DeregisterListenerCommand.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new afn.libautobus.protocol.Protobuf.DeregisterListenerCommand();
        return builder;
      }
      
      protected afn.libautobus.protocol.Protobuf.DeregisterListenerCommand internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new afn.libautobus.protocol.Protobuf.DeregisterListenerCommand();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return afn.libautobus.protocol.Protobuf.DeregisterListenerCommand.getDescriptor();
      }
      
      public afn.libautobus.protocol.Protobuf.DeregisterListenerCommand getDefaultInstanceForType() {
        return afn.libautobus.protocol.Protobuf.DeregisterListenerCommand.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public afn.libautobus.protocol.Protobuf.DeregisterListenerCommand build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private afn.libautobus.protocol.Protobuf.DeregisterListenerCommand buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public afn.libautobus.protocol.Protobuf.DeregisterListenerCommand buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        afn.libautobus.protocol.Protobuf.DeregisterListenerCommand returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof afn.libautobus.protocol.Protobuf.DeregisterListenerCommand) {
          return mergeFrom((afn.libautobus.protocol.Protobuf.DeregisterListenerCommand)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(afn.libautobus.protocol.Protobuf.DeregisterListenerCommand other) {
        if (other == afn.libautobus.protocol.Protobuf.DeregisterListenerCommand.getDefaultInstance()) return this;
        if (other.hasInterfaceName()) {
          setInterfaceName(other.getInterfaceName());
        }
        if (other.hasEventName()) {
          setEventName(other.getEventName());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 10: {
              setInterfaceName(input.readString());
              break;
            }
            case 18: {
              setEventName(input.readString());
              break;
            }
          }
        }
      }
      
      
      // required string interface_name = 1;
      public boolean hasInterfaceName() {
        return result.hasInterfaceName();
      }
      public java.lang.String getInterfaceName() {
        return result.getInterfaceName();
      }
      public Builder setInterfaceName(java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasInterfaceName = true;
        result.interfaceName_ = value;
        return this;
      }
      public Builder clearInterfaceName() {
        result.hasInterfaceName = false;
        result.interfaceName_ = getDefaultInstance().getInterfaceName();
        return this;
      }
      
      // required string event_name = 2;
      public boolean hasEventName() {
        return result.hasEventName();
      }
      public java.lang.String getEventName() {
        return result.getEventName();
      }
      public Builder setEventName(java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasEventName = true;
        result.eventName_ = value;
        return this;
      }
      public Builder clearEventName() {
        result.hasEventName = false;
        result.eventName_ = getDefaultInstance().getEventName();
        return this;
      }
    }
    
    static {
      afn.libautobus.protocol.Protobuf.getDescriptor();
    }
    
    static {
      afn.libautobus.protocol.Protobuf.internalForceInit();
    }
  }
  
  public static final class DeregisterListenerResponse extends
      com.google.protobuf.GeneratedMessage {
    // Use DeregisterListenerResponse.newBuilder() to construct.
    private DeregisterListenerResponse() {}
    
    private static final DeregisterListenerResponse defaultInstance = new DeregisterListenerResponse();
    public static DeregisterListenerResponse getDefaultInstance() {
      return defaultInstance;
    }
    
    public DeregisterListenerResponse getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return afn.libautobus.protocol.Protobuf.internal_static_DeregisterListenerResponse_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return afn.libautobus.protocol.Protobuf.internal_static_DeregisterListenerResponse_fieldAccessorTable;
    }
    
    public final boolean isInitialized() {
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static afn.libautobus.protocol.Protobuf.DeregisterListenerResponse parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static afn.libautobus.protocol.Protobuf.DeregisterListenerResponse parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static afn.libautobus.protocol.Protobuf.DeregisterListenerResponse parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static afn.libautobus.protocol.Protobuf.DeregisterListenerResponse parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static afn.libautobus.protocol.Protobuf.DeregisterListenerResponse parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static afn.libautobus.protocol.Protobuf.DeregisterListenerResponse parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static afn.libautobus.protocol.Protobuf.DeregisterListenerResponse parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeDelimitedFrom(input).buildParsed();
    }
    public static afn.libautobus.protocol.Protobuf.DeregisterListenerResponse parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeDelimitedFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static afn.libautobus.protocol.Protobuf.DeregisterListenerResponse parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static afn.libautobus.protocol.Protobuf.DeregisterListenerResponse parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(afn.libautobus.protocol.Protobuf.DeregisterListenerResponse prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private afn.libautobus.protocol.Protobuf.DeregisterListenerResponse result;
      
      // Construct using afn.libautobus.protocol.Protobuf.DeregisterListenerResponse.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new afn.libautobus.protocol.Protobuf.DeregisterListenerResponse();
        return builder;
      }
      
      protected afn.libautobus.protocol.Protobuf.DeregisterListenerResponse internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new afn.libautobus.protocol.Protobuf.DeregisterListenerResponse();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return afn.libautobus.protocol.Protobuf.DeregisterListenerResponse.getDescriptor();
      }
      
      public afn.libautobus.protocol.Protobuf.DeregisterListenerResponse getDefaultInstanceForType() {
        return afn.libautobus.protocol.Protobuf.DeregisterListenerResponse.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public afn.libautobus.protocol.Protobuf.DeregisterListenerResponse build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private afn.libautobus.protocol.Protobuf.DeregisterListenerResponse buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public afn.libautobus.protocol.Protobuf.DeregisterListenerResponse buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        afn.libautobus.protocol.Protobuf.DeregisterListenerResponse returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof afn.libautobus.protocol.Protobuf.DeregisterListenerResponse) {
          return mergeFrom((afn.libautobus.protocol.Protobuf.DeregisterListenerResponse)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(afn.libautobus.protocol.Protobuf.DeregisterListenerResponse other) {
        if (other == afn.libautobus.protocol.Protobuf.DeregisterListenerResponse.getDefaultInstance()) return this;
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
          }
        }
      }
      
    }
    
    static {
      afn.libautobus.protocol.Protobuf.getDescriptor();
    }
    
    static {
      afn.libautobus.protocol.Protobuf.internalForceInit();
    }
  }
  
  public static final class FireEventCommand extends
      com.google.protobuf.GeneratedMessage {
    // Use FireEventCommand.newBuilder() to construct.
    private FireEventCommand() {}
    
    private static final FireEventCommand defaultInstance = new FireEventCommand();
    public static FireEventCommand getDefaultInstance() {
      return defaultInstance;
    }
    
    public FireEventCommand getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return afn.libautobus.protocol.Protobuf.internal_static_FireEventCommand_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return afn.libautobus.protocol.Protobuf.internal_static_FireEventCommand_fieldAccessorTable;
    }
    
    // required string interface_name = 1;
    public static final int INTERFACE_NAME_FIELD_NUMBER = 1;
    private boolean hasInterfaceName;
    private java.lang.String interfaceName_ = "";
    public boolean hasInterfaceName() { return hasInterfaceName; }
    public java.lang.String getInterfaceName() { return interfaceName_; }
    
    // required string event_name = 2;
    public static final int EVENT_NAME_FIELD_NUMBER = 2;
    private boolean hasEventName;
    private java.lang.String eventName_ = "";
    public boolean hasEventName() { return hasEventName; }
    public java.lang.String getEventName() { return eventName_; }
    
    // repeated .Instance arguments = 4;
    public static final int ARGUMENTS_FIELD_NUMBER = 4;
    private java.util.List<afn.libautobus.protocol.Protobuf.Instance> arguments_ =
      java.util.Collections.emptyList();
    public java.util.List<afn.libautobus.protocol.Protobuf.Instance> getArgumentsList() {
      return arguments_;
    }
    public int getArgumentsCount() { return arguments_.size(); }
    public afn.libautobus.protocol.Protobuf.Instance getArguments(int index) {
      return arguments_.get(index);
    }
    
    public final boolean isInitialized() {
      if (!hasInterfaceName) return false;
      if (!hasEventName) return false;
      for (afn.libautobus.protocol.Protobuf.Instance element : getArgumentsList()) {
        if (!element.isInitialized()) return false;
      }
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (hasInterfaceName()) {
        output.writeString(1, getInterfaceName());
      }
      if (hasEventName()) {
        output.writeString(2, getEventName());
      }
      for (afn.libautobus.protocol.Protobuf.Instance element : getArgumentsList()) {
        output.writeMessage(4, element);
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (hasInterfaceName()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(1, getInterfaceName());
      }
      if (hasEventName()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(2, getEventName());
      }
      for (afn.libautobus.protocol.Protobuf.Instance element : getArgumentsList()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, element);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static afn.libautobus.protocol.Protobuf.FireEventCommand parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static afn.libautobus.protocol.Protobuf.FireEventCommand parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static afn.libautobus.protocol.Protobuf.FireEventCommand parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static afn.libautobus.protocol.Protobuf.FireEventCommand parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static afn.libautobus.protocol.Protobuf.FireEventCommand parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static afn.libautobus.protocol.Protobuf.FireEventCommand parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static afn.libautobus.protocol.Protobuf.FireEventCommand parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeDelimitedFrom(input).buildParsed();
    }
    public static afn.libautobus.protocol.Protobuf.FireEventCommand parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeDelimitedFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static afn.libautobus.protocol.Protobuf.FireEventCommand parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static afn.libautobus.protocol.Protobuf.FireEventCommand parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(afn.libautobus.protocol.Protobuf.FireEventCommand prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private afn.libautobus.protocol.Protobuf.FireEventCommand result;
      
      // Construct using afn.libautobus.protocol.Protobuf.FireEventCommand.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new afn.libautobus.protocol.Protobuf.FireEventCommand();
        return builder;
      }
      
      protected afn.libautobus.protocol.Protobuf.FireEventCommand internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new afn.libautobus.protocol.Protobuf.FireEventCommand();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return afn.libautobus.protocol.Protobuf.FireEventCommand.getDescriptor();
      }
      
      public afn.libautobus.protocol.Protobuf.FireEventCommand getDefaultInstanceForType() {
        return afn.libautobus.protocol.Protobuf.FireEventCommand.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public afn.libautobus.protocol.Protobuf.FireEventCommand build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private afn.libautobus.protocol.Protobuf.FireEventCommand buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public afn.libautobus.protocol.Protobuf.FireEventCommand buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        if (result.arguments_ != java.util.Collections.EMPTY_LIST) {
          result.arguments_ =
            java.util.Collections.unmodifiableList(result.arguments_);
        }
        afn.libautobus.protocol.Protobuf.FireEventCommand returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof afn.libautobus.protocol.Protobuf.FireEventCommand) {
          return mergeFrom((afn.libautobus.protocol.Protobuf.FireEventCommand)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(afn.libautobus.protocol.Protobuf.FireEventCommand other) {
        if (other == afn.libautobus.protocol.Protobuf.FireEventCommand.getDefaultInstance()) return this;
        if (other.hasInterfaceName()) {
          setInterfaceName(other.getInterfaceName());
        }
        if (other.hasEventName()) {
          setEventName(other.getEventName());
        }
        if (!other.arguments_.isEmpty()) {
          if (result.arguments_.isEmpty()) {
            result.arguments_ = new java.util.ArrayList<afn.libautobus.protocol.Protobuf.Instance>();
          }
          result.arguments_.addAll(other.arguments_);
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 10: {
              setInterfaceName(input.readString());
              break;
            }
            case 18: {
              setEventName(input.readString());
              break;
            }
            case 34: {
              afn.libautobus.protocol.Protobuf.Instance.Builder subBuilder = afn.libautobus.protocol.Protobuf.Instance.newBuilder();
              input.readMessage(subBuilder, extensionRegistry);
              addArguments(subBuilder.buildPartial());
              break;
            }
          }
        }
      }
      
      
      // required string interface_name = 1;
      public boolean hasInterfaceName() {
        return result.hasInterfaceName();
      }
      public java.lang.String getInterfaceName() {
        return result.getInterfaceName();
      }
      public Builder setInterfaceName(java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasInterfaceName = true;
        result.interfaceName_ = value;
        return this;
      }
      public Builder clearInterfaceName() {
        result.hasInterfaceName = false;
        result.interfaceName_ = getDefaultInstance().getInterfaceName();
        return this;
      }
      
      // required string event_name = 2;
      public boolean hasEventName() {
        return result.hasEventName();
      }
      public java.lang.String getEventName() {
        return result.getEventName();
      }
      public Builder setEventName(java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasEventName = true;
        result.eventName_ = value;
        return this;
      }
      public Builder clearEventName() {
        result.hasEventName = false;
        result.eventName_ = getDefaultInstance().getEventName();
        return this;
      }
      
      // repeated .Instance arguments = 4;
      public java.util.List<afn.libautobus.protocol.Protobuf.Instance> getArgumentsList() {
        return java.util.Collections.unmodifiableList(result.arguments_);
      }
      public int getArgumentsCount() {
        return result.getArgumentsCount();
      }
      public afn.libautobus.protocol.Protobuf.Instance getArguments(int index) {
        return result.getArguments(index);
      }
      public Builder setArguments(int index, afn.libautobus.protocol.Protobuf.Instance value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.arguments_.set(index, value);
        return this;
      }
      public Builder setArguments(int index, afn.libautobus.protocol.Protobuf.Instance.Builder builderForValue) {
        result.arguments_.set(index, builderForValue.build());
        return this;
      }
      public Builder addArguments(afn.libautobus.protocol.Protobuf.Instance value) {
        if (value == null) {
          throw new NullPointerException();
        }
        if (result.arguments_.isEmpty()) {
          result.arguments_ = new java.util.ArrayList<afn.libautobus.protocol.Protobuf.Instance>();
        }
        result.arguments_.add(value);
        return this;
      }
      public Builder addArguments(afn.libautobus.protocol.Protobuf.Instance.Builder builderForValue) {
        if (result.arguments_.isEmpty()) {
          result.arguments_ = new java.util.ArrayList<afn.libautobus.protocol.Protobuf.Instance>();
        }
        result.arguments_.add(builderForValue.build());
        return this;
      }
      public Builder addAllArguments(
          java.lang.Iterable<? extends afn.libautobus.protocol.Protobuf.Instance> values) {
        if (result.arguments_.isEmpty()) {
          result.arguments_ = new java.util.ArrayList<afn.libautobus.protocol.Protobuf.Instance>();
        }
        super.addAll(values, result.arguments_);
        return this;
      }
      public Builder clearArguments() {
        result.arguments_ = java.util.Collections.emptyList();
        return this;
      }
    }
    
    static {
      afn.libautobus.protocol.Protobuf.getDescriptor();
    }
    
    static {
      afn.libautobus.protocol.Protobuf.internalForceInit();
    }
  }
  
  public static final class RegisterObjectCommand extends
      com.google.protobuf.GeneratedMessage {
    // Use RegisterObjectCommand.newBuilder() to construct.
    private RegisterObjectCommand() {}
    
    private static final RegisterObjectCommand defaultInstance = new RegisterObjectCommand();
    public static RegisterObjectCommand getDefaultInstance() {
      return defaultInstance;
    }
    
    public RegisterObjectCommand getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return afn.libautobus.protocol.Protobuf.internal_static_RegisterObjectCommand_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return afn.libautobus.protocol.Protobuf.internal_static_RegisterObjectCommand_fieldAccessorTable;
    }
    
    // required string interface_name = 1;
    public static final int INTERFACE_NAME_FIELD_NUMBER = 1;
    private boolean hasInterfaceName;
    private java.lang.String interfaceName_ = "";
    public boolean hasInterfaceName() { return hasInterfaceName; }
    public java.lang.String getInterfaceName() { return interfaceName_; }
    
    // required string object_name = 2;
    public static final int OBJECT_NAME_FIELD_NUMBER = 2;
    private boolean hasObjectName;
    private java.lang.String objectName_ = "";
    public boolean hasObjectName() { return hasObjectName; }
    public java.lang.String getObjectName() { return objectName_; }
    
    // optional string doc = 3;
    public static final int DOC_FIELD_NUMBER = 3;
    private boolean hasDoc;
    private java.lang.String doc_ = "";
    public boolean hasDoc() { return hasDoc; }
    public java.lang.String getDoc() { return doc_; }
    
    // required .Instance value = 4;
    public static final int VALUE_FIELD_NUMBER = 4;
    private boolean hasValue;
    private afn.libautobus.protocol.Protobuf.Instance value_ = afn.libautobus.protocol.Protobuf.Instance.getDefaultInstance();
    public boolean hasValue() { return hasValue; }
    public afn.libautobus.protocol.Protobuf.Instance getValue() { return value_; }
    
    public final boolean isInitialized() {
      if (!hasInterfaceName) return false;
      if (!hasObjectName) return false;
      if (!hasValue) return false;
      if (!getValue().isInitialized()) return false;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (hasInterfaceName()) {
        output.writeString(1, getInterfaceName());
      }
      if (hasObjectName()) {
        output.writeString(2, getObjectName());
      }
      if (hasDoc()) {
        output.writeString(3, getDoc());
      }
      if (hasValue()) {
        output.writeMessage(4, getValue());
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (hasInterfaceName()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(1, getInterfaceName());
      }
      if (hasObjectName()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(2, getObjectName());
      }
      if (hasDoc()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(3, getDoc());
      }
      if (hasValue()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, getValue());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static afn.libautobus.protocol.Protobuf.RegisterObjectCommand parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static afn.libautobus.protocol.Protobuf.RegisterObjectCommand parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static afn.libautobus.protocol.Protobuf.RegisterObjectCommand parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static afn.libautobus.protocol.Protobuf.RegisterObjectCommand parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static afn.libautobus.protocol.Protobuf.RegisterObjectCommand parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static afn.libautobus.protocol.Protobuf.RegisterObjectCommand parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static afn.libautobus.protocol.Protobuf.RegisterObjectCommand parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeDelimitedFrom(input).buildParsed();
    }
    public static afn.libautobus.protocol.Protobuf.RegisterObjectCommand parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeDelimitedFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static afn.libautobus.protocol.Protobuf.RegisterObjectCommand parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static afn.libautobus.protocol.Protobuf.RegisterObjectCommand parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(afn.libautobus.protocol.Protobuf.RegisterObjectCommand prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private afn.libautobus.protocol.Protobuf.RegisterObjectCommand result;
      
      // Construct using afn.libautobus.protocol.Protobuf.RegisterObjectCommand.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new afn.libautobus.protocol.Protobuf.RegisterObjectCommand();
        return builder;
      }
      
      protected afn.libautobus.protocol.Protobuf.RegisterObjectCommand internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new afn.libautobus.protocol.Protobuf.RegisterObjectCommand();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return afn.libautobus.protocol.Protobuf.RegisterObjectCommand.getDescriptor();
      }
      
      public afn.libautobus.protocol.Protobuf.RegisterObjectCommand getDefaultInstanceForType() {
        return afn.libautobus.protocol.Protobuf.RegisterObjectCommand.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public afn.libautobus.protocol.Protobuf.RegisterObjectCommand build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private afn.libautobus.protocol.Protobuf.RegisterObjectCommand buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public afn.libautobus.protocol.Protobuf.RegisterObjectCommand buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        afn.libautobus.protocol.Protobuf.RegisterObjectCommand returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof afn.libautobus.protocol.Protobuf.RegisterObjectCommand) {
          return mergeFrom((afn.libautobus.protocol.Protobuf.RegisterObjectCommand)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(afn.libautobus.protocol.Protobuf.RegisterObjectCommand other) {
        if (other == afn.libautobus.protocol.Protobuf.RegisterObjectCommand.getDefaultInstance()) return this;
        if (other.hasInterfaceName()) {
          setInterfaceName(other.getInterfaceName());
        }
        if (other.hasObjectName()) {
          setObjectName(other.getObjectName());
        }
        if (other.hasDoc()) {
          setDoc(other.getDoc());
        }
        if (other.hasValue()) {
          mergeValue(other.getValue());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 10: {
              setInterfaceName(input.readString());
              break;
            }
            case 18: {
              setObjectName(input.readString());
              break;
            }
            case 26: {
              setDoc(input.readString());
              break;
            }
            case 34: {
              afn.libautobus.protocol.Protobuf.Instance.Builder subBuilder = afn.libautobus.protocol.Protobuf.Instance.newBuilder();
              if (hasValue()) {
                subBuilder.mergeFrom(getValue());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setValue(subBuilder.buildPartial());
              break;
            }
          }
        }
      }
      
      
      // required string interface_name = 1;
      public boolean hasInterfaceName() {
        return result.hasInterfaceName();
      }
      public java.lang.String getInterfaceName() {
        return result.getInterfaceName();
      }
      public Builder setInterfaceName(java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasInterfaceName = true;
        result.interfaceName_ = value;
        return this;
      }
      public Builder clearInterfaceName() {
        result.hasInterfaceName = false;
        result.interfaceName_ = getDefaultInstance().getInterfaceName();
        return this;
      }
      
      // required string object_name = 2;
      public boolean hasObjectName() {
        return result.hasObjectName();
      }
      public java.lang.String getObjectName() {
        return result.getObjectName();
      }
      public Builder setObjectName(java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasObjectName = true;
        result.objectName_ = value;
        return this;
      }
      public Builder clearObjectName() {
        result.hasObjectName = false;
        result.objectName_ = getDefaultInstance().getObjectName();
        return this;
      }
      
      // optional string doc = 3;
      public boolean hasDoc() {
        return result.hasDoc();
      }
      public java.lang.String getDoc() {
        return result.getDoc();
      }
      public Builder setDoc(java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasDoc = true;
        result.doc_ = value;
        return this;
      }
      public Builder clearDoc() {
        result.hasDoc = false;
        result.doc_ = getDefaultInstance().getDoc();
        return this;
      }
      
      // required .Instance value = 4;
      public boolean hasValue() {
        return result.hasValue();
      }
      public afn.libautobus.protocol.Protobuf.Instance getValue() {
        return result.getValue();
      }
      public Builder setValue(afn.libautobus.protocol.Protobuf.Instance value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasValue = true;
        result.value_ = value;
        return this;
      }
      public Builder setValue(afn.libautobus.protocol.Protobuf.Instance.Builder builderForValue) {
        result.hasValue = true;
        result.value_ = builderForValue.build();
        return this;
      }
      public Builder mergeValue(afn.libautobus.protocol.Protobuf.Instance value) {
        if (result.hasValue() &&
            result.value_ != afn.libautobus.protocol.Protobuf.Instance.getDefaultInstance()) {
          result.value_ =
            afn.libautobus.protocol.Protobuf.Instance.newBuilder(result.value_).mergeFrom(value).buildPartial();
        } else {
          result.value_ = value;
        }
        result.hasValue = true;
        return this;
      }
      public Builder clearValue() {
        result.hasValue = false;
        result.value_ = afn.libautobus.protocol.Protobuf.Instance.getDefaultInstance();
        return this;
      }
    }
    
    static {
      afn.libautobus.protocol.Protobuf.getDescriptor();
    }
    
    static {
      afn.libautobus.protocol.Protobuf.internalForceInit();
    }
  }
  
  public static final class RegisterObjectResponse extends
      com.google.protobuf.GeneratedMessage {
    // Use RegisterObjectResponse.newBuilder() to construct.
    private RegisterObjectResponse() {}
    
    private static final RegisterObjectResponse defaultInstance = new RegisterObjectResponse();
    public static RegisterObjectResponse getDefaultInstance() {
      return defaultInstance;
    }
    
    public RegisterObjectResponse getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return afn.libautobus.protocol.Protobuf.internal_static_RegisterObjectResponse_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return afn.libautobus.protocol.Protobuf.internal_static_RegisterObjectResponse_fieldAccessorTable;
    }
    
    public final boolean isInitialized() {
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static afn.libautobus.protocol.Protobuf.RegisterObjectResponse parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static afn.libautobus.protocol.Protobuf.RegisterObjectResponse parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static afn.libautobus.protocol.Protobuf.RegisterObjectResponse parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static afn.libautobus.protocol.Protobuf.RegisterObjectResponse parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static afn.libautobus.protocol.Protobuf.RegisterObjectResponse parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static afn.libautobus.protocol.Protobuf.RegisterObjectResponse parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static afn.libautobus.protocol.Protobuf.RegisterObjectResponse parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeDelimitedFrom(input).buildParsed();
    }
    public static afn.libautobus.protocol.Protobuf.RegisterObjectResponse parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeDelimitedFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static afn.libautobus.protocol.Protobuf.RegisterObjectResponse parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static afn.libautobus.protocol.Protobuf.RegisterObjectResponse parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(afn.libautobus.protocol.Protobuf.RegisterObjectResponse prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private afn.libautobus.protocol.Protobuf.RegisterObjectResponse result;
      
      // Construct using afn.libautobus.protocol.Protobuf.RegisterObjectResponse.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new afn.libautobus.protocol.Protobuf.RegisterObjectResponse();
        return builder;
      }
      
      protected afn.libautobus.protocol.Protobuf.RegisterObjectResponse internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new afn.libautobus.protocol.Protobuf.RegisterObjectResponse();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return afn.libautobus.protocol.Protobuf.RegisterObjectResponse.getDescriptor();
      }
      
      public afn.libautobus.protocol.Protobuf.RegisterObjectResponse getDefaultInstanceForType() {
        return afn.libautobus.protocol.Protobuf.RegisterObjectResponse.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public afn.libautobus.protocol.Protobuf.RegisterObjectResponse build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private afn.libautobus.protocol.Protobuf.RegisterObjectResponse buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public afn.libautobus.protocol.Protobuf.RegisterObjectResponse buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        afn.libautobus.protocol.Protobuf.RegisterObjectResponse returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof afn.libautobus.protocol.Protobuf.RegisterObjectResponse) {
          return mergeFrom((afn.libautobus.protocol.Protobuf.RegisterObjectResponse)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(afn.libautobus.protocol.Protobuf.RegisterObjectResponse other) {
        if (other == afn.libautobus.protocol.Protobuf.RegisterObjectResponse.getDefaultInstance()) return this;
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
          }
        }
      }
      
    }
    
    static {
      afn.libautobus.protocol.Protobuf.getDescriptor();
    }
    
    static {
      afn.libautobus.protocol.Protobuf.internalForceInit();
    }
  }
  
  public static final class WatchObjectCommand extends
      com.google.protobuf.GeneratedMessage {
    // Use WatchObjectCommand.newBuilder() to construct.
    private WatchObjectCommand() {}
    
    private static final WatchObjectCommand defaultInstance = new WatchObjectCommand();
    public static WatchObjectCommand getDefaultInstance() {
      return defaultInstance;
    }
    
    public WatchObjectCommand getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return afn.libautobus.protocol.Protobuf.internal_static_WatchObjectCommand_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return afn.libautobus.protocol.Protobuf.internal_static_WatchObjectCommand_fieldAccessorTable;
    }
    
    // required string interface_name = 1;
    public static final int INTERFACE_NAME_FIELD_NUMBER = 1;
    private boolean hasInterfaceName;
    private java.lang.String interfaceName_ = "";
    public boolean hasInterfaceName() { return hasInterfaceName; }
    public java.lang.String getInterfaceName() { return interfaceName_; }
    
    // required string object_name = 2;
    public static final int OBJECT_NAME_FIELD_NUMBER = 2;
    private boolean hasObjectName;
    private java.lang.String objectName_ = "";
    public boolean hasObjectName() { return hasObjectName; }
    public java.lang.String getObjectName() { return objectName_; }
    
    public final boolean isInitialized() {
      if (!hasInterfaceName) return false;
      if (!hasObjectName) return false;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (hasInterfaceName()) {
        output.writeString(1, getInterfaceName());
      }
      if (hasObjectName()) {
        output.writeString(2, getObjectName());
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (hasInterfaceName()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(1, getInterfaceName());
      }
      if (hasObjectName()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(2, getObjectName());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static afn.libautobus.protocol.Protobuf.WatchObjectCommand parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static afn.libautobus.protocol.Protobuf.WatchObjectCommand parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static afn.libautobus.protocol.Protobuf.WatchObjectCommand parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static afn.libautobus.protocol.Protobuf.WatchObjectCommand parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static afn.libautobus.protocol.Protobuf.WatchObjectCommand parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static afn.libautobus.protocol.Protobuf.WatchObjectCommand parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static afn.libautobus.protocol.Protobuf.WatchObjectCommand parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeDelimitedFrom(input).buildParsed();
    }
    public static afn.libautobus.protocol.Protobuf.WatchObjectCommand parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeDelimitedFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static afn.libautobus.protocol.Protobuf.WatchObjectCommand parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static afn.libautobus.protocol.Protobuf.WatchObjectCommand parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(afn.libautobus.protocol.Protobuf.WatchObjectCommand prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private afn.libautobus.protocol.Protobuf.WatchObjectCommand result;
      
      // Construct using afn.libautobus.protocol.Protobuf.WatchObjectCommand.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new afn.libautobus.protocol.Protobuf.WatchObjectCommand();
        return builder;
      }
      
      protected afn.libautobus.protocol.Protobuf.WatchObjectCommand internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new afn.libautobus.protocol.Protobuf.WatchObjectCommand();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return afn.libautobus.protocol.Protobuf.WatchObjectCommand.getDescriptor();
      }
      
      public afn.libautobus.protocol.Protobuf.WatchObjectCommand getDefaultInstanceForType() {
        return afn.libautobus.protocol.Protobuf.WatchObjectCommand.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public afn.libautobus.protocol.Protobuf.WatchObjectCommand build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private afn.libautobus.protocol.Protobuf.WatchObjectCommand buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public afn.libautobus.protocol.Protobuf.WatchObjectCommand buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        afn.libautobus.protocol.Protobuf.WatchObjectCommand returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof afn.libautobus.protocol.Protobuf.WatchObjectCommand) {
          return mergeFrom((afn.libautobus.protocol.Protobuf.WatchObjectCommand)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(afn.libautobus.protocol.Protobuf.WatchObjectCommand other) {
        if (other == afn.libautobus.protocol.Protobuf.WatchObjectCommand.getDefaultInstance()) return this;
        if (other.hasInterfaceName()) {
          setInterfaceName(other.getInterfaceName());
        }
        if (other.hasObjectName()) {
          setObjectName(other.getObjectName());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 10: {
              setInterfaceName(input.readString());
              break;
            }
            case 18: {
              setObjectName(input.readString());
              break;
            }
          }
        }
      }
      
      
      // required string interface_name = 1;
      public boolean hasInterfaceName() {
        return result.hasInterfaceName();
      }
      public java.lang.String getInterfaceName() {
        return result.getInterfaceName();
      }
      public Builder setInterfaceName(java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasInterfaceName = true;
        result.interfaceName_ = value;
        return this;
      }
      public Builder clearInterfaceName() {
        result.hasInterfaceName = false;
        result.interfaceName_ = getDefaultInstance().getInterfaceName();
        return this;
      }
      
      // required string object_name = 2;
      public boolean hasObjectName() {
        return result.hasObjectName();
      }
      public java.lang.String getObjectName() {
        return result.getObjectName();
      }
      public Builder setObjectName(java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasObjectName = true;
        result.objectName_ = value;
        return this;
      }
      public Builder clearObjectName() {
        result.hasObjectName = false;
        result.objectName_ = getDefaultInstance().getObjectName();
        return this;
      }
    }
    
    static {
      afn.libautobus.protocol.Protobuf.getDescriptor();
    }
    
    static {
      afn.libautobus.protocol.Protobuf.internalForceInit();
    }
  }
  
  public static final class WatchObjectResponse extends
      com.google.protobuf.GeneratedMessage {
    // Use WatchObjectResponse.newBuilder() to construct.
    private WatchObjectResponse() {}
    
    private static final WatchObjectResponse defaultInstance = new WatchObjectResponse();
    public static WatchObjectResponse getDefaultInstance() {
      return defaultInstance;
    }
    
    public WatchObjectResponse getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return afn.libautobus.protocol.Protobuf.internal_static_WatchObjectResponse_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return afn.libautobus.protocol.Protobuf.internal_static_WatchObjectResponse_fieldAccessorTable;
    }
    
    // required string interface_name = 1;
    public static final int INTERFACE_NAME_FIELD_NUMBER = 1;
    private boolean hasInterfaceName;
    private java.lang.String interfaceName_ = "";
    public boolean hasInterfaceName() { return hasInterfaceName; }
    public java.lang.String getInterfaceName() { return interfaceName_; }
    
    // required string object_name = 2;
    public static final int OBJECT_NAME_FIELD_NUMBER = 2;
    private boolean hasObjectName;
    private java.lang.String objectName_ = "";
    public boolean hasObjectName() { return hasObjectName; }
    public java.lang.String getObjectName() { return objectName_; }
    
    // required .Instance value = 3;
    public static final int VALUE_FIELD_NUMBER = 3;
    private boolean hasValue;
    private afn.libautobus.protocol.Protobuf.Instance value_ = afn.libautobus.protocol.Protobuf.Instance.getDefaultInstance();
    public boolean hasValue() { return hasValue; }
    public afn.libautobus.protocol.Protobuf.Instance getValue() { return value_; }
    
    public final boolean isInitialized() {
      if (!hasInterfaceName) return false;
      if (!hasObjectName) return false;
      if (!hasValue) return false;
      if (!getValue().isInitialized()) return false;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (hasInterfaceName()) {
        output.writeString(1, getInterfaceName());
      }
      if (hasObjectName()) {
        output.writeString(2, getObjectName());
      }
      if (hasValue()) {
        output.writeMessage(3, getValue());
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (hasInterfaceName()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(1, getInterfaceName());
      }
      if (hasObjectName()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(2, getObjectName());
      }
      if (hasValue()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, getValue());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static afn.libautobus.protocol.Protobuf.WatchObjectResponse parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static afn.libautobus.protocol.Protobuf.WatchObjectResponse parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static afn.libautobus.protocol.Protobuf.WatchObjectResponse parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static afn.libautobus.protocol.Protobuf.WatchObjectResponse parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static afn.libautobus.protocol.Protobuf.WatchObjectResponse parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static afn.libautobus.protocol.Protobuf.WatchObjectResponse parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static afn.libautobus.protocol.Protobuf.WatchObjectResponse parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeDelimitedFrom(input).buildParsed();
    }
    public static afn.libautobus.protocol.Protobuf.WatchObjectResponse parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeDelimitedFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static afn.libautobus.protocol.Protobuf.WatchObjectResponse parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static afn.libautobus.protocol.Protobuf.WatchObjectResponse parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(afn.libautobus.protocol.Protobuf.WatchObjectResponse prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private afn.libautobus.protocol.Protobuf.WatchObjectResponse result;
      
      // Construct using afn.libautobus.protocol.Protobuf.WatchObjectResponse.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new afn.libautobus.protocol.Protobuf.WatchObjectResponse();
        return builder;
      }
      
      protected afn.libautobus.protocol.Protobuf.WatchObjectResponse internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new afn.libautobus.protocol.Protobuf.WatchObjectResponse();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return afn.libautobus.protocol.Protobuf.WatchObjectResponse.getDescriptor();
      }
      
      public afn.libautobus.protocol.Protobuf.WatchObjectResponse getDefaultInstanceForType() {
        return afn.libautobus.protocol.Protobuf.WatchObjectResponse.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public afn.libautobus.protocol.Protobuf.WatchObjectResponse build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private afn.libautobus.protocol.Protobuf.WatchObjectResponse buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public afn.libautobus.protocol.Protobuf.WatchObjectResponse buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        afn.libautobus.protocol.Protobuf.WatchObjectResponse returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof afn.libautobus.protocol.Protobuf.WatchObjectResponse) {
          return mergeFrom((afn.libautobus.protocol.Protobuf.WatchObjectResponse)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(afn.libautobus.protocol.Protobuf.WatchObjectResponse other) {
        if (other == afn.libautobus.protocol.Protobuf.WatchObjectResponse.getDefaultInstance()) return this;
        if (other.hasInterfaceName()) {
          setInterfaceName(other.getInterfaceName());
        }
        if (other.hasObjectName()) {
          setObjectName(other.getObjectName());
        }
        if (other.hasValue()) {
          mergeValue(other.getValue());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 10: {
              setInterfaceName(input.readString());
              break;
            }
            case 18: {
              setObjectName(input.readString());
              break;
            }
            case 26: {
              afn.libautobus.protocol.Protobuf.Instance.Builder subBuilder = afn.libautobus.protocol.Protobuf.Instance.newBuilder();
              if (hasValue()) {
                subBuilder.mergeFrom(getValue());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setValue(subBuilder.buildPartial());
              break;
            }
          }
        }
      }
      
      
      // required string interface_name = 1;
      public boolean hasInterfaceName() {
        return result.hasInterfaceName();
      }
      public java.lang.String getInterfaceName() {
        return result.getInterfaceName();
      }
      public Builder setInterfaceName(java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasInterfaceName = true;
        result.interfaceName_ = value;
        return this;
      }
      public Builder clearInterfaceName() {
        result.hasInterfaceName = false;
        result.interfaceName_ = getDefaultInstance().getInterfaceName();
        return this;
      }
      
      // required string object_name = 2;
      public boolean hasObjectName() {
        return result.hasObjectName();
      }
      public java.lang.String getObjectName() {
        return result.getObjectName();
      }
      public Builder setObjectName(java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasObjectName = true;
        result.objectName_ = value;
        return this;
      }
      public Builder clearObjectName() {
        result.hasObjectName = false;
        result.objectName_ = getDefaultInstance().getObjectName();
        return this;
      }
      
      // required .Instance value = 3;
      public boolean hasValue() {
        return result.hasValue();
      }
      public afn.libautobus.protocol.Protobuf.Instance getValue() {
        return result.getValue();
      }
      public Builder setValue(afn.libautobus.protocol.Protobuf.Instance value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasValue = true;
        result.value_ = value;
        return this;
      }
      public Builder setValue(afn.libautobus.protocol.Protobuf.Instance.Builder builderForValue) {
        result.hasValue = true;
        result.value_ = builderForValue.build();
        return this;
      }
      public Builder mergeValue(afn.libautobus.protocol.Protobuf.Instance value) {
        if (result.hasValue() &&
            result.value_ != afn.libautobus.protocol.Protobuf.Instance.getDefaultInstance()) {
          result.value_ =
            afn.libautobus.protocol.Protobuf.Instance.newBuilder(result.value_).mergeFrom(value).buildPartial();
        } else {
          result.value_ = value;
        }
        result.hasValue = true;
        return this;
      }
      public Builder clearValue() {
        result.hasValue = false;
        result.value_ = afn.libautobus.protocol.Protobuf.Instance.getDefaultInstance();
        return this;
      }
    }
    
    static {
      afn.libautobus.protocol.Protobuf.getDescriptor();
    }
    
    static {
      afn.libautobus.protocol.Protobuf.internalForceInit();
    }
  }
  
  public static final class UnwatchObjectCommand extends
      com.google.protobuf.GeneratedMessage {
    // Use UnwatchObjectCommand.newBuilder() to construct.
    private UnwatchObjectCommand() {}
    
    private static final UnwatchObjectCommand defaultInstance = new UnwatchObjectCommand();
    public static UnwatchObjectCommand getDefaultInstance() {
      return defaultInstance;
    }
    
    public UnwatchObjectCommand getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return afn.libautobus.protocol.Protobuf.internal_static_UnwatchObjectCommand_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return afn.libautobus.protocol.Protobuf.internal_static_UnwatchObjectCommand_fieldAccessorTable;
    }
    
    // required string interface_name = 1;
    public static final int INTERFACE_NAME_FIELD_NUMBER = 1;
    private boolean hasInterfaceName;
    private java.lang.String interfaceName_ = "";
    public boolean hasInterfaceName() { return hasInterfaceName; }
    public java.lang.String getInterfaceName() { return interfaceName_; }
    
    // required string object_name = 2;
    public static final int OBJECT_NAME_FIELD_NUMBER = 2;
    private boolean hasObjectName;
    private java.lang.String objectName_ = "";
    public boolean hasObjectName() { return hasObjectName; }
    public java.lang.String getObjectName() { return objectName_; }
    
    public final boolean isInitialized() {
      if (!hasInterfaceName) return false;
      if (!hasObjectName) return false;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (hasInterfaceName()) {
        output.writeString(1, getInterfaceName());
      }
      if (hasObjectName()) {
        output.writeString(2, getObjectName());
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (hasInterfaceName()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(1, getInterfaceName());
      }
      if (hasObjectName()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(2, getObjectName());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static afn.libautobus.protocol.Protobuf.UnwatchObjectCommand parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static afn.libautobus.protocol.Protobuf.UnwatchObjectCommand parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static afn.libautobus.protocol.Protobuf.UnwatchObjectCommand parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static afn.libautobus.protocol.Protobuf.UnwatchObjectCommand parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static afn.libautobus.protocol.Protobuf.UnwatchObjectCommand parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static afn.libautobus.protocol.Protobuf.UnwatchObjectCommand parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static afn.libautobus.protocol.Protobuf.UnwatchObjectCommand parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeDelimitedFrom(input).buildParsed();
    }
    public static afn.libautobus.protocol.Protobuf.UnwatchObjectCommand parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeDelimitedFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static afn.libautobus.protocol.Protobuf.UnwatchObjectCommand parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static afn.libautobus.protocol.Protobuf.UnwatchObjectCommand parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(afn.libautobus.protocol.Protobuf.UnwatchObjectCommand prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private afn.libautobus.protocol.Protobuf.UnwatchObjectCommand result;
      
      // Construct using afn.libautobus.protocol.Protobuf.UnwatchObjectCommand.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new afn.libautobus.protocol.Protobuf.UnwatchObjectCommand();
        return builder;
      }
      
      protected afn.libautobus.protocol.Protobuf.UnwatchObjectCommand internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new afn.libautobus.protocol.Protobuf.UnwatchObjectCommand();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return afn.libautobus.protocol.Protobuf.UnwatchObjectCommand.getDescriptor();
      }
      
      public afn.libautobus.protocol.Protobuf.UnwatchObjectCommand getDefaultInstanceForType() {
        return afn.libautobus.protocol.Protobuf.UnwatchObjectCommand.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public afn.libautobus.protocol.Protobuf.UnwatchObjectCommand build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private afn.libautobus.protocol.Protobuf.UnwatchObjectCommand buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public afn.libautobus.protocol.Protobuf.UnwatchObjectCommand buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        afn.libautobus.protocol.Protobuf.UnwatchObjectCommand returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof afn.libautobus.protocol.Protobuf.UnwatchObjectCommand) {
          return mergeFrom((afn.libautobus.protocol.Protobuf.UnwatchObjectCommand)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(afn.libautobus.protocol.Protobuf.UnwatchObjectCommand other) {
        if (other == afn.libautobus.protocol.Protobuf.UnwatchObjectCommand.getDefaultInstance()) return this;
        if (other.hasInterfaceName()) {
          setInterfaceName(other.getInterfaceName());
        }
        if (other.hasObjectName()) {
          setObjectName(other.getObjectName());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 10: {
              setInterfaceName(input.readString());
              break;
            }
            case 18: {
              setObjectName(input.readString());
              break;
            }
          }
        }
      }
      
      
      // required string interface_name = 1;
      public boolean hasInterfaceName() {
        return result.hasInterfaceName();
      }
      public java.lang.String getInterfaceName() {
        return result.getInterfaceName();
      }
      public Builder setInterfaceName(java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasInterfaceName = true;
        result.interfaceName_ = value;
        return this;
      }
      public Builder clearInterfaceName() {
        result.hasInterfaceName = false;
        result.interfaceName_ = getDefaultInstance().getInterfaceName();
        return this;
      }
      
      // required string object_name = 2;
      public boolean hasObjectName() {
        return result.hasObjectName();
      }
      public java.lang.String getObjectName() {
        return result.getObjectName();
      }
      public Builder setObjectName(java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasObjectName = true;
        result.objectName_ = value;
        return this;
      }
      public Builder clearObjectName() {
        result.hasObjectName = false;
        result.objectName_ = getDefaultInstance().getObjectName();
        return this;
      }
    }
    
    static {
      afn.libautobus.protocol.Protobuf.getDescriptor();
    }
    
    static {
      afn.libautobus.protocol.Protobuf.internalForceInit();
    }
  }
  
  public static final class UnwatchObjectResponse extends
      com.google.protobuf.GeneratedMessage {
    // Use UnwatchObjectResponse.newBuilder() to construct.
    private UnwatchObjectResponse() {}
    
    private static final UnwatchObjectResponse defaultInstance = new UnwatchObjectResponse();
    public static UnwatchObjectResponse getDefaultInstance() {
      return defaultInstance;
    }
    
    public UnwatchObjectResponse getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return afn.libautobus.protocol.Protobuf.internal_static_UnwatchObjectResponse_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return afn.libautobus.protocol.Protobuf.internal_static_UnwatchObjectResponse_fieldAccessorTable;
    }
    
    // required string interface_name = 1;
    public static final int INTERFACE_NAME_FIELD_NUMBER = 1;
    private boolean hasInterfaceName;
    private java.lang.String interfaceName_ = "";
    public boolean hasInterfaceName() { return hasInterfaceName; }
    public java.lang.String getInterfaceName() { return interfaceName_; }
    
    // required string object_name = 2;
    public static final int OBJECT_NAME_FIELD_NUMBER = 2;
    private boolean hasObjectName;
    private java.lang.String objectName_ = "";
    public boolean hasObjectName() { return hasObjectName; }
    public java.lang.String getObjectName() { return objectName_; }
    
    public final boolean isInitialized() {
      if (!hasInterfaceName) return false;
      if (!hasObjectName) return false;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (hasInterfaceName()) {
        output.writeString(1, getInterfaceName());
      }
      if (hasObjectName()) {
        output.writeString(2, getObjectName());
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (hasInterfaceName()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(1, getInterfaceName());
      }
      if (hasObjectName()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(2, getObjectName());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static afn.libautobus.protocol.Protobuf.UnwatchObjectResponse parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static afn.libautobus.protocol.Protobuf.UnwatchObjectResponse parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static afn.libautobus.protocol.Protobuf.UnwatchObjectResponse parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static afn.libautobus.protocol.Protobuf.UnwatchObjectResponse parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static afn.libautobus.protocol.Protobuf.UnwatchObjectResponse parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static afn.libautobus.protocol.Protobuf.UnwatchObjectResponse parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static afn.libautobus.protocol.Protobuf.UnwatchObjectResponse parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeDelimitedFrom(input).buildParsed();
    }
    public static afn.libautobus.protocol.Protobuf.UnwatchObjectResponse parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeDelimitedFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static afn.libautobus.protocol.Protobuf.UnwatchObjectResponse parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static afn.libautobus.protocol.Protobuf.UnwatchObjectResponse parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(afn.libautobus.protocol.Protobuf.UnwatchObjectResponse prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private afn.libautobus.protocol.Protobuf.UnwatchObjectResponse result;
      
      // Construct using afn.libautobus.protocol.Protobuf.UnwatchObjectResponse.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new afn.libautobus.protocol.Protobuf.UnwatchObjectResponse();
        return builder;
      }
      
      protected afn.libautobus.protocol.Protobuf.UnwatchObjectResponse internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new afn.libautobus.protocol.Protobuf.UnwatchObjectResponse();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return afn.libautobus.protocol.Protobuf.UnwatchObjectResponse.getDescriptor();
      }
      
      public afn.libautobus.protocol.Protobuf.UnwatchObjectResponse getDefaultInstanceForType() {
        return afn.libautobus.protocol.Protobuf.UnwatchObjectResponse.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public afn.libautobus.protocol.Protobuf.UnwatchObjectResponse build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private afn.libautobus.protocol.Protobuf.UnwatchObjectResponse buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public afn.libautobus.protocol.Protobuf.UnwatchObjectResponse buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        afn.libautobus.protocol.Protobuf.UnwatchObjectResponse returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof afn.libautobus.protocol.Protobuf.UnwatchObjectResponse) {
          return mergeFrom((afn.libautobus.protocol.Protobuf.UnwatchObjectResponse)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(afn.libautobus.protocol.Protobuf.UnwatchObjectResponse other) {
        if (other == afn.libautobus.protocol.Protobuf.UnwatchObjectResponse.getDefaultInstance()) return this;
        if (other.hasInterfaceName()) {
          setInterfaceName(other.getInterfaceName());
        }
        if (other.hasObjectName()) {
          setObjectName(other.getObjectName());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 10: {
              setInterfaceName(input.readString());
              break;
            }
            case 18: {
              setObjectName(input.readString());
              break;
            }
          }
        }
      }
      
      
      // required string interface_name = 1;
      public boolean hasInterfaceName() {
        return result.hasInterfaceName();
      }
      public java.lang.String getInterfaceName() {
        return result.getInterfaceName();
      }
      public Builder setInterfaceName(java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasInterfaceName = true;
        result.interfaceName_ = value;
        return this;
      }
      public Builder clearInterfaceName() {
        result.hasInterfaceName = false;
        result.interfaceName_ = getDefaultInstance().getInterfaceName();
        return this;
      }
      
      // required string object_name = 2;
      public boolean hasObjectName() {
        return result.hasObjectName();
      }
      public java.lang.String getObjectName() {
        return result.getObjectName();
      }
      public Builder setObjectName(java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasObjectName = true;
        result.objectName_ = value;
        return this;
      }
      public Builder clearObjectName() {
        result.hasObjectName = false;
        result.objectName_ = getDefaultInstance().getObjectName();
        return this;
      }
    }
    
    static {
      afn.libautobus.protocol.Protobuf.getDescriptor();
    }
    
    static {
      afn.libautobus.protocol.Protobuf.internalForceInit();
    }
  }
  
  public static final class SetObjectCommand extends
      com.google.protobuf.GeneratedMessage {
    // Use SetObjectCommand.newBuilder() to construct.
    private SetObjectCommand() {}
    
    private static final SetObjectCommand defaultInstance = new SetObjectCommand();
    public static SetObjectCommand getDefaultInstance() {
      return defaultInstance;
    }
    
    public SetObjectCommand getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return afn.libautobus.protocol.Protobuf.internal_static_SetObjectCommand_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return afn.libautobus.protocol.Protobuf.internal_static_SetObjectCommand_fieldAccessorTable;
    }
    
    // required string interface_name = 1;
    public static final int INTERFACE_NAME_FIELD_NUMBER = 1;
    private boolean hasInterfaceName;
    private java.lang.String interfaceName_ = "";
    public boolean hasInterfaceName() { return hasInterfaceName; }
    public java.lang.String getInterfaceName() { return interfaceName_; }
    
    // required string object_name = 2;
    public static final int OBJECT_NAME_FIELD_NUMBER = 2;
    private boolean hasObjectName;
    private java.lang.String objectName_ = "";
    public boolean hasObjectName() { return hasObjectName; }
    public java.lang.String getObjectName() { return objectName_; }
    
    // required .Instance value = 4;
    public static final int VALUE_FIELD_NUMBER = 4;
    private boolean hasValue;
    private afn.libautobus.protocol.Protobuf.Instance value_ = afn.libautobus.protocol.Protobuf.Instance.getDefaultInstance();
    public boolean hasValue() { return hasValue; }
    public afn.libautobus.protocol.Protobuf.Instance getValue() { return value_; }
    
    public final boolean isInitialized() {
      if (!hasInterfaceName) return false;
      if (!hasObjectName) return false;
      if (!hasValue) return false;
      if (!getValue().isInitialized()) return false;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (hasInterfaceName()) {
        output.writeString(1, getInterfaceName());
      }
      if (hasObjectName()) {
        output.writeString(2, getObjectName());
      }
      if (hasValue()) {
        output.writeMessage(4, getValue());
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (hasInterfaceName()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(1, getInterfaceName());
      }
      if (hasObjectName()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(2, getObjectName());
      }
      if (hasValue()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, getValue());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static afn.libautobus.protocol.Protobuf.SetObjectCommand parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static afn.libautobus.protocol.Protobuf.SetObjectCommand parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static afn.libautobus.protocol.Protobuf.SetObjectCommand parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static afn.libautobus.protocol.Protobuf.SetObjectCommand parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static afn.libautobus.protocol.Protobuf.SetObjectCommand parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static afn.libautobus.protocol.Protobuf.SetObjectCommand parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static afn.libautobus.protocol.Protobuf.SetObjectCommand parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeDelimitedFrom(input).buildParsed();
    }
    public static afn.libautobus.protocol.Protobuf.SetObjectCommand parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeDelimitedFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static afn.libautobus.protocol.Protobuf.SetObjectCommand parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static afn.libautobus.protocol.Protobuf.SetObjectCommand parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(afn.libautobus.protocol.Protobuf.SetObjectCommand prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private afn.libautobus.protocol.Protobuf.SetObjectCommand result;
      
      // Construct using afn.libautobus.protocol.Protobuf.SetObjectCommand.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new afn.libautobus.protocol.Protobuf.SetObjectCommand();
        return builder;
      }
      
      protected afn.libautobus.protocol.Protobuf.SetObjectCommand internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new afn.libautobus.protocol.Protobuf.SetObjectCommand();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return afn.libautobus.protocol.Protobuf.SetObjectCommand.getDescriptor();
      }
      
      public afn.libautobus.protocol.Protobuf.SetObjectCommand getDefaultInstanceForType() {
        return afn.libautobus.protocol.Protobuf.SetObjectCommand.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public afn.libautobus.protocol.Protobuf.SetObjectCommand build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private afn.libautobus.protocol.Protobuf.SetObjectCommand buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public afn.libautobus.protocol.Protobuf.SetObjectCommand buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        afn.libautobus.protocol.Protobuf.SetObjectCommand returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof afn.libautobus.protocol.Protobuf.SetObjectCommand) {
          return mergeFrom((afn.libautobus.protocol.Protobuf.SetObjectCommand)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(afn.libautobus.protocol.Protobuf.SetObjectCommand other) {
        if (other == afn.libautobus.protocol.Protobuf.SetObjectCommand.getDefaultInstance()) return this;
        if (other.hasInterfaceName()) {
          setInterfaceName(other.getInterfaceName());
        }
        if (other.hasObjectName()) {
          setObjectName(other.getObjectName());
        }
        if (other.hasValue()) {
          mergeValue(other.getValue());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 10: {
              setInterfaceName(input.readString());
              break;
            }
            case 18: {
              setObjectName(input.readString());
              break;
            }
            case 34: {
              afn.libautobus.protocol.Protobuf.Instance.Builder subBuilder = afn.libautobus.protocol.Protobuf.Instance.newBuilder();
              if (hasValue()) {
                subBuilder.mergeFrom(getValue());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setValue(subBuilder.buildPartial());
              break;
            }
          }
        }
      }
      
      
      // required string interface_name = 1;
      public boolean hasInterfaceName() {
        return result.hasInterfaceName();
      }
      public java.lang.String getInterfaceName() {
        return result.getInterfaceName();
      }
      public Builder setInterfaceName(java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasInterfaceName = true;
        result.interfaceName_ = value;
        return this;
      }
      public Builder clearInterfaceName() {
        result.hasInterfaceName = false;
        result.interfaceName_ = getDefaultInstance().getInterfaceName();
        return this;
      }
      
      // required string object_name = 2;
      public boolean hasObjectName() {
        return result.hasObjectName();
      }
      public java.lang.String getObjectName() {
        return result.getObjectName();
      }
      public Builder setObjectName(java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasObjectName = true;
        result.objectName_ = value;
        return this;
      }
      public Builder clearObjectName() {
        result.hasObjectName = false;
        result.objectName_ = getDefaultInstance().getObjectName();
        return this;
      }
      
      // required .Instance value = 4;
      public boolean hasValue() {
        return result.hasValue();
      }
      public afn.libautobus.protocol.Protobuf.Instance getValue() {
        return result.getValue();
      }
      public Builder setValue(afn.libautobus.protocol.Protobuf.Instance value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasValue = true;
        result.value_ = value;
        return this;
      }
      public Builder setValue(afn.libautobus.protocol.Protobuf.Instance.Builder builderForValue) {
        result.hasValue = true;
        result.value_ = builderForValue.build();
        return this;
      }
      public Builder mergeValue(afn.libautobus.protocol.Protobuf.Instance value) {
        if (result.hasValue() &&
            result.value_ != afn.libautobus.protocol.Protobuf.Instance.getDefaultInstance()) {
          result.value_ =
            afn.libautobus.protocol.Protobuf.Instance.newBuilder(result.value_).mergeFrom(value).buildPartial();
        } else {
          result.value_ = value;
        }
        result.hasValue = true;
        return this;
      }
      public Builder clearValue() {
        result.hasValue = false;
        result.value_ = afn.libautobus.protocol.Protobuf.Instance.getDefaultInstance();
        return this;
      }
    }
    
    static {
      afn.libautobus.protocol.Protobuf.getDescriptor();
    }
    
    static {
      afn.libautobus.protocol.Protobuf.internalForceInit();
    }
  }
  
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_MapEntry_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_MapEntry_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_StructEntry_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_StructEntry_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_Instance_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_Instance_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_IntegerInstance_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_IntegerInstance_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_LongInstance_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_LongInstance_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_DoubleInstance_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_DoubleInstance_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_StringInstance_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_StringInstance_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_TimestampInstance_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_TimestampInstance_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_NullInstance_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_NullInstance_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_ListInstance_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_ListInstance_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_MapInstance_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_MapInstance_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_StructInstance_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_StructInstance_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_ExceptionInstance_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_ExceptionInstance_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_BoolInstance_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_BoolInstance_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_Message_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_Message_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_RegisterInterfaceCommand_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_RegisterInterfaceCommand_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_RegisterInterfaceResponse_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_RegisterInterfaceResponse_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_RegisterFunctionCommand_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_RegisterFunctionCommand_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_RegisterFunctionResponse_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_RegisterFunctionResponse_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_CallFunctionCommand_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CallFunctionCommand_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_CallFunctionResponse_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CallFunctionResponse_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_RunFunctionCommand_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_RunFunctionCommand_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_RunFunctionResponse_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_RunFunctionResponse_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_ErrorResponse_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_ErrorResponse_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_RegisterEventCommand_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_RegisterEventCommand_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_RegisterEventResponse_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_RegisterEventResponse_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_RegisterListenerCommand_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_RegisterListenerCommand_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_RegisterListenerResponse_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_RegisterListenerResponse_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_DeregisterListenerCommand_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_DeregisterListenerCommand_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_DeregisterListenerResponse_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_DeregisterListenerResponse_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_FireEventCommand_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_FireEventCommand_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_RegisterObjectCommand_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_RegisterObjectCommand_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_RegisterObjectResponse_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_RegisterObjectResponse_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_WatchObjectCommand_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_WatchObjectCommand_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_WatchObjectResponse_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_WatchObjectResponse_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_UnwatchObjectCommand_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_UnwatchObjectCommand_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_UnwatchObjectResponse_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_UnwatchObjectResponse_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_SetObjectCommand_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_SetObjectCommand_fieldAccessorTable;
  
  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\rautobus.proto\"<\n\010MapEntry\022\026\n\003key\030\001 \002(\013" +
      "2\t.Instance\022\030\n\005value\030\002 \002(\0132\t.Instance\"4\n" +
      "\013StructEntry\022\013\n\003key\030\001 \002(\t\022\030\n\005value\030\002 \002(\013" +
      "2\t.Instance\"\204\003\n\010Instance\022 \n\006value1\030\001 \001(\013" +
      "2\020.IntegerInstance\022\035\n\006value2\030\002 \001(\0132\r.Lon" +
      "gInstance\022\037\n\006value3\030\003 \001(\0132\017.DoubleInstan" +
      "ce\022\037\n\006value4\030\004 \001(\0132\017.StringInstance\022\"\n\006v" +
      "alue5\030\005 \001(\0132\022.TimestampInstance\022\035\n\006value" +
      "6\030\006 \001(\0132\r.NullInstance\022\035\n\006value7\030\007 \001(\0132\r" +
      ".ListInstance\022\034\n\006value8\030\010 \001(\0132\014.MapInsta",
      "nce\022\037\n\006value9\030\t \001(\0132\017.StructInstance\022#\n\007" +
      "value10\030\n \001(\0132\022.ExceptionInstance\022\036\n\007val" +
      "ue11\030\013 \001(\0132\r.BoolInstance\022\017\n\007value_n\030d \002" +
      "(\t\" \n\017IntegerInstance\022\r\n\005value\030\001 \002(\007\"\035\n\014" +
      "LongInstance\022\r\n\005value\030\001 \002(\006\"\037\n\016DoubleIns" +
      "tance\022\r\n\005value\030\001 \002(\001\"\037\n\016StringInstance\022\r" +
      "\n\005value\030\001 \002(\t\"\200\001\n\021TimestampInstance\022\014\n\004y" +
      "ear\030\001 \002(\007\022\r\n\005month\030\002 \002(\007\022\013\n\003day\030\003 \002(\007\022\014\n" +
      "\004hour\030\004 \002(\007\022\016\n\006minute\030\005 \002(\007\022\016\n\006second\030\006 " +
      "\002(\007\022\023\n\013millisecond\030\007 \002(\007\"\016\n\014NullInstance",
      "\"(\n\014ListInstance\022\030\n\005value\030\001 \003(\0132\t.Instan" +
      "ce\"\'\n\013MapInstance\022\030\n\005value\030\001 \003(\0132\t.MapEn" +
      "try\";\n\016StructInstance\022\014\n\004name\030\001 \002(\t\022\033\n\005v" +
      "alue\030\002 \003(\0132\014.StructEntry\"!\n\021ExceptionIns" +
      "tance\022\014\n\004text\030\001 \001(\t\"\035\n\014BoolInstance\022\r\n\005v" +
      "alue\030\001 \002(\010\"\343\007\n\007Message\022\024\n\014message_type\030\001" +
      " \002(\007\022\022\n\nmessage_id\030< \002(\006\022)\n\006value2\030\002 \001(\013" +
      "2\031.RegisterInterfaceCommand\022*\n\006value3\030\003 " +
      "\001(\0132\032.RegisterInterfaceResponse\022(\n\006value" +
      "4\030\004 \001(\0132\030.RegisterFunctionCommand\022)\n\006val",
      "ue5\030\005 \001(\0132\031.RegisterFunctionResponse\022$\n\006" +
      "value6\030\006 \001(\0132\024.CallFunctionCommand\022%\n\006va" +
      "lue7\030\007 \001(\0132\025.CallFunctionResponse\022#\n\006val" +
      "ue8\030\010 \001(\0132\023.RunFunctionCommand\022$\n\006value9" +
      "\030\t \001(\0132\024.RunFunctionResponse\022\037\n\007value10\030" +
      "\n \001(\0132\016.ErrorResponse\022&\n\007value11\030\013 \001(\0132\025" +
      ".RegisterEventCommand\022\'\n\007value12\030\014 \001(\0132\026" +
      ".RegisterEventResponse\022)\n\007value13\030\r \001(\0132" +
      "\030.RegisterListenerCommand\022)\n\007value14\030\016 \001" +
      "(\0132\030.RegisterListenerCommand\022+\n\007value15\030",
      "\017 \001(\0132\032.DeregisterListenerCommand\022,\n\007val" +
      "ue16\030\020 \001(\0132\033.DeregisterListenerResponse\022" +
      "\"\n\007value17\030\021 \001(\0132\021.FireEventCommand\022\'\n\007v" +
      "alue19\030\023 \001(\0132\026.RegisterObjectCommand\022(\n\007" +
      "value20\030\024 \001(\0132\027.RegisterObjectResponse\022$" +
      "\n\007value21\030\025 \001(\0132\023.WatchObjectCommand\022%\n\007" +
      "value22\030\026 \001(\0132\024.WatchObjectResponse\022&\n\007v" +
      "alue23\030\027 \001(\0132\025.UnwatchObjectCommand\022&\n\007v" +
      "alue24\030\030 \001(\0132\025.UnwatchObjectCommand\022\"\n\007v" +
      "alue25\030\031 \001(\0132\021.SetObjectCommand\022\017\n\007value",
      "_n\030d \002(\t\"5\n\030RegisterInterfaceCommand\022\014\n\004" +
      "name\030\001 \002(\t\022\013\n\003doc\030\003 \001(\t\"\033\n\031RegisterInter" +
      "faceResponse\"L\n\027RegisterFunctionCommand\022" +
      "\026\n\016interface_name\030\002 \002(\t\022\014\n\004name\030\003 \003(\t\022\013\n" +
      "\003doc\030\004 \003(\t\"\032\n\030RegisterFunctionResponse\"]" +
      "\n\023CallFunctionCommand\022\026\n\016interface_name\030" +
      "\002 \001(\t\022\020\n\010function\030\003 \002(\t\022\034\n\targuments\030\004 \003" +
      "(\0132\t.Instance\"7\n\024CallFunctionResponse\022\037\n" +
      "\014return_value\030\001 \002(\0132\t.Instance\"\\\n\022RunFun" +
      "ctionCommand\022\026\n\016interface_name\030\002 \002(\t\022\020\n\010",
      "function\030\003 \002(\t\022\034\n\targuments\030\004 \003(\0132\t.Inst" +
      "ance\"6\n\023RunFunctionResponse\022\037\n\014return_va" +
      "lue\030\001 \002(\0132\t.Instance\"\035\n\rErrorResponse\022\014\n" +
      "\004text\030\001 \001(\t\"O\n\024RegisterEventCommand\022\026\n\016i" +
      "nterface_name\030\001 \002(\t\022\022\n\nevent_name\030\002 \002(\t\022" +
      "\013\n\003doc\030\003 \001(\t\"\027\n\025RegisterEventResponse\"E\n" +
      "\027RegisterListenerCommand\022\026\n\016interface_na" +
      "me\030\001 \002(\t\022\022\n\nevent_name\030\002 \002(\t\"\032\n\030Register" +
      "ListenerResponse\"G\n\031DeregisterListenerCo" +
      "mmand\022\026\n\016interface_name\030\001 \002(\t\022\022\n\nevent_n",
      "ame\030\002 \002(\t\"\034\n\032DeregisterListenerResponse\"" +
      "\\\n\020FireEventCommand\022\026\n\016interface_name\030\001 " +
      "\002(\t\022\022\n\nevent_name\030\002 \002(\t\022\034\n\targuments\030\004 \003" +
      "(\0132\t.Instance\"k\n\025RegisterObjectCommand\022\026" +
      "\n\016interface_name\030\001 \002(\t\022\023\n\013object_name\030\002 " +
      "\002(\t\022\013\n\003doc\030\003 \001(\t\022\030\n\005value\030\004 \002(\0132\t.Instan" +
      "ce\"\030\n\026RegisterObjectResponse\"A\n\022WatchObj" +
      "ectCommand\022\026\n\016interface_name\030\001 \002(\t\022\023\n\013ob" +
      "ject_name\030\002 \002(\t\"\\\n\023WatchObjectResponse\022\026" +
      "\n\016interface_name\030\001 \002(\t\022\023\n\013object_name\030\002 ",
      "\002(\t\022\030\n\005value\030\003 \002(\0132\t.Instance\"C\n\024Unwatch" +
      "ObjectCommand\022\026\n\016interface_name\030\001 \002(\t\022\023\n" +
      "\013object_name\030\002 \002(\t\"D\n\025UnwatchObjectRespo" +
      "nse\022\026\n\016interface_name\030\001 \002(\t\022\023\n\013object_na" +
      "me\030\002 \002(\t\"Y\n\020SetObjectCommand\022\026\n\016interfac" +
      "e_name\030\001 \002(\t\022\023\n\013object_name\030\002 \002(\t\022\030\n\005val" +
      "ue\030\004 \002(\0132\t.InstanceB#\n\027afn.libautobus.pr" +
      "otocolB\010Protobuf"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
      new com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner() {
        public com.google.protobuf.ExtensionRegistry assignDescriptors(
            com.google.protobuf.Descriptors.FileDescriptor root) {
          descriptor = root;
          internal_static_MapEntry_descriptor =
            getDescriptor().getMessageTypes().get(0);
          internal_static_MapEntry_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_MapEntry_descriptor,
              new java.lang.String[] { "Key", "Value", },
              afn.libautobus.protocol.Protobuf.MapEntry.class,
              afn.libautobus.protocol.Protobuf.MapEntry.Builder.class);
          internal_static_StructEntry_descriptor =
            getDescriptor().getMessageTypes().get(1);
          internal_static_StructEntry_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_StructEntry_descriptor,
              new java.lang.String[] { "Key", "Value", },
              afn.libautobus.protocol.Protobuf.StructEntry.class,
              afn.libautobus.protocol.Protobuf.StructEntry.Builder.class);
          internal_static_Instance_descriptor =
            getDescriptor().getMessageTypes().get(2);
          internal_static_Instance_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_Instance_descriptor,
              new java.lang.String[] { "Value1", "Value2", "Value3", "Value4", "Value5", "Value6", "Value7", "Value8", "Value9", "Value10", "Value11", "ValueN", },
              afn.libautobus.protocol.Protobuf.Instance.class,
              afn.libautobus.protocol.Protobuf.Instance.Builder.class);
          internal_static_IntegerInstance_descriptor =
            getDescriptor().getMessageTypes().get(3);
          internal_static_IntegerInstance_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_IntegerInstance_descriptor,
              new java.lang.String[] { "Value", },
              afn.libautobus.protocol.Protobuf.IntegerInstance.class,
              afn.libautobus.protocol.Protobuf.IntegerInstance.Builder.class);
          internal_static_LongInstance_descriptor =
            getDescriptor().getMessageTypes().get(4);
          internal_static_LongInstance_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_LongInstance_descriptor,
              new java.lang.String[] { "Value", },
              afn.libautobus.protocol.Protobuf.LongInstance.class,
              afn.libautobus.protocol.Protobuf.LongInstance.Builder.class);
          internal_static_DoubleInstance_descriptor =
            getDescriptor().getMessageTypes().get(5);
          internal_static_DoubleInstance_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_DoubleInstance_descriptor,
              new java.lang.String[] { "Value", },
              afn.libautobus.protocol.Protobuf.DoubleInstance.class,
              afn.libautobus.protocol.Protobuf.DoubleInstance.Builder.class);
          internal_static_StringInstance_descriptor =
            getDescriptor().getMessageTypes().get(6);
          internal_static_StringInstance_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_StringInstance_descriptor,
              new java.lang.String[] { "Value", },
              afn.libautobus.protocol.Protobuf.StringInstance.class,
              afn.libautobus.protocol.Protobuf.StringInstance.Builder.class);
          internal_static_TimestampInstance_descriptor =
            getDescriptor().getMessageTypes().get(7);
          internal_static_TimestampInstance_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_TimestampInstance_descriptor,
              new java.lang.String[] { "Year", "Month", "Day", "Hour", "Minute", "Second", "Millisecond", },
              afn.libautobus.protocol.Protobuf.TimestampInstance.class,
              afn.libautobus.protocol.Protobuf.TimestampInstance.Builder.class);
          internal_static_NullInstance_descriptor =
            getDescriptor().getMessageTypes().get(8);
          internal_static_NullInstance_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_NullInstance_descriptor,
              new java.lang.String[] { },
              afn.libautobus.protocol.Protobuf.NullInstance.class,
              afn.libautobus.protocol.Protobuf.NullInstance.Builder.class);
          internal_static_ListInstance_descriptor =
            getDescriptor().getMessageTypes().get(9);
          internal_static_ListInstance_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_ListInstance_descriptor,
              new java.lang.String[] { "Value", },
              afn.libautobus.protocol.Protobuf.ListInstance.class,
              afn.libautobus.protocol.Protobuf.ListInstance.Builder.class);
          internal_static_MapInstance_descriptor =
            getDescriptor().getMessageTypes().get(10);
          internal_static_MapInstance_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_MapInstance_descriptor,
              new java.lang.String[] { "Value", },
              afn.libautobus.protocol.Protobuf.MapInstance.class,
              afn.libautobus.protocol.Protobuf.MapInstance.Builder.class);
          internal_static_StructInstance_descriptor =
            getDescriptor().getMessageTypes().get(11);
          internal_static_StructInstance_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_StructInstance_descriptor,
              new java.lang.String[] { "Name", "Value", },
              afn.libautobus.protocol.Protobuf.StructInstance.class,
              afn.libautobus.protocol.Protobuf.StructInstance.Builder.class);
          internal_static_ExceptionInstance_descriptor =
            getDescriptor().getMessageTypes().get(12);
          internal_static_ExceptionInstance_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_ExceptionInstance_descriptor,
              new java.lang.String[] { "Text", },
              afn.libautobus.protocol.Protobuf.ExceptionInstance.class,
              afn.libautobus.protocol.Protobuf.ExceptionInstance.Builder.class);
          internal_static_BoolInstance_descriptor =
            getDescriptor().getMessageTypes().get(13);
          internal_static_BoolInstance_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_BoolInstance_descriptor,
              new java.lang.String[] { "Value", },
              afn.libautobus.protocol.Protobuf.BoolInstance.class,
              afn.libautobus.protocol.Protobuf.BoolInstance.Builder.class);
          internal_static_Message_descriptor =
            getDescriptor().getMessageTypes().get(14);
          internal_static_Message_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_Message_descriptor,
              new java.lang.String[] { "MessageType", "MessageId", "Value2", "Value3", "Value4", "Value5", "Value6", "Value7", "Value8", "Value9", "Value10", "Value11", "Value12", "Value13", "Value14", "Value15", "Value16", "Value17", "Value19", "Value20", "Value21", "Value22", "Value23", "Value24", "Value25", "ValueN", },
              afn.libautobus.protocol.Protobuf.Message.class,
              afn.libautobus.protocol.Protobuf.Message.Builder.class);
          internal_static_RegisterInterfaceCommand_descriptor =
            getDescriptor().getMessageTypes().get(15);
          internal_static_RegisterInterfaceCommand_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_RegisterInterfaceCommand_descriptor,
              new java.lang.String[] { "Name", "Doc", },
              afn.libautobus.protocol.Protobuf.RegisterInterfaceCommand.class,
              afn.libautobus.protocol.Protobuf.RegisterInterfaceCommand.Builder.class);
          internal_static_RegisterInterfaceResponse_descriptor =
            getDescriptor().getMessageTypes().get(16);
          internal_static_RegisterInterfaceResponse_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_RegisterInterfaceResponse_descriptor,
              new java.lang.String[] { },
              afn.libautobus.protocol.Protobuf.RegisterInterfaceResponse.class,
              afn.libautobus.protocol.Protobuf.RegisterInterfaceResponse.Builder.class);
          internal_static_RegisterFunctionCommand_descriptor =
            getDescriptor().getMessageTypes().get(17);
          internal_static_RegisterFunctionCommand_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_RegisterFunctionCommand_descriptor,
              new java.lang.String[] { "InterfaceName", "Name", "Doc", },
              afn.libautobus.protocol.Protobuf.RegisterFunctionCommand.class,
              afn.libautobus.protocol.Protobuf.RegisterFunctionCommand.Builder.class);
          internal_static_RegisterFunctionResponse_descriptor =
            getDescriptor().getMessageTypes().get(18);
          internal_static_RegisterFunctionResponse_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_RegisterFunctionResponse_descriptor,
              new java.lang.String[] { },
              afn.libautobus.protocol.Protobuf.RegisterFunctionResponse.class,
              afn.libautobus.protocol.Protobuf.RegisterFunctionResponse.Builder.class);
          internal_static_CallFunctionCommand_descriptor =
            getDescriptor().getMessageTypes().get(19);
          internal_static_CallFunctionCommand_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_CallFunctionCommand_descriptor,
              new java.lang.String[] { "InterfaceName", "Function", "Arguments", },
              afn.libautobus.protocol.Protobuf.CallFunctionCommand.class,
              afn.libautobus.protocol.Protobuf.CallFunctionCommand.Builder.class);
          internal_static_CallFunctionResponse_descriptor =
            getDescriptor().getMessageTypes().get(20);
          internal_static_CallFunctionResponse_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_CallFunctionResponse_descriptor,
              new java.lang.String[] { "ReturnValue", },
              afn.libautobus.protocol.Protobuf.CallFunctionResponse.class,
              afn.libautobus.protocol.Protobuf.CallFunctionResponse.Builder.class);
          internal_static_RunFunctionCommand_descriptor =
            getDescriptor().getMessageTypes().get(21);
          internal_static_RunFunctionCommand_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_RunFunctionCommand_descriptor,
              new java.lang.String[] { "InterfaceName", "Function", "Arguments", },
              afn.libautobus.protocol.Protobuf.RunFunctionCommand.class,
              afn.libautobus.protocol.Protobuf.RunFunctionCommand.Builder.class);
          internal_static_RunFunctionResponse_descriptor =
            getDescriptor().getMessageTypes().get(22);
          internal_static_RunFunctionResponse_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_RunFunctionResponse_descriptor,
              new java.lang.String[] { "ReturnValue", },
              afn.libautobus.protocol.Protobuf.RunFunctionResponse.class,
              afn.libautobus.protocol.Protobuf.RunFunctionResponse.Builder.class);
          internal_static_ErrorResponse_descriptor =
            getDescriptor().getMessageTypes().get(23);
          internal_static_ErrorResponse_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_ErrorResponse_descriptor,
              new java.lang.String[] { "Text", },
              afn.libautobus.protocol.Protobuf.ErrorResponse.class,
              afn.libautobus.protocol.Protobuf.ErrorResponse.Builder.class);
          internal_static_RegisterEventCommand_descriptor =
            getDescriptor().getMessageTypes().get(24);
          internal_static_RegisterEventCommand_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_RegisterEventCommand_descriptor,
              new java.lang.String[] { "InterfaceName", "EventName", "Doc", },
              afn.libautobus.protocol.Protobuf.RegisterEventCommand.class,
              afn.libautobus.protocol.Protobuf.RegisterEventCommand.Builder.class);
          internal_static_RegisterEventResponse_descriptor =
            getDescriptor().getMessageTypes().get(25);
          internal_static_RegisterEventResponse_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_RegisterEventResponse_descriptor,
              new java.lang.String[] { },
              afn.libautobus.protocol.Protobuf.RegisterEventResponse.class,
              afn.libautobus.protocol.Protobuf.RegisterEventResponse.Builder.class);
          internal_static_RegisterListenerCommand_descriptor =
            getDescriptor().getMessageTypes().get(26);
          internal_static_RegisterListenerCommand_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_RegisterListenerCommand_descriptor,
              new java.lang.String[] { "InterfaceName", "EventName", },
              afn.libautobus.protocol.Protobuf.RegisterListenerCommand.class,
              afn.libautobus.protocol.Protobuf.RegisterListenerCommand.Builder.class);
          internal_static_RegisterListenerResponse_descriptor =
            getDescriptor().getMessageTypes().get(27);
          internal_static_RegisterListenerResponse_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_RegisterListenerResponse_descriptor,
              new java.lang.String[] { },
              afn.libautobus.protocol.Protobuf.RegisterListenerResponse.class,
              afn.libautobus.protocol.Protobuf.RegisterListenerResponse.Builder.class);
          internal_static_DeregisterListenerCommand_descriptor =
            getDescriptor().getMessageTypes().get(28);
          internal_static_DeregisterListenerCommand_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_DeregisterListenerCommand_descriptor,
              new java.lang.String[] { "InterfaceName", "EventName", },
              afn.libautobus.protocol.Protobuf.DeregisterListenerCommand.class,
              afn.libautobus.protocol.Protobuf.DeregisterListenerCommand.Builder.class);
          internal_static_DeregisterListenerResponse_descriptor =
            getDescriptor().getMessageTypes().get(29);
          internal_static_DeregisterListenerResponse_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_DeregisterListenerResponse_descriptor,
              new java.lang.String[] { },
              afn.libautobus.protocol.Protobuf.DeregisterListenerResponse.class,
              afn.libautobus.protocol.Protobuf.DeregisterListenerResponse.Builder.class);
          internal_static_FireEventCommand_descriptor =
            getDescriptor().getMessageTypes().get(30);
          internal_static_FireEventCommand_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_FireEventCommand_descriptor,
              new java.lang.String[] { "InterfaceName", "EventName", "Arguments", },
              afn.libautobus.protocol.Protobuf.FireEventCommand.class,
              afn.libautobus.protocol.Protobuf.FireEventCommand.Builder.class);
          internal_static_RegisterObjectCommand_descriptor =
            getDescriptor().getMessageTypes().get(31);
          internal_static_RegisterObjectCommand_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_RegisterObjectCommand_descriptor,
              new java.lang.String[] { "InterfaceName", "ObjectName", "Doc", "Value", },
              afn.libautobus.protocol.Protobuf.RegisterObjectCommand.class,
              afn.libautobus.protocol.Protobuf.RegisterObjectCommand.Builder.class);
          internal_static_RegisterObjectResponse_descriptor =
            getDescriptor().getMessageTypes().get(32);
          internal_static_RegisterObjectResponse_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_RegisterObjectResponse_descriptor,
              new java.lang.String[] { },
              afn.libautobus.protocol.Protobuf.RegisterObjectResponse.class,
              afn.libautobus.protocol.Protobuf.RegisterObjectResponse.Builder.class);
          internal_static_WatchObjectCommand_descriptor =
            getDescriptor().getMessageTypes().get(33);
          internal_static_WatchObjectCommand_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_WatchObjectCommand_descriptor,
              new java.lang.String[] { "InterfaceName", "ObjectName", },
              afn.libautobus.protocol.Protobuf.WatchObjectCommand.class,
              afn.libautobus.protocol.Protobuf.WatchObjectCommand.Builder.class);
          internal_static_WatchObjectResponse_descriptor =
            getDescriptor().getMessageTypes().get(34);
          internal_static_WatchObjectResponse_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_WatchObjectResponse_descriptor,
              new java.lang.String[] { "InterfaceName", "ObjectName", "Value", },
              afn.libautobus.protocol.Protobuf.WatchObjectResponse.class,
              afn.libautobus.protocol.Protobuf.WatchObjectResponse.Builder.class);
          internal_static_UnwatchObjectCommand_descriptor =
            getDescriptor().getMessageTypes().get(35);
          internal_static_UnwatchObjectCommand_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_UnwatchObjectCommand_descriptor,
              new java.lang.String[] { "InterfaceName", "ObjectName", },
              afn.libautobus.protocol.Protobuf.UnwatchObjectCommand.class,
              afn.libautobus.protocol.Protobuf.UnwatchObjectCommand.Builder.class);
          internal_static_UnwatchObjectResponse_descriptor =
            getDescriptor().getMessageTypes().get(36);
          internal_static_UnwatchObjectResponse_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_UnwatchObjectResponse_descriptor,
              new java.lang.String[] { "InterfaceName", "ObjectName", },
              afn.libautobus.protocol.Protobuf.UnwatchObjectResponse.class,
              afn.libautobus.protocol.Protobuf.UnwatchObjectResponse.Builder.class);
          internal_static_SetObjectCommand_descriptor =
            getDescriptor().getMessageTypes().get(37);
          internal_static_SetObjectCommand_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_SetObjectCommand_descriptor,
              new java.lang.String[] { "InterfaceName", "ObjectName", "Value", },
              afn.libautobus.protocol.Protobuf.SetObjectCommand.class,
              afn.libautobus.protocol.Protobuf.SetObjectCommand.Builder.class);
          return null;
        }
      };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        }, assigner);
  }
  
  public static void internalForceInit() {}
}
