=%SELFNICK% is an IRC bot. Use "%HELPCMD% about" for more info. Use "%HELPCMD% usinghelp" for information on how to use %SELFNICK%'s built-in help. You really should read that help topic before you read other help topics like "%HELPCMD% factoids". Also, if the channel you're at (if you're reading this at a channel) doesn't like spam, you might want to send "%HELPCMD%" in a private message to the bot directly.
about=%SELFNICK% is an IRC bot. The software it runs is JZBot (http://jzbot.googlecode.com). JZBot uses (a slightly modified version of) PircBot (http://jibble.org/pircbot.php) as its IRC library. For other libraries that it uses, see "%HELPCMD% credits".\n\
For a list of JZBot's main developers and authors, see "%HELPCMD% authors", and for a list of JZBot's factpack writers (both direct and indirect), see "%HELPCMD% packwriters".
factoids=Factoids are the main way to control the bot and actually make it do stuff useful. They are essentially miniature programs. They can be as simple as a piece of text to send to the channel, or as complex as a game of russian roulette or mastermind. See "%HELPCMD% factoids creating" for help with creating factoids, and other subpages for other relevant help. "%HELPCMD% factoids executing" offers help on how to actually run a factoid. "%HELPCMD% factoids scope" explains the concept of scope and how it applies to factoids. You should read that one first, as the factoid command is actually invoked slightly differently depending on the scope you want it to run in.
factoids.creating=To create a factoid, you use "~factoid create <name> <contents>". For example, to create a factoid named "example" that simply prints "Hello world!", you could use "~factoid create example Hello world!". Note that factoid names cannot contain spaces, and they must start with a letter or a number. Note also that the value of the factoid can be a single pastebin URL, in which case the contents of the pastebin post will be extracted and used as the factoid contents. This can be used when multiple lines are needed in the factoid, or when the factoid is so long that it can't be sent in a single message to the bot. To create a global or server factoid, use "~factoid server create ..." or "~factoid global create ..." instead of "~factoid create ...", which creates a channel factoid. See "%HELPCMD% factoids scope" for the difference between server, global, and channel factoids. The contents of a factoid are discussed more in "%HELPCMD% factoids syntax".
factoids.deleting=To delete a factoid, you use "~factoid delete <name>". For example, to delete a factoid named "example", you could use "~factoid delete example". Note that deleting a factoid is an irreversible operation, so you might want to use "~factoid literal" to get the literal contents of the factoid before deleting it, and "~factoid info" to see who created the factoid. It's generally considered bad etiquette to delete or replace (see "%HELPCMD% factoids editing") a factoid created by someone else without their permission. 
factoids.editing=To edit a factoid, you could just do "~factoid delete <name>" followed by "~factoid create <name> <contents>". But there's an easier way: "~factoid replace <name> <contents>" is a shorthand for the former two commands.
factoids.executing=To actually run a factoid, you can simply use the command "~name", where "name" is the name of your factoid and ~ is the bot's current trigger. For example, if we have a factoid called "example" whose contents are "Hello world!", and the bot is joined to #test with a trigger of "~", then sending "~example" to #test would cause the bot to send "Hello world!" to #test.
factoids.info=You can get information about when the factoid was created, who created it, how many times it's been run, and so on, by using "~factoid info <name>", where <name> is the name of the factoid.
factoids.literal=You can get the literal value of a factoid (IE its actual contents; the contents used when initially creating a factoid) with "~factoid literal <name>", where <name> is the name of the factoid.
factoids.restricting=If you don't want just anyone to be able to run a particular factoid (for example, a factoid that kicks users out of a channel generally shouldn't be run by just anyone), you can use "~factoid restrict <name>". This will restrict the factoid so that only superops can run it. "~factoid unrestrict <name>" unrestricts a previously-restricted factoid, and "~factoid isrestricted <name>" tells you if the factoid is currently restricted. If you need more fine-grained control over who uses a factoi, you could use the {hostname} function in your factoid itself and check against a list of hostnames.
factoids.scope=Factoids have a particular scope assigned to them. See "%HELPCMD% scope" for the topic of scope in general. The factoid command can be used either as "~factoid", "~factoid server", or "~factoid global". The first one creates a factoid only at the current channel, the second one creates a factoid at the current server, and the third one creates a global factoid. Two different channels can have a channel-specific factoid with the same name, and a channel can have a factoid with the same name as a factoid of the server that the channel is on; the channel-specific factoid will override the server factoid when it's run at the channel it was created on. Throughout most of the documentation, when you see a command such as "~factoid create ...", you can also run that as "~factoid server create ..." or "~factoid global create ..." to alter its scope. There are some commands, such as "~factoid search", "~factoid locate", and "~factoid scope", that don't have a concept of scope and therefore act exactly the same regardless of whether they're invoked as "~factoid global search" or anything like that.
funclist=A web-visible list of functions is available at http://code.google.com/p/jzbot/wiki/FactoidFunctions . This is sometimes out of date; "%HELPCMD% functions --" should always be used for an authoritative list of functions. 
functions=Functions are pieces of text that you can embed within a factoid that cause it to do special stuff like use "/me" to send a message or run another factoid some time into the future. Each subpage of this page is the name of a function that you can use within a factoid. Use "%HELPCMD% functions --" to pastebin a list of functions and their descriptions.
perms=%SELFNICK% maintains a list of "superops", and a list of "ops" at each channel. Superops are the users that can modify configuration, shut down the bot, modify global factoids, and such. Ops at a channel can modify that channel's factoids, add regexes to the channel, change the channel's trigger, and such. All users are referred to by their hostname or hostmask.
perms.superop=Superops have permission to shutdown and reconnect the bot, modify configuration with the "config" command, redefine commands with the "redefine" command, modify global factoids, and tell the bot to join or leave channels. Superops are also counted as "ops" at all channels that the bot joins. \n\
See "%HELPCMD% perms superop add" for help on adding a new superop, "%HELPCMD% perms superop delete" for help on removing a superop, and "%HELPCMD% perms superop list" for help on listing superops.
perms.superop.add=To add a new superop, send "superop add <hostname>" to the bot, where <hostname> is the hostname or hostmask of the user you want to add as a superop. Any user with that hostname or hostmask will be a superop from then on.
perms.superop.delete=To remove an existing superop, send "superop delete <hostname>" to the bot, where <hostname> is the hostname or hostmask of the user you want to remove as a superop. The user with that hostname or hostmask will no longer be a superop.
perms.superop.list=To get a list of all current superops, send "superop list" to the bot. The bot will reply with a list of hostnames that have superop privileges. If the list is dineso long that the bot floods itself off of the network, send "config delay 2000" to slow down how often the bot sends messages, and then try again.
support=If you need technical support, you can either visit http://jzbot.googlecode.com and look around there, or connect to irc.freenode.net and join #jzbot and ask for help. We're always willing to help out. 
usinghelp=To use %SELFNICK%'s built-in help, you can either send messages to the bot directly, or you can send messages at a channel that start with the bot's trigger. Try sending "help" in a pm to the bot, or send "%SELFNICK%: help" at a channel that I'm joined to. Either way, each help page can have a bunch of "subpages", which are help pages that describe more about the help page you're reading. For example, the "factoids" help page has a subpage called "syntax". To read a subpage, you use the exact same command that you used to get the parent help page, but you add a space followed by the name of the subpage onto the end of the command. For example, to read the subpage "syntax" of the page "factoids", you would use "%HELPCMD% factoids syntax". Note that within this help, if you see something like "~something", you should replace ~ with the bot's current trigger or the bot's name followed by a space and a colon or a comma. For example, if a help topic tells you to run the command "~factoid list", then you could run this either by replacing ~ with the bot's trigger, or you could run it by sending "%SELFNICK%: factoid list" to a channel the bot is at. Or you can just send a message directly to the bot; see "%HELPCMD% invocation" for more info.

