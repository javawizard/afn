The bot comes with a (superop-only at present) command, namely "~factoid export", that allows for exporting all of the factoids that the bot contains. It exports in its own custom format (based on the .props format) all of the factoids on a particular server (including both channel-specific and global factoids) along with all of the information about those factoids.

There is a corresponding "~factoid import" command that imports all of the factoids in a particular export file, passed in as a pastebin link.

The format of the file is actually quite simple. Both factoid names and factoid values are URL-encoded before being inserted into the properties file so that special characters won't mess up the properties file. For each factoid, there is key named "factoid:<channel>:<name>", where <name> is the name of the factoid (URL-encoded, as specified above), and <channel> is the URL-encoded name of the channel the factoid is at or the empty string if the factoid is global. The value of this property is the factoid's text (URL-encoded, as usual; I'm going to quit mentioning this). There are also the properties "active", "restricted", "library", "creator", "creatorusername", "creatornick", "creationtime", "directrequests", "indirectrequests", "factpack", "uninstall", and "attribution", which correspond respectively to the properties of the Factoid interface in JZBot. The values of "creator", "creatorusername", "creatornick", and "attribution" are URL-encoded when inserted as values; the rest are not. Null values in any of these attributes are represented by the corresponding property being omitted.

The importer does not check for correct factoid syntax when importing exported factoid sets. It does, however, check to make sure that there are not any factoids with conflicting names; if there are, the user is notified about this, and the user can use "~factoid +import" instead of "~factoid import" to force those factoids to be overwritten.

I'm primarily writing the factoid exporter so that I can export and then import all of the factoids from the various jzbots that I run when I transition them to all use a single JZBot instance; see multiserver.txt for information on this transition. 