Factpack files are basically just ".props"-format files, but with a bunch of properties. This file contains a list of these properties. For all properties that run a piece of text as a factoid program while the factpack is being installed or uninstalled, the property "factpack-channel" will be set to the channel that the factoid is being installed to, or the empty string if the factoid is being installed globally. The property "factpack-data" will be set to any additional data the user provides at the end of the message that is used to install the factpack. For example, "factoid pack install local.games.roulette this is some data" would install local.games.roulette with %factpack-data% being equal to "this is some data". This data is not set when the factoids are run once the factpack is installed, however, so if any data is to be retained the postinstall script should save it as a persistent variable. The property "factpack-name" is also set to the canonical name of the factpack.

Anyway, here are the properties:

name (required): This is the canonical name of the factoid, and is used internally to track which factoids came from which factpacks. For factpacks installed from an external source, this should follow Java package name convention (IE starts with the reverse of a domain name related to the factoid, plus other info, and must contain at least one "." character). For factpacks installed from an internal source, this should be of the format "local.<category>.<name>".

For local factpacks, <category> is currently one of:

  "games" (for factoids that implement games specifically, such as roulette or mastermind) 
  "misc" (for factpacks that don't really fit into a category)
  "com" (for communications-related factpacks) 
  "library" (for factpacks that are intended to be used as utilities by other factoids, not directly run by users) 
  "admin" (for factpacks that are generally related to IRC channel/server administration)
  "stats" (for factpacks that provide statistics about channels or the bot)

author: Not required, but generally preferred. Contains a list of authors of the factpack in whatever format the author wants.

description: Describes the factoid. Lines within this property (which are separated by newlines) should not be longer than about 400 characters each, and there should generally be not more than 3 or 4 lines.

depends: A pipe-separated list of the canonical names of factpacks that should already be installed, in the format "<scope>:<name>". After each factpack name, preceded by a comma, can be a message that should be shown if the factpack is not installed. For example, this property could have the value "local.library.randomresline,The randomresline library is required to choose resource lines, and this factpack will not work without it.|local.com.pvarserver,The pvarserver utility is required for this factpack to serve up its statistics pages". Dependencies are checked *after* the preinstall script is run. If there is a missing dependency which is a locally-present factpack, the bot will tell the user that the factpack is locally present and that they should install it first. If the dependency is not present and not locally known, the bot won't give the user any additional info, so the message should have info about where to install it. <scope> can be one of "exact", "any", or "global". "exact" indicates that the dependency must exist exactly at the level that this factpack was installed at. "any" indicates that the dependency must exist either exactly at this factpack's level, or as a global factpack. "global" indicates that this factpack must be a global factpack.

preinstall: This is a program (in factoid language) to run before anything is installed. If it evaluates to anything, then the message will be sent to the user. If it sets the local variable "fail" to "1", then the factoid will not be installed, and it will be assumed that the message that this program sends to the user contains information on why installing the factoid failed. This can be used to validate some precondition, such as that another factpack has been installed, or that some specific settings have been set on the bot.

postinstall: This is a program (in factoid language) to run after everything is installed. This cannot cause installation to fail, but if it evaluates to anything, the message will be sent to the user.

scope: Specifies the scope that the factoid requires. This currently can be "channel", "global", "both", or "any". "channel" specifies that the factoid must be installed to a specific channel, and that the factpack will not install any global factoids specifically. "global" specifies that the factoid must be installed globally. "both" specifies that the factoid must be installed to a particular channel, but that it needs to install global factoids in the process. "any" specifies that the factoid can be installed either globally or to a channel, and it will only install factoids in the scope that it was targeted to. "channel" factpacks require op permissions at the channel when installing, "global" factpacks and "both" factpacks require superop permissions when installing, and "any" factpacks require either superop or op permissions, depending on where the factpack is installed to.

g.*: Adds a global factoid called "*". These can only be used when the scope is global or both.

c.*: Adds a channel-specific factoid called "*". These can only be used when the scope is channel or both.

t.*: Adds a factoid either globally or to a channel, depending on what target the user has specified for the factpack to be installed to. This can only be used when the scope is any.

rename.*: Specifies a factoid language program that will be evaluated before the property "*" that would install a factoid is run. The result is used as the name for that factoid. If the result is empty, then the factoid is omitted. For example, if there was a property called "g.test", and a property called "rename.g.test" whose value was "other", then this would have the exact same effect as if there was only one property called "g.other".

restrict.*: Same format as rename.*, but specifies whether the factoid is restricted. If this evaluates to 1, the factoid will be restricted, and if it evaluates to 0, the factoid will not be restricted.

preuninstall (not yet supported): Specifies a factoid language program that will be run before the factpack is uninstalled.

postuninstall (not yet supported): Specifies a factoid language program that will be run after the factpack is uninstalled.