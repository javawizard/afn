/* This file was generated by SableCC (http://www.sablecc.org/). */

package expression.analysis;

import expression.node.*;

public interface Analysis extends Switch
{
    Object getIn(Node node);
    void setIn(Node node, Object o);
    Object getOut(Node node);
    void setOut(Node node, Object o);

    void caseStart(Start node);
    void caseAExpr(AExpr node);
    void caseANextAddp(ANextAddp node);
    void caseAInAddp(AInAddp node);
    void caseANextSubp(ANextSubp node);
    void caseAInSubp(AInSubp node);
    void caseANextMulp(ANextMulp node);
    void caseAInMulp(AInMulp node);
    void caseANextDivp(ANextDivp node);
    void caseAInDivp(AInDivp node);
    void caseANextUnmp(ANextUnmp node);
    void caseAInUnmp(AInUnmp node);
    void caseANumberTerm(ANumberTerm node);
    void caseAParensTerm(AParensTerm node);

    void caseTNumber(TNumber node);
    void caseTPlus(TPlus node);
    void caseTMinus(TMinus node);
    void caseTMult(TMult node);
    void caseTDiv(TDiv node);
    void caseTMod(TMod node);
    void caseTLPar(TLPar node);
    void caseTRPar(TRPar node);
    void caseTBlank(TBlank node);
    void caseEOF(EOF node);
}
