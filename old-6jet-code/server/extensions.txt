Each 6jet file's final extension represents the style of content in it. The extensions currently used are .zip, .txt, .properties, and .jso (which is a java serialized object or object list). .xml and .tar.gz might be included in the future.

Right before that, there is an extension specific to 6jet that indicates what the file is actually for. Each of these extensions specifies which final extension must immediately follow it.



.6jm.zip: A music file, which holds music to be played and the jet firing pattern.

.6jl.txt: A 6jet playlist file.

.6jf.txt: A jet firing file. These are typically only seen inside a .6jm.zip file. This file is what the server actually uses when playing back music to figure out when to fire each jet.

.6jp.jso: A jet designer pattern file. These are typicall only seen inside a .6jm.zip file. This file is what 6jet designer actually reads when a user opens a designer project. the designer then converts this into a .6jf.jso when saving.

.6js.txt: A 6jet schedule file. The server typically only has one of these.

.6ja.properties: An authentication file. Keys are usernames and values are SHA-512 passwords.

.6jd.txt: A 6jet descriptor file. This describes to the server, and to the controller and designer, how many jets there are in the fountain, and what positions they are physically located at (on an xy grid that can be used for the manual jet control frame in 6jet controller). The server requires this when starting, the controller automatically downloads it from the server, and the designer requires it when creating a new music file (the controller can export it, which is the main method of getting it into the designer).
















